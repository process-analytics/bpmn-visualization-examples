var e,t,r;!function(e){e.CALLING_PROCESS="process"}(e||(e={})),function(e){e.LANE="lane",e.POOL="pool",e.CALL_ACTIVITY="callActivity",e.SUB_PROCESS="subProcess",e.TASK="task",e.TASK_USER="userTask",e.TASK_SERVICE="serviceTask",e.TASK_RECEIVE="receiveTask",e.TASK_SEND="sendTask",e.TASK_MANUAL="manualTask",e.TASK_SCRIPT="scriptTask",e.TASK_BUSINESS_RULE="businessRuleTask",e.TEXT_ANNOTATION="textAnnotation",e.GATEWAY_PARALLEL="parallelGateway",e.GATEWAY_EXCLUSIVE="exclusiveGateway",e.GATEWAY_INCLUSIVE="inclusiveGateway",e.EVENT_START="startEvent",e.EVENT_END="endEvent",e.EVENT_INTERMEDIATE_CATCH="intermediateCatchEvent",e.EVENT_INTERMEDIATE_THROW="intermediateThrowEvent",e.EVENT_BOUNDARY="boundaryEvent"}(t||(t={})),function(e){e.NONE="none",e.TERMINATE="terminate",e.CANCEL="cancel",e.COMPENSATION="compensate",e.CONDITIONAL="conditional",e.ERROR="error",e.ESCALATION="escalation",e.LINK="link",e.MESSAGE="message",e.SIGNAL="signal",e.TIMER="timer"}(r||(r={}));const n=Object.values(r).filter(e=>e!=r.NONE),i=[r.TERMINATE,r.TIMER,r.MESSAGE,r.SIGNAL,r.LINK,r.ERROR,r.COMPENSATION,r.CANCEL,r.CONDITIONAL,r.ESCALATION];var o,s,a,l,c,u,p,d;!function(e){e.ADHOC="adhoc",e.COMPENSATION="compensation",e.EXPAND="expand",e.LOOP="loop",e.MULTI_INSTANCE_PARALLEL="parallel multi instance",e.MULTI_INSTANCE_SEQUENTIAL="sequential multi instance"}(o||(o={})),function(e){e.EMBEDDED="embedded",e.EVENT="event"}(s||(s={}));class h{static filterKind(e,r=!1){return Object.values(t).filter(t=>r?t.endsWith(e)||t.toLowerCase().endsWith(e.toLowerCase()):t.endsWith(e))}static isEvent(e){return this.EVENT_KINDS.includes(e)}static isCallActivity(e){return t.CALL_ACTIVITY===e}static isSubProcess(e){return t.SUB_PROCESS===e}static isBoundaryEvent(e){return t.EVENT_BOUNDARY===e}static isStartEvent(e){return t.EVENT_START===e}static canHaveNoneEvent(e){return t.EVENT_INTERMEDIATE_THROW===e||t.EVENT_END===e||t.EVENT_START===e}static isActivity(e){return this.ACTIVITY_KINDS.includes(e)}static isWithDefaultSequenceFlow(e){return this.FLOWNODE_WITH_DEFAULT_SEQUENCE_FLOW_KINDS.includes(e)}static topLevelBpmnEventKinds(){return this.EVENT_KINDS}static activityKinds(){return this.ACTIVITY_KINDS}static taskKinds(){return this.TASK_KINDS}static gatewayKinds(){return this.GATEWAY_KINDS}static flowNodeKinds(){return Object.values(t).filter(e=>!h.isPoolOrLane(e))}static isPoolOrLane(e){return e==t.POOL||e==t.LANE}}h.EVENT_KINDS=h.filterKind("Event"),h.GATEWAY_KINDS=h.filterKind("Gateway"),h.TASK_KINDS=h.filterKind("Task",!0),h.ACTIVITY_KINDS=[...h.TASK_KINDS,t.CALL_ACTIVITY,t.SUB_PROCESS],h.FLOWNODE_WITH_DEFAULT_SEQUENCE_FLOW_KINDS=[...h.ACTIVITY_KINDS,t.GATEWAY_EXCLUSIVE,t.GATEWAY_INCLUSIVE],function(e){e.NORMAL="normal",e.DEFAULT="default",e.CONDITIONAL_FROM_ACTIVITY="conditional_from_activity",e.CONDITIONAL_FROM_GATEWAY="conditional_from_gateway"}(a||(a={})),function(e){e.ARROW_DASH="bpmn.dash"}(l||(l={})),function(e){e[e.STROKE_WIDTH_THIN=2]="STROKE_WIDTH_THIN",e[e.STROKE_WIDTH_THICK=5]="STROKE_WIDTH_THICK",e[e.SHAPE_ACTIVITY_BOTTOM_MARGIN=7]="SHAPE_ACTIVITY_BOTTOM_MARGIN",e[e.SHAPE_ACTIVITY_TOP_MARGIN=7]="SHAPE_ACTIVITY_TOP_MARGIN",e[e.SHAPE_ACTIVITY_LEFT_MARGIN=7]="SHAPE_ACTIVITY_LEFT_MARGIN",e[e.SHAPE_ACTIVITY_FROM_CENTER_MARGIN=7]="SHAPE_ACTIVITY_FROM_CENTER_MARGIN",e[e.SHAPE_ACTIVITY_MARKER_ICON_MARGIN=5]="SHAPE_ACTIVITY_MARKER_ICON_MARGIN",e[e.SHAPE_ACTIVITY_MARKER_ICON_SIZE=20]="SHAPE_ACTIVITY_MARKER_ICON_SIZE",e[e.POOL_LABEL_SIZE=30]="POOL_LABEL_SIZE",e[e.LANE_LABEL_SIZE=30]="LANE_LABEL_SIZE",e.DEFAULT_FILL_COLOR="White",e.DEFAULT_STROKE_COLOR="Black",e.DEFAULT_FONT_FAMILY="Arial, Helvetica, sans-serif",e[e.DEFAULT_FONT_SIZE=11]="DEFAULT_FONT_SIZE",e.DEFAULT_FONT_COLOR="Black",e[e.DEFAULT_MARGIN=0]="DEFAULT_MARGIN",e[e.DEFAULT_DASHED=0]="DEFAULT_DASHED",e[e.DEFAULT_FIX_DASH=0]="DEFAULT_FIX_DASH",e.DEFAULT_DASH_PATTERN="3 3"}(c||(c={})),function(e){e.BPMN_STYLE_EVENT_KIND="bpmn.eventKind",e.BPMN_STYLE_SUB_PROCESS_KIND="bpmn.subProcessKind",e.BPMN_STYLE_IS_INTERRUPTING="bpmn.isInterrupting",e.BPMN_STYLE_MARKERS="bpmn.markers",e.BPMN_STYLE_INSTANTIATING="bpmn.isInstantiating",e.BPMN_STYLE_IS_INITIATING="bpmn.isInitiating",e.BPMN_STYLE_MESSAGE_FLOW_ICON="bpmn.messageFlowIcon"}(u||(u={}));class g{static getFillColor(e){return mxUtils.getValue(e,mxConstants.STYLE_FILLCOLOR,c.DEFAULT_FILL_COLOR)}static getStrokeColor(e){return mxUtils.getValue(e,mxConstants.STYLE_STROKECOLOR,c.DEFAULT_STROKE_COLOR)}static getStrokeWidth(e){return mxUtils.getValue(e,mxConstants.STYLE_STROKEWIDTH,c.STROKE_WIDTH_THIN)}static getMargin(e){return mxUtils.getValue(e,mxConstants.STYLE_MARGIN,c.DEFAULT_MARGIN)}static isDashed(e){return mxUtils.getValue(e,mxConstants.STYLE_DASHED,c.DEFAULT_DASHED)}static isFixDash(e){return mxUtils.getValue(e,mxConstants.STYLE_FIX_DASH,c.DEFAULT_FIX_DASH)}static getDashPattern(e){return mxUtils.getValue(e,mxConstants.STYLE_DASH_PATTERN,c.DEFAULT_DASH_PATTERN)}static getBpmnEventKind(e){return mxUtils.getValue(e,u.BPMN_STYLE_EVENT_KIND,r.NONE)}static getBpmnSubProcessKind(e){return mxUtils.getValue(e,u.BPMN_STYLE_SUB_PROCESS_KIND,void 0)}static getBpmnIsInterrupting(e){return mxUtils.getValue(e,u.BPMN_STYLE_IS_INTERRUPTING,void 0)}static getBpmnMarkers(e){return mxUtils.getValue(e,u.BPMN_STYLE_MARKERS,void 0)}static getBpmnIsInstantiating(e){return JSON.parse(mxUtils.getValue(e,u.BPMN_STYLE_INSTANTIATING,!1))}static getBpmnIsInitiating(e){return mxUtils.getValue(e,u.BPMN_STYLE_IS_INITIATING,void 0)}}class m{constructor(e,t,r,n,i){this.id=e,this.bpmnElement=t,this.bounds=r,this.label=n,this.isHorizontal=i}}class T{constructor(e,t,r,n,i=!1){this.id=e,this.name=t,this.kind=r,this.parentId=n,this.instantiate=i}}class f extends T{constructor(e,t,r,n,i,o=[]){super(e,t,r,n,i),this.markers=o}}class E extends f{constructor(e,r,n,i,o){super(e,r,t.CALL_ACTIVITY,i,void 0,o),this.callActivityKind=n}}class b extends f{constructor(e,r,n,i,o){super(e,r,t.SUB_PROCESS,i,void 0,o),this.subProcessKind=n}}class v extends T{constructor(e,t,r,n,i){super(e,t,r,i),this.eventKind=n}}class S extends v{constructor(e,r,n,i,o){super(e,r,t.EVENT_START,n,i),this.isInterrupting=o}}class A extends v{constructor(e,r,n,i,o=!0){super(e,r,t.EVENT_BOUNDARY,n,i),this.isInterrupting=o}}class I{constructor(e,t,r){this.id=e,this.name=t,this.processRef=r}}!function(e){e.SEQUENCE_FLOW="sequenceFlow",e.MESSAGE_FLOW="messageFlow",e.ASSOCIATION_FLOW="association"}(p||(p={})),function(e){e.NONE="None",e.ONE="One",e.BOTH="Both"}(d||(d={}));class w{constructor(e,t,r,n,i){this.id=e,this.name=t,this.kind=r,this.sourceRefId=n,this.targetRefId=i}}class N extends w{constructor(e,t,r,n,i=a.NORMAL){super(e,t,p.SEQUENCE_FLOW,r,n),this.sequenceFlowKind=i}}class L extends w{constructor(e,t,r,n){super(e,t,p.MESSAGE_FLOW,r,n)}}class O extends w{constructor(e,t,r,n,i=d.NONE){super(e,t,p.ASSOCIATION_FLOW,r,n),this.associationDirectionKind=i}}class C{constructor(e){this.graph=e,this.specificFlowStyles=new Map([[p.SEQUENCE_FLOW,e=>{e[mxConstants.STYLE_ENDARROW]=mxConstants.ARROW_BLOCK_THIN}],[p.MESSAGE_FLOW,e=>{e[mxConstants.STYLE_DASHED]=!0,e[mxConstants.STYLE_DASH_PATTERN]="8 5",e[mxConstants.STYLE_STARTARROW]=mxConstants.ARROW_OVAL,e[mxConstants.STYLE_STARTSIZE]=8,e[mxConstants.STYLE_STARTFILL]=!1,e[mxConstants.STYLE_ENDARROW]=mxConstants.ARROW_BLOCK_THIN,e[mxConstants.STYLE_ENDFILL]=!1}],[p.ASSOCIATION_FLOW,e=>{e[mxConstants.STYLE_DASHED]=!0,e[mxConstants.STYLE_DASH_PATTERN]="1 2",e[mxConstants.STYLE_ENDARROW]=mxConstants.ARROW_OPEN_THIN,e[mxConstants.STYLE_STARTARROW]=mxConstants.ARROW_OPEN_THIN,e[mxConstants.STYLE_STARTSIZE]=12}]]),this.specificSequenceFlowStyles=new Map([[a.DEFAULT,e=>{e[mxConstants.STYLE_STARTARROW]=l.ARROW_DASH}],[a.CONDITIONAL_FROM_ACTIVITY,e=>{e[mxConstants.STYLE_STARTARROW]=mxConstants.ARROW_DIAMOND_THIN,e[mxConstants.STYLE_STARTSIZE]=18,e[mxConstants.STYLE_STARTFILL]=!1}]]),this.specificAssociationFlowStyles=new Map([[d.NONE,e=>{e[mxConstants.STYLE_STARTARROW]=void 0,e[mxConstants.STYLE_ENDARROW]=void 0,e[mxConstants.STYLE_EDGE]=void 0}],[d.ONE,e=>{e[mxConstants.STYLE_STARTARROW]=void 0,e[mxConstants.STYLE_EDGE]=void 0}],[d.BOTH,e=>{e[mxConstants.STYLE_EDGE]=void 0}]])}configureStyles(){mxConstants.RECTANGLE_ROUNDING_FACTOR=.1,this.configureDefaultVertexStyle(),this.configurePoolStyle(),this.configureLaneStyle(),this.configureTextAnnotationStyle(),this.configureActivityStyles(),this.configureEventStyles(),this.configureGatewayStyles(),this.configureDefaultEdgeStyle(),this.configureFlowStyles()}getStylesheet(){return this.graph.getStylesheet()}getDefaultVertexStyle(){return this.getStylesheet().getDefaultVertexStyle()}getDefaultEdgeStyle(){return this.getStylesheet().getDefaultEdgeStyle()}cloneDefaultVertexStyle(){const e=this.getDefaultVertexStyle();return mxUtils.clone(e)}cloneDefaultEdgeStyle(){const e=this.getDefaultEdgeStyle();return mxUtils.clone(e)}putCellStyle(e,t){this.getStylesheet().putCellStyle(e,t)}configureDefaultVertexStyle(){const e=this.getDefaultVertexStyle();this.configureCommonDefaultStyle(e)}configurePoolStyle(){const e=this.cloneDefaultVertexStyle();e[mxConstants.STYLE_SHAPE]=mxConstants.SHAPE_SWIMLANE,e[mxConstants.STYLE_VERTICAL_ALIGN]=mxConstants.ALIGN_MIDDLE,e[mxConstants.STYLE_ALIGN]=mxConstants.ALIGN_CENTER,e[mxConstants.STYLE_STARTSIZE]=c.POOL_LABEL_SIZE,this.graph.getStylesheet().putCellStyle(t.POOL,e)}configureLaneStyle(){const e=this.cloneDefaultVertexStyle();e[mxConstants.STYLE_SHAPE]=mxConstants.SHAPE_SWIMLANE,e[mxConstants.STYLE_VERTICAL_ALIGN]=mxConstants.ALIGN_MIDDLE,e[mxConstants.STYLE_ALIGN]=mxConstants.ALIGN_CENTER,e[mxConstants.STYLE_SWIMLANE_LINE]=0,e[mxConstants.STYLE_STARTSIZE]=c.LANE_LABEL_SIZE,this.graph.getStylesheet().putCellStyle(t.LANE,e)}configureEventStyles(){h.topLevelBpmnEventKinds().forEach(e=>{const t=this.cloneDefaultVertexStyle();t[mxConstants.STYLE_SHAPE]=e,t[mxConstants.STYLE_PERIMETER]=mxPerimeter.EllipsePerimeter,t[mxConstants.STYLE_VERTICAL_LABEL_POSITION]=mxConstants.ALIGN_BOTTOM,this.putCellStyle(e,t)})}configureTextAnnotationStyle(){const e=this.cloneDefaultVertexStyle();e[mxConstants.STYLE_SHAPE]=t.TEXT_ANNOTATION,e[mxConstants.STYLE_VERTICAL_ALIGN]=mxConstants.ALIGN_MIDDLE,e[mxConstants.STYLE_ALIGN]=mxConstants.ALIGN_LEFT,e[mxConstants.STYLE_SPACING_LEFT]=5,this.putCellStyle(t.TEXT_ANNOTATION,e)}configureActivityStyles(){h.activityKinds().forEach(e=>{const t=this.cloneDefaultVertexStyle();t[mxConstants.STYLE_SHAPE]=e,t[mxConstants.STYLE_VERTICAL_ALIGN]=mxConstants.ALIGN_MIDDLE,this.putCellStyle(e,t)})}configureGatewayStyles(){h.gatewayKinds().forEach(e=>{const t=this.cloneDefaultVertexStyle();t[mxConstants.STYLE_SHAPE]=e,t[mxConstants.STYLE_PERIMETER]=mxPerimeter.RhombusPerimeter,t[mxConstants.STYLE_VERTICAL_ALIGN]=mxConstants.ALIGN_TOP,t[mxConstants.STYLE_LABEL_POSITION]=mxConstants.ALIGN_LEFT,t[mxConstants.STYLE_VERTICAL_LABEL_POSITION]=mxConstants.ALIGN_TOP,this.putCellStyle(e,t)})}configureDefaultEdgeStyle(){const e=this.getDefaultEdgeStyle();e[mxConstants.STYLE_EDGE]=mxConstants.EDGESTYLE_SEGMENT,e[mxConstants.STYLE_ENDSIZE]=12,e[mxConstants.STYLE_STROKEWIDTH]=1.5,e[mxConstants.STYLE_ROUNDED]=1,e[mxConstants.STYLE_ARCSIZE]=5,e[mxConstants.STYLE_VERTICAL_ALIGN]=mxConstants.ALIGN_BOTTOM,delete e[mxConstants.STYLE_ENDARROW],this.configureCommonDefaultStyle(e)}configureCommonDefaultStyle(e){e[mxConstants.STYLE_FONTFAMILY]=c.DEFAULT_FONT_FAMILY,e[mxConstants.STYLE_FONTSIZE]=c.DEFAULT_FONT_SIZE,e[mxConstants.STYLE_FONTCOLOR]=c.DEFAULT_FONT_COLOR,e[mxConstants.STYLE_FILLCOLOR]=c.DEFAULT_FILL_COLOR,e[mxConstants.STYLE_STROKECOLOR]=c.DEFAULT_STROKE_COLOR,e[mxConstants.STYLE_LABEL_BACKGROUNDCOLOR]=mxConstants.NONE,e[mxConstants.STYLE_WHITE_SPACE]="wrap"}configureEdgeStyles(e,t){e.forEach(e=>{const r=this.cloneDefaultEdgeStyle();(t.get(e)||(()=>{}))(r),this.graph.getStylesheet().putCellStyle(e.toString(),r)})}configureSequenceFlowStyles(){this.configureEdgeStyles(Object.values(a),this.specificSequenceFlowStyles)}configureAssociationFlowStyles(){this.configureEdgeStyles(Object.values(d),this.specificAssociationFlowStyles)}configureFlowStyles(){this.configureEdgeStyles(Object.values(p),this.specificFlowStyles),this.configureSequenceFlowStyles(),this.configureAssociationFlowStyles()}computeStyle(e,r){var n,i;const s=new Map,a=[null===(n=e.bpmnElement)||void 0===n?void 0:n.kind],l=e.bpmnElement;if(e instanceof m)if(l instanceof v)s.set(u.BPMN_STYLE_EVENT_KIND,l.eventKind),(l instanceof A||l instanceof S&&void 0!==l.isInterrupting)&&s.set(u.BPMN_STYLE_IS_INTERRUPTING,String(l.isInterrupting));else if(l instanceof f){l instanceof b?s.set(u.BPMN_STYLE_SUB_PROCESS_KIND,l.subProcessKind):l.kind===t.TASK_RECEIVE&&s.set(u.BPMN_STYLE_INSTANTIATING,l.instantiate.toString());const e=l.markers;e.length>0&&s.set(u.BPMN_STYLE_MARKERS,e.join(","))}else h.isPoolOrLane(l.kind)&&s.set(mxConstants.STYLE_HORIZONTAL,e.isHorizontal?"0":"1");else l instanceof N&&a.push(l.sequenceFlowKind),l instanceof O&&a.push(l.associationDirectionKind);const c=null===(i=e.label)||void 0===i?void 0:i.font;return c&&(s.set(mxConstants.STYLE_FONTFAMILY,c.name),s.set(mxConstants.STYLE_FONTSIZE,c.size),s.set(mxConstants.STYLE_FONTSTYLE,C.getFontStyleValue(c))),r?(s.set(mxConstants.STYLE_VERTICAL_ALIGN,mxConstants.ALIGN_TOP),e.bpmnElement.kind!=t.TEXT_ANNOTATION&&s.set(mxConstants.STYLE_ALIGN,mxConstants.ALIGN_CENTER),e instanceof m&&(s.set(mxConstants.STYLE_LABEL_WIDTH,r.width+1),s.set(mxConstants.STYLE_LABEL_POSITION,mxConstants.ALIGN_TOP),s.set(mxConstants.STYLE_VERTICAL_LABEL_POSITION,mxConstants.ALIGN_LEFT))):e instanceof m&&(l instanceof b||l instanceof E)&&!l.markers.includes(o.EXPAND)&&s.set(mxConstants.STYLE_VERTICAL_ALIGN,mxConstants.ALIGN_TOP),[].concat([...a]).concat([...s].filter(([,e])=>e).map(([e,t])=>e+"="+t)).join(";")}computeMessageFlowIconStyle(e){return`shape=${u.BPMN_STYLE_MESSAGE_FLOW_ICON};${u.BPMN_STYLE_IS_INITIATING}=${e.messageVisibleKind}`}static getFontStyleValue(e){let t=0;return e.isBold&&(t+=mxConstants.FONT_BOLD),e.isItalic&&(t+=mxConstants.FONT_ITALIC),e.isStrikeThrough&&(t+=mxConstants.FONT_STRIKETHROUGH),e.isUnderline&&(t+=mxConstants.FONT_UNDERLINE),t}}function y(e,t,r,n){let i,o;e.height<e.width||e.height==e.width&&r.w<=r.h?(i=r.w,o=r.w*e.height/e.width):(i=r.h*e.width/e.height,o=r.h);const s=t.strokeWidth?2*(t.strokeWidth-1):0;return{width:i*n-s,height:o*n-s}}class x{constructor({mxCanvas:e,shapeConfiguration:t,iconConfiguration:r}){this.iconPaintingOriginX=0,this.iconPaintingOriginY=0,this.c=e,this.shapeConfiguration=t,this.iconOriginalSize=r.originalSize;const n=r.ratioFromShape;if(n){const e=y(this.iconOriginalSize,r.style,this.shapeConfiguration,n);this.scaleX=e.width/this.iconOriginalSize.width,this.scaleY=e.height/this.iconOriginalSize.height}else this.scaleX=1,this.scaleY=1;this.updateCanvasStyle(r.style),r.setIconOrigin(this)}setIconOriginToShapeTopLeftProportionally(e){const t=this.shapeConfiguration;this.iconPaintingOriginX=t.x+t.w/e,this.iconPaintingOriginY=t.y+t.h/e}setIconOriginToShapeTopLeft(e=c.SHAPE_ACTIVITY_TOP_MARGIN,t=c.SHAPE_ACTIVITY_LEFT_MARGIN){const r=this.shapeConfiguration;this.iconPaintingOriginX=r.x+t,this.iconPaintingOriginY=r.y+e}setIconOriginForIconCentered(){const e=this.shapeConfiguration;this.iconPaintingOriginX=e.x+(e.w-this.iconOriginalSize.width*this.scaleX)/2,this.iconPaintingOriginY=e.y+(e.h-this.iconOriginalSize.height*this.scaleY)/2}setIconOriginForIconBottomCentered(e=c.SHAPE_ACTIVITY_BOTTOM_MARGIN){const t=this.shapeConfiguration;this.iconPaintingOriginX=t.x+(t.w-this.iconOriginalSize.width*this.scaleX)/2,this.iconPaintingOriginY=t.y+(t.h-this.iconOriginalSize.height*this.scaleY-e)}setIconOriginForIconOnBottomLeft(e=c.SHAPE_ACTIVITY_BOTTOM_MARGIN,t=c.SHAPE_ACTIVITY_FROM_CENTER_MARGIN){const r=this.shapeConfiguration;this.iconPaintingOriginX=r.x+(r.w-this.iconOriginalSize.width*this.scaleX)/3-t,this.iconPaintingOriginY=r.y+(r.h-this.iconOriginalSize.height*this.scaleY-e)}translateIconOrigin(e,t){this.iconPaintingOriginX+=this.scaleX*e,this.iconPaintingOriginY+=this.scaleY*t}computeScaleFromOriginX(e){return this.iconPaintingOriginX+e*this.scaleX}computeScaleFromOriginY(e){return this.iconPaintingOriginY+e*this.scaleY}updateCanvasStyle({isFilled:e,strokeColor:t,fillColor:r,strokeWidth:n}){e?this.c.setFillColor(t):this.c.setFillColor(r),this.c.setStrokeWidth(n)}arcTo(e,t,r,n,i,o,s){this.c.arcTo(e*this.scaleX,t*this.scaleY,r,n,i,this.computeScaleFromOriginX(o),this.computeScaleFromOriginY(s))}begin(){this.c.begin()}close(){this.c.close()}curveTo(e,t,r,n,i,o){this.c.curveTo(this.computeScaleFromOriginX(e),this.computeScaleFromOriginY(t),this.computeScaleFromOriginX(r),this.computeScaleFromOriginY(n),this.computeScaleFromOriginX(i),this.computeScaleFromOriginY(o))}fill(){this.c.fill()}fillAndStroke(){this.c.fillAndStroke()}setFillColor(e){this.c.setFillColor(e)}stroke(){this.c.stroke()}setStrokeColor(e){this.c.setStrokeColor(e)}setRoundLineJoin(){this.c.setLineJoin("round")}lineTo(e,t){this.c.lineTo(this.computeScaleFromOriginX(e),this.computeScaleFromOriginY(t))}moveTo(e,t){this.c.moveTo(this.computeScaleFromOriginX(e),this.computeScaleFromOriginY(t))}rect(e,t,r,n){this.c.rect(this.computeScaleFromOriginX(e),this.computeScaleFromOriginY(t),r*this.scaleX,n*this.scaleY)}roundrect(e,t,r,n,i,o){this.c.roundrect(this.computeScaleFromOriginX(e),this.computeScaleFromOriginY(t),r*this.scaleX,n*this.scaleY,i,o)}ellipse(e,t,r,n){this.c.ellipse(this.computeScaleFromOriginX(e),this.computeScaleFromOriginY(t),r*this.scaleX,n*this.scaleY)}rotate(e,t,r,n,i){this.c.rotate(e,t,r,this.iconPaintingOriginX+n,this.iconPaintingOriginY+i)}}function _(e,t,r,n,i,o,s=.25,a=!1,l=0){return{c:e,ratioFromParent:s,setIconOrigin:e=>e.setIconOriginForIconCentered(),shape:{x:t,y:r,w:n,h:i,strokeWidth:o.strokewidth||g.getStrokeWidth(o.style)},icon:{isFilled:a,fillColor:o.fill||g.getFillColor(o.style),strokeColor:o.stroke||g.getStrokeColor(o.style),strokeWidth:l,margin:g.getMargin(o.style)}}}class D{paintEmptyIcon(){}newBpmnCanvas({c:e,ratioFromParent:t,setIconOrigin:r,shape:n,icon:i},o){return new x({mxCanvas:e,shapeConfiguration:n,iconConfiguration:{originalSize:o,style:i,ratioFromShape:t,setIconOrigin:r}})}paintEnvelopeIcon({c:e,ratioFromParent:t,setIconOrigin:r,shape:n,icon:i}){const o={width:485.41,height:321.76},s=this.newBpmnCanvas({c:e,ratioFromParent:t,setIconOrigin:r,shape:n,icon:i},o),a=o.width,l=o.height;s.rect(0,0,a,l),s.fillAndStroke(),i.isFilled&&s.setStrokeColor(i.fillColor),s.begin(),s.moveTo(0,0),s.lineTo(.5*a,.6*l),s.lineTo(a,0),s.moveTo(0,l),s.lineTo(a/3,.45*l),s.moveTo(a,l),s.lineTo(2*a/3,.45*l),s.stroke()}paintCircleIcon({c:e,ratioFromParent:t,setIconOrigin:r,shape:n,icon:i}){const o={width:n.w,height:n.h},s=this.newBpmnCanvas({c:e,ratioFromParent:t,setIconOrigin:r,shape:n,icon:i},o),a=o.width,l=o.height;a>0&&l>0&&s.ellipse(0,0,a,l),i.isFilled?s.fillAndStroke():s.stroke()}paintClockIcon({c:e,ratioFromParent:t,setIconOrigin:r,shape:n,icon:i}){const o=this.newBpmnCanvas({c:e,ratioFromParent:t,setIconOrigin:r,shape:n,icon:i},{height:152,width:152});o.begin(),o.moveTo(184,60),o.curveTo(188.4,60,192,56.4,192,52),o.lineTo(192,48),o.curveTo(192,40,188.4,40,184,40),o.curveTo(179.6,40,176,43.6,176,48),o.lineTo(176,52),o.curveTo(176,56.4,179.6,60,184,60),o.close(),o.moveTo(184,308),o.curveTo(179.6,308,176,311.6,176,316),o.lineTo(176,320),o.curveTo(176,324.4,179.6,328,184,328),o.curveTo(188.4,328,192,324.4,192,320),o.lineTo(192,316),o.curveTo(192,311.6,188.4,308,184,308),o.close(),o.moveTo(52,176),o.lineTo(48,176),o.curveTo(43.6,176,40,179.6,40,184),o.curveTo(40,188.4,43.6,192,48,192),o.lineTo(52,192),o.curveTo(56.4,192,69,188.4,60,184),o.curveTo(60,179.6,56.4,176,52,176),o.close(),o.moveTo(320,176),o.lineTo(316,176),o.curveTo(311.6,176,308,179.6,308,184),o.curveTo(308,188.4,311.6,192,316,192),o.lineTo(320,192),o.curveTo(324.4,192,328,188.4,328,184),o.curveTo(328,179.6,324.4,176,320,176),o.moveTo(93.6,82.4),o.curveTo(90.4,79.2,85.6,79.2,82.4,82.4),o.curveTo(79.2,85.6,79.2,90.4,82.4,93.6),o.lineTo(85.2,96.4),o.curveTo(86.8,98,88.8,98.8,90.8,98.8),o.curveTo(92.8,98.8,94.4,98,96.4,96.4),o.curveTo(99.6,93.2,99.6,88.4,96.4,85.2),o.lineTo(93.6,82.4),o.moveTo(85.2,271.6),o.lineTo(82.4,274.4),o.curveTo(79.2,277.6,79.2,282.4,82.4,285.6),o.curveTo(84,287.2,86,288,88,288),o.curveTo(90,288,92,287.2,93.6,285.6),o.lineTo(96.4,282.8),o.curveTo(99.6,279.6,99.6,274.8,96.4,271.6),o.curveTo(93.2,268.4,88.4,268.4,85.2,271.6),o.moveTo(274.4,82.4),o.lineTo(271.6,85.2),o.curveTo(268.4,88.4,268.4,93.2,271.6,96.4),o.curveTo(273.298,98,275.2,98.8,277.2,98.8),o.curveTo(279.2,98.8,281.2,98,282.8,96.4),o.lineTo(285.6,93.6),o.curveTo(288.8,90.4,288.8,85.6,285.6,82.4),o.curveTo(282.4,79.2,277.6,79.2,274.4,82.4),o.moveTo(192,180.8),o.lineTo(192,108),o.curveTo(192,103.6,188.4,100,184,100),o.curveTo(179.6,100,176,103.6,176,108),o.lineTo(176,184),o.curveTo(176,186,176.8,188,178.4,189.6),o.lineTo(266,277.2),o.curveTo(267.6,278.8,269.6,279.6,271.6,279.6),o.curveTo(273.6,279.6,275.6,278.8,277.2,277.2),o.curveTo(280.4,274,280.4,269.2,277.2,266),o.lineTo(192,180.8),o.moveTo(184,0),o.curveTo(82.4,0,0,82.4,0,184),o.curveTo(0,285.6,82.4,368,184,368),o.curveTo(285.6,368,368,285.6,368,184),o.curveTo(368,82.4,285.6,0,184,0),o.moveTo(184,352),o.curveTo(91.2,352,16,276.8,16,184),o.curveTo(16,91.2,91.2,16,184,16),o.curveTo(276.8,16,352,91.2,352,184),o.curveTo(352,276.8,276.8,352,184,352),o.fillAndStroke()}paintTriangleIcon({c:e,ratioFromParent:t,setIconOrigin:r,shape:n,icon:i}){const o=this.newBpmnCanvas({c:e,ratioFromParent:t,setIconOrigin:r,shape:n,icon:i},{height:735,width:849});o.begin(),o.moveTo(497,55),o.lineTo(817,609),o.curveTo(849,665,808,735,744,735),o.lineTo(105,735),o.curveTo(40,735,0,665,32,609),o.lineTo(352,55),o.curveTo(384,0,465,0,497,55),o.close(),o.fillAndStroke()}paintUpArrowheadIcon({c:e,ratioFromParent:t,setIconOrigin:r,shape:n,icon:i}){const o=this.newBpmnCanvas({c:e,ratioFromParent:t,setIconOrigin:r,shape:n,icon:i},{height:50,width:40});o.begin(),o.moveTo(0,49.5),o.lineTo(19.5,1),o.curveTo(19.75,.25,20,0,20.25,.25),o.lineTo(40,49.5),o.curveTo(40,49.5,39.75,50,39.6,49.75),o.lineTo(20,30),o.lineTo(.4,49.75),o.curveTo(.4,49.75,.25,50,0,49.5),o.close(),o.fillAndStroke()}paintDoubleLeftArrowheadsIcon({c:e,ratioFromParent:t,setIconOrigin:r,shape:n,icon:i}){const o=this.newBpmnCanvas({c:e,ratioFromParent:t,setIconOrigin:r,shape:n,icon:i},{height:53.5,width:105});o.begin(),o.moveTo(91.4,0),o.curveTo(91.4,0,91.2,0,91,.2),o.lineTo(50,25),o.curveTo(47.9,25.8,46.7,26.6,46.4,27.3),o.lineTo(46.4,0),o.curveTo(46.4,0,46.2,0,46,.2),o.lineTo(4.9,25),o.curveTo(2,26.2,0,27.3,4.9,28.5),o.lineTo(45.8,53),o.curveTo(46,53.3,46.2,53.5,46.4,53.5),o.lineTo(46.4,27),o.curveTo(46.6,27.3,47.8,28.1,49.9,29.9),o.lineTo(90.8,53.3),o.curveTo(91,53.3,91.2,53.5,91.4,53.5),o.lineTo(91.4,0),o.close(),o.fillAndStroke()}static drawCrossIcon(e){e.begin(),e.moveTo(.38,0),e.lineTo(.62,0),e.lineTo(.62,.38),e.lineTo(1,.38),e.lineTo(1,.62),e.lineTo(.62,.62),e.lineTo(.62,1),e.lineTo(.38,1),e.lineTo(.38,.62),e.lineTo(0,.62),e.lineTo(0,.38),e.lineTo(.38,.38),e.close()}paintListIcon({c:e,ratioFromParent:t,setIconOrigin:r,shape:n,icon:i}){const o=this.newBpmnCanvas({c:e,ratioFromParent:t,setIconOrigin:r,shape:n,icon:i},{height:60,width:60});o.begin(),o.moveTo(0,0),o.lineTo(60,0),o.lineTo(60,60),o.lineTo(0,60),o.lineTo(0,0),o.close(),o.moveTo(5,5),o.lineTo(55,5),o.close(),o.moveTo(5,21.6),o.lineTo(55,21.6),o.close(),o.moveTo(5,38.3),o.lineTo(55,38.3),o.close(),o.moveTo(5,55),o.lineTo(55,55),o.close(),o.fillAndStroke()}paintXCrossIcon(e){const t=this.newBpmnCanvas(e,{height:.5,width:.5});D.drawCrossIcon(t);const r=e.shape.w*e.ratioFromParent,n=e.shape.h*e.ratioFromParent;t.rotate(45,!1,!1,r,n),t.fillAndStroke()}paintPlusCrossIcon({c:e,ratioFromParent:t,setIconOrigin:r,shape:n,icon:i}){const o=this.newBpmnCanvas({c:e,ratioFromParent:t,setIconOrigin:r,shape:n,icon:Object.assign(Object.assign({},i),{isFilled:!0})},{height:.5,width:.5});D.drawCrossIcon(o),o.fillAndStroke()}paintPersonIcon({c:e,ratioFromParent:t,setIconOrigin:r,shape:n,icon:i}){const o=this.newBpmnCanvas({c:e,ratioFromParent:t,setIconOrigin:r,shape:n,icon:Object.assign(Object.assign({},i),{isFilled:!0})},{height:239.68,width:143.61});o.begin(),o.moveTo(124.31,150.29),o.lineTo(99.66,141.03),o.arcTo(6.43,6.43,0,0,1,95.51,135.03),o.lineTo(95.51,130.66),o.arcTo(47.75,47.75,0,0,0,119.51,89.25),o.lineTo(119.51,71.25),o.arcTo(47.62,47.62,0,0,0,101.18,33.64),o.arcTo(29.35,29.35,0,0,0,101.52,29.14),o.arcTo(29.68,29.68,0,0,0,42.17,29.14),o.arcTo(29.24,29.24,0,0,0,42.53,33.63),o.arcTo(47.65,47.65,0,0,0,24.14,71.23),o.lineTo(24.14,89.23),o.arcTo(47.7,47.7,0,0,0,48.19,130.63),o.lineTo(48.19,135.03),o.arcTo(6.43,6.43,0,0,1,44.03,141.03),o.lineTo(19.31,150.29),o.arcTo(29.81,29.81,0,0,0,.09,178.03),o.lineTo(.09,233.51),o.arcTo(5.63,5.63,0,1,0,11.34,233.51),o.lineTo(11.34,178.03),o.arcTo(18.19,18.19,0,0,1,11.57,175.17),o.lineTo(20.5,184.11),o.arcTo(12.32,12.32,0,0,1,24.14,192.89),o.lineTo(24.14,233.51),o.arcTo(5.63,5.63,0,1,0,35.39,233.51),o.lineTo(35.39,192.93),o.arcTo(23.5,23.5,0,0,0,28.46,176.2),o.lineTo(17.04,164.78),o.arcTo(18.34,18.34,0,0,1,23.29,160.78),o.lineTo(43.65,153.15),o.lineTo(66.22,175.72),o.lineTo(66.22,233.51),o.arcTo(5.63,5.63,0,1,0,77.47,233.51),o.lineTo(77.47,175.76),o.lineTo(100.04,153.19),o.lineTo(120.4,160.82),o.arcTo(18.39,18.39,0,0,1,126.65,164.82),o.lineTo(115.24,176.24),o.arcTo(23.5,23.5,0,0,0,108.31,192.93),o.lineTo(108.31,233.55),o.arcTo(5.63,5.63,0,1,0,119.56,233.55),o.lineTo(119.56,192.93),o.arcTo(12.35,12.35,0,0,1,123.19,184.15),o.lineTo(132.13,175.22),o.arcTo(18,18,0,0,1,132.36,178.08),o.lineTo(132.36,233.56),o.arcTo(5.63,5.63,0,0,0,143.61,233.56),o.lineTo(143.61,178.03),o.arcTo(29.81,29.81,0,0,0,124.31,150.29),o.close(),o.moveTo(71.85,10.72),o.arcTo(18.46,18.46,0,0,1,90.17,27.18),o.arcTo(47.68,47.68,0,0,0,53.53,27.18),o.arcTo(18.44,18.44,0,0,1,71.85,10.72),o.close(),o.moveTo(35.39,71.23),o.arcTo(36.46,36.46,0,0,1,108.31,71.23),o.lineTo(108.31,77.4),o.curveTo(82.12,75.4,56.97,60.55,56.71,60.4),o.arcTo(5.62,5.62,0,0,0,48.78,62.71),o.curveTo(46.24,67.79,40.45,71.89,35.39,74.62),o.close(),o.moveTo(35.39,89.23),o.lineTo(35.39,87.08),o.curveTo(40.55,84.85,49.73,80.08,55.67,72.66),o.curveTo(64.83,77.46,85.92,87.21,108.31,88.66),o.lineTo(108.31,89.24),o.arcTo(36.46,36.46,0,1,1,35.39,89.24),o.close(),o.moveTo(71.85,165.45),o.lineTo(54.06,147.69),o.arcTo(17.7,17.7,0,0,0,59.43,135.32),o.arcTo(47.57,47.57,0,0,0,84.27,135.32),o.arcTo(17.7,17.7,0,0,0,89.64,147.69),o.close(),o.fill()}paintGearIcon({c:e,ratioFromParent:t,setIconOrigin:r,shape:n,icon:i}){const o=this.newBpmnCanvas({c:e,ratioFromParent:t,setIconOrigin:r,shape:n,icon:i},{height:100,width:100});D.paintGearIconBackground(o),o.translateIconOrigin(14,14),D.paintGearIconForeground(o)}static paintGearIconBackground(e){e.begin(),e.moveTo(2.06,24.62),e.lineTo(10.17,30.95),e.lineTo(9.29,37.73),e.lineTo(0,41.42),e.lineTo(2.95,54.24),e.lineTo(13.41,52.92),e.lineTo(17.39,58.52),e.lineTo(13.56,67.66),e.lineTo(24.47,74.44),e.lineTo(30.81,66.33),e.lineTo(37.88,67.21),e.lineTo(41.57,76.5),e.lineTo(54.24,73.55),e.lineTo(53.06,62.94),e.lineTo(58.52,58.52),e.lineTo(67.21,63.09),e.lineTo(74.58,51.88),e.lineTo(66.03,45.25),e.lineTo(66.92,38.62),e.lineTo(76.5,34.93),e.lineTo(73.7,22.26),e.lineTo(62.64,23.44),e.lineTo(58.81,18.42),e.lineTo(62.79,8.7),e.lineTo(51.74,2.21),e.lineTo(44.81,10.47),e.lineTo(38.03,9.43),e.lineTo(33.75,0),e.lineTo(21.52,3.24),e.lineTo(22.7,13.56),e.lineTo(18.13,17.54),e.lineTo(8.7,13.56),e.close();D.paintGearInnerCircle(e,24.8,39)}static paintGearIconForeground(e){e.begin(),e.moveTo(16.46,41.42),e.lineTo(24.57,47.75),e.lineTo(23.69,54.53),e.lineTo(14.4,58.22),e.lineTo(17.35,71.04),e.lineTo(27.81,69.72),e.lineTo(31.79,75.32),e.lineTo(27.96,84.46),e.lineTo(38.87,91.24),e.lineTo(45.21,83.13),e.lineTo(52.28,84.01),e.lineTo(55.97,93.3),e.lineTo(68.64,90.35),e.lineTo(67.46,79.74),e.lineTo(72.92,75.32),e.lineTo(81.61,79.89),e.lineTo(88.98,68.68),e.lineTo(80.43,62.05),e.lineTo(81.32,55.42),e.lineTo(90.9,51.73),e.lineTo(88.1,39.06),e.lineTo(77.04,40.24),e.lineTo(73.21,35.22),e.lineTo(77.19,25.5),e.lineTo(66.14,19.01),e.lineTo(59.21,27.27),e.lineTo(52.43,26.23),e.lineTo(48.15,16.8),e.lineTo(35.92,20.04),e.lineTo(37.1,30.36),e.lineTo(32.53,34.34),e.lineTo(23.1,30.36),e.close();D.paintGearInnerCircle(e,39.2,55.8),e.begin(),D.paintGearInnerCircle(e,39.2,55.8)}static paintGearInnerCircle(e,t,r){const n=13.5;e.moveTo(t,r),e.arcTo(n,n,0,1,1,t+27,r),e.arcTo(n,n,0,0,1,t,r),e.close(),e.fillAndStroke()}paintExpandIcon({c:e,ratioFromParent:t,setIconOrigin:r,shape:n,icon:i}){const o={width:16,height:16},s=this.newBpmnCanvas({c:e,ratioFromParent:t,setIconOrigin:r,shape:n,icon:i},o),a=o.width,l=o.height;s.roundrect(0,0,a,l,2,2),s.stroke(),s.begin(),s.moveTo(a/2,l/4),s.lineTo(a/2,3*l/4),s.close(),s.moveTo(a/4,l/2),s.lineTo(3*a/4,l/2),s.close(),s.fillAndStroke()}paintLoopIcon({c:e,ratioFromParent:t,setIconOrigin:r,shape:n,icon:i}){i.fillColor=i.strokeColor;const o=this.newBpmnCanvas({c:e,ratioFromParent:t,setIconOrigin:r,shape:n,icon:i},{width:22.49,height:21.62});o.begin(),o.moveTo(5.5,19.08),o.arcTo(8,8,0,1,1,10.5,21.08),o.stroke(),o.begin(),o.moveTo(7.5,14.08),o.lineTo(5.75,19.08),o.lineTo(0,17.08),o.close(),o.fillAndStroke()}paintSequentialMultiInstanceIcon({c:e,ratioFromParent:t,setIconOrigin:r,shape:n,icon:i}){const o={width:16,height:16},s=this.newBpmnCanvas({c:e,ratioFromParent:t,setIconOrigin:r,shape:n,icon:i},o);e.setFillColor(i.strokeColor);const a=o.width,l=o.height/5;s.rect(0,0,a,l),s.fill(),s.rect(0,2*l,a,l),s.fill(),s.rect(0,4*l,a,l),s.fill()}paintParallelMultiInstanceIcon({c:e,ratioFromParent:t,setIconOrigin:r,shape:n,icon:i}){const o={width:16,height:16},s=this.newBpmnCanvas({c:e,ratioFromParent:t,setIconOrigin:r,shape:n,icon:i},o);e.setFillColor(i.strokeColor);const a=o.width/5,l=o.height;s.begin(),s.rect(0,0,a,l),s.fill(),s.rect(2*a,0,a,l),s.fill(),s.rect(4*a,0,a,l),s.fill()}paintRightArrowIcon({setIconOrigin:e,c:t,shape:r,ratioFromParent:n,icon:i}){const o=this.newBpmnCanvas({c:t,ratioFromParent:n,setIconOrigin:e,shape:r,icon:i},{width:512,height:415.23});o.setRoundLineJoin(),o.begin(),o.moveTo(512,207.61),o.lineTo(304.38,0),o.lineTo(304.38,135.39),o.lineTo(0,135.39),o.lineTo(0,279.84),o.lineTo(304.38,279.84),o.lineTo(304.38,415.23),o.lineTo(512,207.61),o.close(),o.fillAndStroke()}paintErrorIcon({setIconOrigin:e,c:t,shape:r,ratioFromParent:n,icon:i}){const o=this.newBpmnCanvas({c:t,ratioFromParent:n,setIconOrigin:e,shape:r,icon:i},{width:72.44,height:71.82});o.begin(),o.moveTo(0,53.32),o.lineTo(19.48,0),o.lineTo(19.48,0),o.lineTo(50.85,40.07),o.lineTo(72.44,18.21),o.lineTo(53.12,71.82),o.lineTo(22.5,31.37),o.close(),o.fillAndStroke()}paintHandIcon({setIconOrigin:e,c:t,shape:r,ratioFromParent:n,icon:i}){const o=this.newBpmnCanvas({c:t,ratioFromParent:n,setIconOrigin:e,shape:r,icon:i},{width:343.65,height:354.12});o.begin(),o.moveTo(231.66,336.39),o.curveTo(240.84,316.9,220.53,306.92,220.53,306.92),o.curveTo(215.2,303.67,188.58,287.43,140.67,258.19),o.lineTo(146.33,248.39),o.curveTo(223.98,269.38,267.12,281.04,275.75,283.38),o.curveTo(275.75,283.38,297.25,288,301.42,267.77),o.curveTo(306.34,245.29,288.32,238.63,288.32,238.63),o.curveTo(279.91,236.44,237.86,225.48,162.18,205.75),o.lineTo(165.2,194.8),o.curveTo(255.88,204.4,306.27,209.73,316.34,210.8),o.curveTo(316.34,210.8,339.89,212.16,341.76,189.55),o.curveTo(343.65,166.93,320.5,164.13,320.5,164.13),o.curveTo(310.43,163.1,260.04,157.99,169.35,148.77),o.lineTo(169.35,138.97),o.curveTo(253.41,132.12,300.11,128.32,309.45,127.56),o.curveTo(309.45,127.56,332.27,122.38,332.27,102.61),o.curveTo(332.27,82.85,305.48,81.87,305.48,81.87),o.curveTo(293.99,82.2,236.54,83.88,133.13,86.9),o.lineTo(127.61,81.87),o.curveTo(145.3,59.39,155.12,46.9,157.09,44.41),o.curveTo(157.09,44.41,171.12,26.8,156.78,12.72),o.curveTo(143.83,0,124.08,14.49,124.08,14.49),o.curveTo(116.45,19.41,78.35,44.06,9.77,88.43),o.lineTo(0,251.94),o.curveTo(122.84,308.79,191.09,340.37,204.74,346.69),o.curveTo(204.74,346.69,222.91,354.12,231.66,336.39),o.fillAndStroke(),o.begin(),o.moveTo(231.66,336.39),o.curveTo(240.84,316.9,220.53,306.92,220.53,306.92),o.curveTo(215.2,303.67,188.58,287.43,140.67,258.19),o.lineTo(146.33,248.39),o.curveTo(223.98,269.38,267.12,281.04,275.75,283.38),o.curveTo(275.75,283.38,297.25,288,301.42,267.77),o.curveTo(306.34,245.29,288.32,238.63,288.32,238.63),o.curveTo(279.91,236.44,237.86,225.48,162.18,205.75),o.lineTo(165.2,194.8),o.curveTo(255.88,204.4,306.27,209.73,316.34,210.8),o.curveTo(316.34,210.8,339.89,212.16,341.76,189.55),o.curveTo(343.65,166.93,320.5,164.13,320.5,164.13),o.curveTo(310.43,163.1,260.04,157.99,169.35,148.77),o.lineTo(169.35,138.97),o.curveTo(253.41,132.12,300.11,128.32,309.45,127.56),o.curveTo(309.45,127.56,332.27,122.38,332.27,102.61),o.curveTo(332.27,82.85,305.48,81.87,305.48,81.87),o.curveTo(293.99,82.2,236.54,83.88,133.13,86.9),o.lineTo(127.61,81.87),o.curveTo(145.3,59.39,155.12,46.9,157.09,44.41),o.curveTo(157.09,44.41,171.12,26.8,156.78,12.72),o.curveTo(143.83,0,124.08,14.49,124.08,14.49),o.curveTo(116.45,19.41,78.35,44.06,9.77,88.43),o.lineTo(0,251.94),o.curveTo(122.84,308.79,191.09,340.37,204.74,346.69),o.curveTo(204.74,346.69,222.91,354.12,231.66,336.39),o.fillAndStroke()}paintScriptIcon({setIconOrigin:e,c:t,shape:r,ratioFromParent:n,icon:i}){i.fillColor=i.strokeColor;const o=this.newBpmnCanvas({c:t,ratioFromParent:n,setIconOrigin:e,shape:r,icon:i},{width:458.75,height:461.64});o.begin(),o.moveTo(67.85,.57),o.curveTo(50.73,0,33.26,8.86,22.35,18.84),o.curveTo(8.11,32.15,0,50.77,0,70.26),o.curveTo(0,73.15,0,87.59,0,113.6),o.curveTo(55.4,113.6,86.18,113.6,92.33,113.6),o.curveTo(94.92,150.46,85.64,180.4,74.22,211.27),o.curveTo(40.16,298.07,30.77,339.83,55.56,410.87),o.curveTo(63.72,438.26,87.59,457.85,114.91,461.09),o.curveTo(216.96,460.85,294.9,461.64,388.41,461.2),o.curveTo(407.2,461.09,425.14,453.55,438.3,440.13),o.curveTo(451.46,426.71,458.75,403.06,458.46,384.26),o.curveTo(458.43,382.23,458.18,365.93,458.15,363.89),o.curveTo(432.12,364.24,406.09,364.04,380.06,364.04),o.curveTo(377.61,347.52,377.24,337.58,378.28,324.48),o.curveTo(380.5,296.47,389.08,273.36,398.59,247.1),o.curveTo(408.11,220.83,418.41,191.47,420.86,154.24),o.curveTo(422.11,135.34,421.4,110.24,417.77,86.75),o.curveTo(417.76,86.71,417.73,86.54,417.69,86.22),o.curveTo(417.64,85.95,417.61,85.79,417.6,85.76),o.curveTo(414.03,68.13,410.49,48.84,399.79,31.47),o.curveTo(389.09,14.11,366.95,.59,341.75,.59),o.curveTo(286.97,.59,122.63,.57,67.85,.57),o.close(),o.moveTo(85.04,72.68),o.curveTo(80.63,72.68,45.33,72.68,40.92,72.68),o.curveTo(40.46,58.4,47.15,51.87,50.27,48.75),o.curveTo(55.8,44.28,59.84,41,73.82,41),o.curveTo(78.45,52.13,82.23,62.71,85.04,72.68),o.close(),o.moveTo(364.94,52.9),o.curveTo(370,61.11,373.9,76.44,377.38,93.51),o.curveTo(380.35,113.1,381.01,136.42,380.02,151.57),o.curveTo(377.97,182.76,369.51,207.12,360.1,233.1),o.curveTo(350.69,259.09,340.27,286.77,337.53,321.27),o.curveTo(336.38,335.86,336.72,346.69,338.87,364.01),o.curveTo(326.35,364.01,263.75,364.01,151.06,364.01),o.curveTo(151.06,382.2,151.06,392.31,151.06,394.33),o.curveTo(147.77,404.8,138.9,418.2,127.43,419.94),o.curveTo(111.49,422.35,97.86,411.8,94.75,399.19),o.curveTo(65.14,321.99,94.93,275.54,112.57,225.47),o.curveTo(130.14,177.95,137.92,117.41,112.71,42.09),o.curveTo(192.88,41.9,274.33,42.21,342.89,41.98),o.curveTo(357.15,42.03,359.83,44.61,364.94,52.9),o.close(),o.moveTo(409.96,399.48),o.curveTo(409.96,408.42,398.54,425.67,392.02,425.67),o.curveTo(325.19,425.79,252.29,425.67,185.23,425.67),o.curveTo(189.88,424.43,194.66,405.64,194.66,399.48),o.curveTo(237.72,399.48,388.43,399.48,409.96,399.48),o.close(),o.fill(),o.begin(),o.moveTo(182.1,131.2),o.lineTo(182.1,151.68),o.lineTo(321.89,151.68),o.lineTo(321.89,131.2),o.lineTo(182.1,131.2),o.close(),o.moveTo(162.25,251.09),o.lineTo(162.25,271.49),o.lineTo(301.96,271.49),o.lineTo(301.96,251.09),o.lineTo(162.25,251.09),o.close(),o.fill()}paintTableIcon({setIconOrigin:e,c:t,shape:r,ratioFromParent:n,icon:i}){const o=this.newBpmnCanvas({c:t,ratioFromParent:n,setIconOrigin:e,shape:r,icon:i},{width:640,height:640});o.begin(),o.moveTo(.19,.1),o.lineTo(298.78,.1),o.lineTo(298.78,198.88),o.lineTo(.19,198.88),o.lineTo(.19,.1),o.close(),o.fillAndStroke(),o.begin(),o.moveTo(0,0),o.lineTo(298.78,0),o.lineTo(298.78,48.88),o.lineTo(0,48.88),o.lineTo(0,0),o.close(),o.fillAndStroke(),o.begin(),o.moveTo(0,48.88),o.lineTo(98.78,48.88),o.lineTo(98.78,198.88),o.lineTo(0,198.88),o.lineTo(0,48.88),o.close(),o.fillAndStroke(),o.begin(),o.moveTo(1.09,122.69),o.lineTo(298.78,122.69),o.close(),o.fillAndStroke(),o.setFillColor(i.strokeColor),o.begin(),o.moveTo(0,0),o.lineTo(298.78,0),o.lineTo(298.78,48.88),o.lineTo(0,48.88),o.lineTo(0,0),o.close(),o.fillAndStroke()}}class R{static get(){return this.instance}static set(e){this.instance=e}}R.instance=new D;class q extends mxEllipse{constructor(e,t,n,i){super(e,t,n,i),this.iconPainter=R.get(),this.iconPainters=new Map([[r.MESSAGE,e=>this.iconPainter.paintEnvelopeIcon(Object.assign(Object.assign({},e),{ratioFromParent:.5}))],[r.TERMINATE,e=>this.iconPainter.paintCircleIcon(Object.assign(Object.assign({},e),{ratioFromParent:.6}))],[r.TIMER,e=>this.iconPainter.paintClockIcon(Object.assign(Object.assign({},e),{setIconOrigin:e=>e.setIconOriginToShapeTopLeftProportionally(5)}))],[r.SIGNAL,e=>this.iconPainter.paintTriangleIcon(Object.assign(Object.assign({},e),{ratioFromParent:.55,icon:Object.assign(Object.assign({},e.icon),{strokeWidth:c.STROKE_WIDTH_THIN.valueOf()}),setIconOrigin:e=>e.setIconOriginToShapeTopLeftProportionally(4)}))],[r.LINK,e=>this.iconPainter.paintRightArrowIcon(Object.assign(Object.assign({},e),{ratioFromParent:.55,icon:Object.assign(Object.assign({},e.icon),{strokeWidth:1.5})}))],[r.ERROR,e=>this.iconPainter.paintErrorIcon(Object.assign(Object.assign({},e),{ratioFromParent:.55,icon:Object.assign(Object.assign({},e.icon),{strokeWidth:1.5})}))],[r.COMPENSATION,e=>this.iconPainter.paintDoubleLeftArrowheadsIcon(Object.assign(Object.assign({},e),{ratioFromParent:.7,icon:Object.assign(Object.assign({},e.icon),{strokeWidth:1.5})}))],[r.CANCEL,e=>this.iconPainter.paintXCrossIcon(Object.assign(Object.assign({},e),{ratioFromParent:.39,setIconOrigin:e=>e.setIconOriginToShapeTopLeftProportionally(9)}))],[r.ESCALATION,e=>this.iconPainter.paintUpArrowheadIcon(Object.assign(Object.assign({},e),{ratioFromParent:.55,icon:Object.assign(Object.assign({},e.icon),{strokeWidth:c.STROKE_WIDTH_THIN.valueOf()})}))],[r.CONDITIONAL,e=>this.iconPainter.paintListIcon(Object.assign(Object.assign({},e),{ratioFromParent:.6,icon:Object.assign(Object.assign({},e.icon),{strokeWidth:1.5})}))]]),this.withFilledIcon=!1}paintVertexShape(e,t,r,n,i){this.markNonFullyRenderedEvents(e);const o=_(e,t,r,n,i,this,.25,this.withFilledIcon);q.setDashedOuterShapePattern(o,g.getBpmnIsInterrupting(this.style)),this.paintOuterShape(o),q.restoreOriginalOuterShapePattern(o),this.paintInnerShape(o)}markNonFullyRenderedEvents(e){}paintOuterShape({c:e,shape:{x:t,y:r,w:n,h:i}}){super.paintVertexShape(e,t,r,n,i)}paintInnerShape(e){(this.iconPainters.get(g.getBpmnEventKind(this.style))||(()=>this.iconPainter.paintEmptyIcon()))(e)}static setDashedOuterShapePattern(e,t){e.c.save(),"false"===t&&(e.c.setDashed(!0,!1),e.c.setDashPattern("3 2"))}static restoreOriginalOuterShapePattern(e){e.c.restore()}}class P extends q{constructor(e,t,r,n=c.STROKE_WIDTH_THIN){super(e,t,r,n)}}class k extends q{constructor(e,t,r,n=c.STROKE_WIDTH_THICK){super(e,t,r,n),this.withFilledIcon=!0}}class F extends q{constructor(e,t,r,n=c.STROKE_WIDTH_THIN){super(e,t,r,n)}paintOuterShape({c:e,shape:{x:t,y:r,w:n,h:i,strokeWidth:o}}){e.ellipse(t,r,n,i),e.fillAndStroke();const s=1.5*o;e.ellipse(.02*n+s+t,.02*i+s+r,.96*n-2*s,.96*i-2*s),e.stroke()}}class B extends F{constructor(e,t,r,n){super(e,t,r,n)}}class V extends F{constructor(e,t,r,n){super(e,t,r,n),this.withFilledIcon=!0}}class M extends F{constructor(e,t,r,n){super(e,t,r,n)}}class U extends mxRhombus{constructor(e,t,r,n){super(e,t,r,n),this.iconPainter=R.get()}paintVertexShape(e,t,r,n,i){const o=_(e,t,r,n,i,this);this.paintOuterShape(o),this.paintInnerShape(o)}paintOuterShape({c:e,shape:{x:t,y:r,w:n,h:i}}){super.paintVertexShape(e,t,r,n,i)}}class G extends U{constructor(e,t,r,n=c.STROKE_WIDTH_THIN){super(e,t,r,n)}paintInnerShape(e){this.iconPainter.paintXCrossIcon(Object.assign(Object.assign({},e),{icon:Object.assign(Object.assign({},e.icon),{isFilled:!0}),setIconOrigin:e=>e.setIconOriginToShapeTopLeftProportionally(4)}))}}class H extends U{constructor(e,t,r,n=c.STROKE_WIDTH_THIN){super(e,t,r,n)}paintInnerShape(e){this.iconPainter.paintPlusCrossIcon(Object.assign(Object.assign({},e),{setIconOrigin:e=>e.setIconOriginToShapeTopLeftProportionally(4)}))}}class Y extends U{constructor(e,t,r,n=c.STROKE_WIDTH_THIN){super(e,t,r,n)}paintInnerShape(e){this.iconPainter.paintCircleIcon(Object.assign(Object.assign({},e),{ratioFromParent:.62,icon:Object.assign(Object.assign({},e.icon),{isFilled:!1,strokeWidth:c.STROKE_WIDTH_THICK.valueOf()})}))}}const j=[o.LOOP,o.MULTI_INSTANCE_PARALLEL,o.MULTI_INSTANCE_SEQUENTIAL,o.COMPENSATION,o.EXPAND,o.ADHOC];function K(e,t){R.get().paintEnvelopeIcon(Object.assign(Object.assign({},e),{setIconOrigin:e=>e.setIconOriginToShapeTopLeft(),ratioFromParent:.2,icon:Object.assign(Object.assign({},e.icon),{isFilled:t})}))}class W extends mxRectangleShape{constructor(e,t,r,n=c.STROKE_WIDTH_THIN){super(e,t,r,n),this.iconPainter=R.get(),this.isRounded=!0}paintForeground(e,t,r,n,i){super.paintForeground(e,t,r,n,i),this.paintMarkerIcons(_(e,t,r,n,i,this,0,!1,1.5))}paintMarkerIcons(e){const t=g.getBpmnMarkers(this.style);t&&function(e){const t=[];return j.forEach(r=>{e.includes(r)&&t.push(r)}),e.filter(e=>!t.includes(e)).forEach(e=>{t.push(e)}),t}(t.split(",")).forEach((t,r,n)=>{switch((e=Object.assign(Object.assign({},e),{setIconOrigin:this.getIconOriginForMarkerIcon(n.length,r+1)})).c.save(),t){case o.LOOP:this.iconPainter.paintLoopIcon(e);break;case o.MULTI_INSTANCE_SEQUENTIAL:this.iconPainter.paintSequentialMultiInstanceIcon(e);break;case o.MULTI_INSTANCE_PARALLEL:this.iconPainter.paintParallelMultiInstanceIcon(e);break;case o.EXPAND:this.iconPainter.paintExpandIcon(e)}e.c.restore()})}getIconOriginForMarkerIcon(e,t){let r;if(1===e)r=e=>e.setIconOriginForIconBottomCentered();else{if(2!==e)throw new Error("NOT_IMPLEMENTED - to have a group of >2 markers in a row, centered in the task, implement this piece of code");r=e=>{e.setIconOriginForIconBottomCentered();const r=Math.pow(-1,t)*(c.SHAPE_ACTIVITY_MARKER_ICON_SIZE/2+c.SHAPE_ACTIVITY_MARKER_ICON_MARGIN);e.translateIconOrigin(r,0)}}return r}}class z extends W{constructor(e,t,r,n){super(e,t,r,n)}paintForeground(e,t,r,n,i){super.paintForeground(e,t,r,n,i),this.paintTaskIcon(_(e,t,r,n,i,this))}}class X extends z{constructor(e,t,r,n){super(e,t,r,n)}paintTaskIcon(e){this.iconPainter.paintEmptyIcon()}}class Z extends z{constructor(e,t,r,n){super(e,t,r,n)}paintTaskIcon(e){this.iconPainter.paintGearIcon(Object.assign(Object.assign({},e),{setIconOrigin:e=>e.setIconOriginToShapeTopLeftProportionally(20)}))}}class J extends z{constructor(e,t,r,n){super(e,t,r,n)}paintTaskIcon(e){this.iconPainter.paintPersonIcon(Object.assign(Object.assign({},e),{setIconOrigin:e=>e.setIconOriginToShapeTopLeftProportionally(20)}))}}class Q extends z{constructor(e,t,r,n){super(e,t,r,n)}paintTaskIcon(e){if(!g.getBpmnIsInstantiating(this.style))return void K(e,!1);const t=Object.assign(Object.assign({},e.shape),{w:20,h:20});this.iconPainter.paintCircleIcon({c:e.c,shape:t,icon:Object.assign(Object.assign({},e.icon),{isFilled:!1}),ratioFromParent:void 0,setIconOrigin:e=>e.setIconOriginToShapeTopLeft(4,4)}),t.x+=4,t.y+=4,this.iconPainter.paintEnvelopeIcon(Object.assign(Object.assign({},e),{shape:t,ratioFromParent:.65,setIconOrigin:e=>e.setIconOriginForIconCentered()}))}}class $ extends z{constructor(e,t,r,n){super(e,t,r,n)}paintTaskIcon(e){K(e,!0)}}class ee extends z{constructor(e,t,r,n){super(e,t,r,n)}paintTaskIcon(e){this.iconPainter.paintHandIcon(Object.assign(Object.assign({},e),{ratioFromParent:.18,setIconOrigin:e=>e.setIconOriginToShapeTopLeftProportionally(20)}))}}class te extends z{constructor(e,t,r,n){super(e,t,r,n)}paintTaskIcon(e){this.iconPainter.paintScriptIcon(Object.assign(Object.assign({},e),{ratioFromParent:.22,setIconOrigin:e=>e.setIconOriginToShapeTopLeftProportionally(20)}))}}class re extends W{constructor(e,t,r,n=c.STROKE_WIDTH_THICK){super(e,t,r,n)}}class ne extends W{constructor(e,t,r,n){super(e,t,r,n)}paintBackground(e,t,r,n,i){const o=g.getBpmnSubProcessKind(this.style);e.save(),o===s.EVENT&&(e.setDashed(!0,!1),e.setDashPattern("1 2")),super.paintBackground(e,t,r,n,i),e.restore()}}class ie extends z{constructor(e,t,r,n){super(e,t,r,n)}paintTaskIcon(e){this.iconPainter.paintTableIcon(Object.assign(Object.assign({},e),{ratioFromParent:.6,setIconOrigin:e=>e.setIconOriginToShapeTopLeftProportionally(15)}))}}class oe extends mxRectangleShape{constructor(e,t,r,n=c.STROKE_WIDTH_THIN){super(e,t,r,n),this.TEXT_ANNOTATION_BORDER_LENGTH=10}paintBackground(e,t,r,n,i){e.begin(),e.moveTo(t+this.TEXT_ANNOTATION_BORDER_LENGTH,r),e.lineTo(t,r),e.lineTo(t,r+i),e.lineTo(t+this.TEXT_ANNOTATION_BORDER_LENGTH,r+i),e.fillAndStroke()}}var se,ae;!function(e){e.NONE="none",e.INITIATING="initiating",e.NON_INITIATING="non_initiating"}(se||(se={}));class le extends mxRectangleShape{constructor(e,t,r,n){super(e,t,r,n),this.iconPainter=R.get()}paintVertexShape(e,t,r,n,i){const o=_(e,t,r,n,i,this,1,g.getBpmnIsInitiating(this.style)===se.NON_INITIATING);this.iconPainter.paintEnvelopeIcon(o)}}class ce{configureShapes(){this.initMxShapePrototype(mxClient.IS_FF),this.registerShapes()}registerShapes(){mxCellRenderer.registerShape(t.EVENT_END,k),mxCellRenderer.registerShape(t.EVENT_START,P),mxCellRenderer.registerShape(t.EVENT_INTERMEDIATE_THROW,V),mxCellRenderer.registerShape(t.EVENT_INTERMEDIATE_CATCH,B),mxCellRenderer.registerShape(t.EVENT_BOUNDARY,M),mxCellRenderer.registerShape(t.GATEWAY_EXCLUSIVE,G),mxCellRenderer.registerShape(t.GATEWAY_INCLUSIVE,Y),mxCellRenderer.registerShape(t.GATEWAY_PARALLEL,H),mxCellRenderer.registerShape(t.SUB_PROCESS,ne),mxCellRenderer.registerShape(t.CALL_ACTIVITY,re),mxCellRenderer.registerShape(t.TASK,X),mxCellRenderer.registerShape(t.TASK_SERVICE,Z),mxCellRenderer.registerShape(t.TASK_USER,J),mxCellRenderer.registerShape(t.TASK_RECEIVE,Q),mxCellRenderer.registerShape(t.TASK_SEND,$),mxCellRenderer.registerShape(t.TASK_MANUAL,ee),mxCellRenderer.registerShape(t.TASK_SCRIPT,te),mxCellRenderer.registerShape(t.TASK_BUSINESS_RULE,ie),mxCellRenderer.registerShape(t.TEXT_ANNOTATION,oe),mxCellRenderer.registerShape(u.BPMN_STYLE_MESSAGE_FLOW_ICON,le)}initMxShapePrototype(e){mxShape.prototype.createSvgCanvas=function(){const t=new mxSvgCanvas2D(this.node,!1);t.strokeTolerance=this.pointerEvents?this.svgStrokeTolerance:0,t.pointerEventsValue=this.svgPointerEvents,t.blockImagePointerEvents=e;const r=this.getSvgScreenOffset();return 0!=r?this.node.setAttribute("transform","translate("+r+","+r+")"):this.node.removeAttribute("transform"),this.state&&this.state.cell&&(this.node.setAttribute("class","class-state-cell-style-"+this.state.cell.style.replace(";","-")),this.node.setAttribute("data-cell-id",this.state.cell.id)),t.minStrokeWidth=this.minSvgStrokeWidth,this.antiAlias||(t.format=function(e){return Math.round(parseFloat(e))}),t}}}class ue{configureMarkers(){this.registerArrowDashMarker()}registerArrowDashMarker(){mxMarker.addMarker(l.ARROW_DASH,(e,t,r,n,i,o,s,a,l)=>{const c=i*(s+l+4),u=o*(s+l+4);return function(){e.begin(),e.moveTo(n.x-c/2-u/2,n.y-u/2+c/2),e.lineTo(n.x+u/2-3*c/2,n.y-3*u/2-c/2),e.stroke()}})}}class pe{configureMxCodec(){mxCodec.prototype.decode=function(e,t){if(null!==e&&e.nodeType===mxConstants.NODETYPE_ELEMENT){const r=window[e.nodeName];if(!r)throw new Error("Missing constructor for "+e.nodeName);const n=mxCodecRegistry.getCodec(r);if(null!==n)return n.decode(this,e,t);const i=e.cloneNode(!0);return i.removeAttribute("as"),i}return null}}}!function(e){e[e.None=0]="None",e[e.HorizontalVertical=1]="HorizontalVertical",e[e.Horizontal=2]="Horizontal",e[e.Vertical=3]="Vertical",e[e.Center=4]="Center"}(ae||(ae={}));class de extends mxGraph{constructor(e){super(e),this.container=e,this.cumulativeZoomFactor=1}fit(e,t,r,n,i,o,s){const a=super.fit(e,t,r,n,i,o,s);return this.cumulativeZoomFactor=a,a}customFit(e){if(e!=ae.Center){let t=!1,r=!1;switch(e){case ae.Horizontal:r=!0;break;case ae.Vertical:t=!0}this.fit(this.border,!1,0,!0,t,r)}else{const e=0,t=3,r=this.getGraphBounds(),n=this.container.clientWidth-e,i=this.container.clientHeight-e,o=r.width/this.view.scale,s=r.height/this.view.scale,a=Math.min(t,Math.min(n/o,i/s));this.cumulativeZoomFactor=a,this.view.scaleAndTranslate(a,(e+n-o*a)/(2*a)-r.x/this.view.scale,(e+i-s*a)/(2*a)-r.y/this.view.scale)}}performZoom(e,t){const r=this.container.getBoundingClientRect(),n=t.clientX-r.left,i=t.clientY-r.top;this.zoomTo(null,null,e,n,i)}zoomTo(e,t,r,n,i){if(null===e){const[e,t,o]=this.getScaleAndTranslationDeltas(r,n,i);this.view.scaleAndTranslate(e,this.view.translate.x+t,this.view.translate.y+o)}else super.zoomTo(e,t)}getScaleAndTranslationDeltas(e,t,r){let n=2*t,i=2*r;const[o,s]=this.calculateFactorAndScale(e);return[n,i]=this.calculateTranslationDeltas(o,s,n,i),[s,n,i]}calculateTranslationDeltas(e,t,r,n){if(e>1){const i=(e-1)/(2*t);r*=-i,n*=-i}else{const t=(1/e-1)/(2*this.view.scale);r*=t,n*=t}return[r,n]}calculateFactorAndScale(e){this.cumulativeZoomFactor*=e?1.25:.8;let t=this.cumulativeZoomFactor/this.view.scale;const r=Math.round(this.view.scale*t*100)/100;return t=r/this.view.scale,[t,r]}}class he{constructor(e){this.container=e,this.graph=new de(e)}configure(e){return this.configureGraph(),this.configureMouseNavigationSupport(e),new C(this.graph).configureStyles(),(new ce).configureShapes(),(new ue).configureMarkers(),(new pe).configureMxCodec(),this.graph}configureGraph(){this.graph.setCellsLocked(!0),this.graph.setCellsSelectable(!1),this.graph.setEdgeLabelsMovable(!1),this.graph.setHtmlLabels(!0),this.graph.setConstrainChildren(!1),this.graph.setExtendParents(!1),this.graph.foldingEnabled=!1}configureMouseNavigationSupport(e){const t=null==e?void 0:e.mouseNavigationSupport;t?(this.graph.panningHandler.useLeftButtonForPanning=!0,this.graph.panningHandler.ignoreCell=!0,this.graph.panningHandler.addListener(mxEvent.PAN_START,this.getPanningHandler("grab")),this.graph.panningHandler.addListener(mxEvent.PAN_END,this.getPanningHandler("default")),this.graph.setPanning(!0)):(this.graph.setPanning(!1),this.graph.panningHandler.setPinchEnabled(!1)),this.configureMouseEvent(t)}getPanningHandler(e){return this.getPanningHandlerCallback(e).bind(this.graph)}getPanningHandlerCallback(e){return function(){this.isEnabled()&&(this.container.style.cursor=e)}}configureMouseEvent(e=!1){e&&mxEvent.addMouseWheelListener((e,t)=>{const r=e;if(mxEvent.isConsumed(r))return;(r.ctrlKey||mxClient.IS_MAC&&r.metaKey)&&!r.altKey&&!r.shiftKey&&(this.graph.performZoom(t,r),mxEvent.consume(r))},this.container)}}class ge{constructor(e){this.graph=e}computeRelativeCoordinates(e,t){const r=this.getTranslateForRoot(e),n=t.x+r.x,i=t.y+r.y;return new mxPoint(n,i)}getTranslateForRoot(e){const t=this.graph.getModel(),r=new mxPoint(0,0);for(;null!=e;){const n=t.getGeometry(e);null!=n&&(r.x-=n.x,r.y-=n.y),e=t.getParent(e)}return r}computeEdgeCenter(e){const t=e.geometry.points,r=t[0],n=t[t.length-1];if(null!=r&&null!=n){const e=n.x-r.x,t=n.y-r.y;return new mxPoint(r.x+e/2,r.y+t/2)}}}class me{constructor(e,t,r){this.graph=e,this.coordinatesTranslator=t,this.styleConfigurator=r}render(e,t=ae.None){this.insertShapesAndEdges(e),t!=ae.None&&this.graph.customFit(t)}insertShapesAndEdges(e){const t=function(e){const t=e.flowNodes.filter(e=>{var t;const r=e.bpmnElement;return h.isSubProcess(null==r?void 0:r.kind)&&(null===(t=r)||void 0===t?void 0:t.markers.includes(o.EXPAND))}).map(e=>{var t;return null===(t=e.bpmnElement)||void 0===t?void 0:t.id}),r=[],n=[],i=[];return e.flowNodes.forEach(e=>{var o,s;const a=null===(o=e.bpmnElement)||void 0===o?void 0:o.kind;h.isSubProcess(a)?r.push(e):h.isBoundaryEvent(a)?n.push(e):t.includes(null===(s=e.bpmnElement)||void 0===s?void 0:s.parentId)||i.push(e)}),{boundaryEvents:n,edges:e.edges,lanes:e.lanes,otherFlowNodes:i,pools:e.pools,subprocesses:r}}(e),r=this.graph.getModel();r.clear(),r.beginUpdate();try{this.insertShapes(t.pools),this.insertShapes(t.lanes),this.insertShapes(t.subprocesses),this.insertShapes(t.otherFlowNodes),this.insertShapes(t.boundaryEvents),this.insertEdges(t.edges)}finally{r.endUpdate()}}insertShapes(e){e.forEach(e=>{this.insertShape(e)})}getParent(e){const t=this.getCell(e.parentId);return t||(h.isBoundaryEvent(e.kind)?void 0:this.graph.getDefaultParent())}insertShape(e){var t;const r=e.bpmnElement;if(r){const n=this.getParent(r);if(!n)return void console.warn("Not possible to insert shape %s: parent cell %s is not found",r.id,r.parentId);const i=e.bounds;let o=null===(t=e.label)||void 0===t?void 0:t.bounds;o=h.isPoolOrLane(r.kind)?void 0:o;const s=this.styleConfigurator.computeStyle(e,o);this.insertVertex(n,r.id,r.name,i,o,s)}}insertEdges(e){e.forEach(e=>{var t;const r=e.bpmnElement;if(r){const n=this.graph.getDefaultParent(),i=this.getCell(r.sourceRefId),o=this.getCell(r.targetRefId),s=null===(t=e.label)||void 0===t?void 0:t.bounds,a=this.styleConfigurator.computeStyle(e,s),l=this.graph.insertEdge(n,r.id,r.name,i,o,a);if(this.insertWaypoints(e.waypoints,l),s){l.geometry.width=s.width,l.geometry.height=s.height;const e=this.coordinatesTranslator.computeEdgeCenter(l);if(e){l.geometry.relative=!1;const t=this.coordinatesTranslator.computeRelativeCoordinates(l.parent,new mxPoint(s.x,s.y)),r=t.x+s.width/2-e.x,n=t.y-e.y;l.geometry.offset=new mxPoint(r,n)}}this.insertMessageFlowIconIfNeeded(e,l)}})}insertMessageFlowIconIfNeeded(e,t){if(e.bpmnElement instanceof L&&e.messageVisibleKind!==se.NONE){const r=this.graph.insertVertex(t,"messageFlowIcon_of_"+t.id,void 0,0,0,20,14,this.styleConfigurator.computeMessageFlowIconStyle(e));r.geometry.relative=!0,r.geometry.offset=new mxPoint(-10,-7)}}insertWaypoints(e,t){e&&(t.geometry.points=e.map(e=>this.coordinatesTranslator.computeRelativeCoordinates(t.parent,new mxPoint(e.x,e.y))))}getCell(e){return this.graph.getModel().getCell(e)}insertVertex(e,t,r,n,i,o){const s=this.coordinatesTranslator.computeRelativeCoordinates(e,new mxPoint(n.x,n.y)),a=this.graph.insertVertex(e,t,r,s.x,s.y,n.width,n.height,o);if(i){const e=i.x-n.x,t=i.y-n.y;a.geometry.offset=new mxPoint(e,t)}return a}}var Te="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function fe(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function Ee(e,t){return e(t={exports:{}},t.exports),t.exports}function be(e){return e&&e.default||e}var ve=Ee((function(e,t){const r=":A-Za-z_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD",n="["+r+"][:A-Za-z_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.\\d\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*",i=new RegExp("^"+n+"$");t.isExist=function(e){return void 0!==e},t.isEmptyObject=function(e){return 0===Object.keys(e).length},t.merge=function(e,t,r){if(t){const n=Object.keys(t),i=n.length;for(let o=0;o<i;o++)e[n[o]]="strict"===r?[t[n[o]]]:t[n[o]]}},t.getValue=function(e){return t.isExist(e)?e:""},t.buildOptions=function(e,t,r){var n={};if(!e)return t;for(let i=0;i<r.length;i++)void 0!==e[r[i]]?n[r[i]]=e[r[i]]:n[r[i]]=t[r[i]];return n},t.isName=function(e){const t=i.exec(e);return!(null==t)},t.getAllMatches=function(e,t){const r=[];let n=t.exec(e);for(;n;){const i=[],o=n.length;for(let e=0;e<o;e++)i.push(n[e]);r.push(i),n=t.exec(e)}return r},t.nameRegexp=n}));ve.isExist,ve.isEmptyObject,ve.merge,ve.getValue,ve.buildOptions,ve.isName,ve.getAllMatches,ve.nameRegexp;const Se=function(e,t){const r={};if(!(e.child&&!ve.isEmptyObject(e.child)||e.attrsMap&&!ve.isEmptyObject(e.attrsMap)))return ve.isExist(e.val)?e.val:"";ve.isExist(e.val)&&("string"!=typeof e.val||""!==e.val&&e.val!==t.cdataPositionChar)&&("strict"===t.arrayMode?r[t.textNodeName]=[e.val]:r[t.textNodeName]=e.val),ve.merge(r,e.attrsMap,t.arrayMode);const n=Object.keys(e.child);for(let s=0;s<n.length;s++){var i=n[s];if(e.child[i]&&e.child[i].length>1)for(var o in r[i]=[],e.child[i])r[i].push(Se(e.child[i][o],t));else if(!0===t.arrayMode){const n=Se(e.child[i][0],t);r[i]="object"==typeof n?[n]:n}else"strict"===t.arrayMode?r[i]=[Se(e.child[i][0],t)]:r[i]=Se(e.child[i][0],t)}return r};var Ae={convertToJson:Se},Ie=function(e,t,r){this.tagname=e,this.parent=t,this.child={},this.attrsMap={},this.val=r,this.addChild=function(e){Array.isArray(this.child[e.tagname])?this.child[e.tagname].push(e):this.child[e.tagname]=[e]}};const we=ve.buildOptions;"<((!\\[CDATA\\[([\\s\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\/)(NAME)\\s*>))([^<]*)".replace(/NAME/g,ve.nameRegexp);!Number.parseInt&&window.parseInt&&(Number.parseInt=window.parseInt),!Number.parseFloat&&window.parseFloat&&(Number.parseFloat=window.parseFloat);const Ne={attributeNamePrefix:"@_",attrNodeName:!1,textNodeName:"#text",ignoreAttributes:!0,ignoreNameSpace:!1,allowBooleanAttributes:!1,parseNodeValue:!0,parseAttributeValue:!1,arrayMode:!1,trimValues:!0,cdataTagName:!1,cdataPositionChar:"\\c",tagValueProcessor:function(e,t){return e},attrValueProcessor:function(e,t){return e},stopNodes:[]};var Le=Ne;const Oe=["attributeNamePrefix","attrNodeName","textNodeName","ignoreAttributes","ignoreNameSpace","allowBooleanAttributes","parseNodeValue","parseAttributeValue","arrayMode","trimValues","cdataTagName","cdataPositionChar","tagValueProcessor","attrValueProcessor","parseTrueNumberOnly","stopNodes"];var Ce=Oe;function ye(e,t,r){return t&&(r.trimValues&&(t=t.trim()),t=_e(t=r.tagValueProcessor(t,e),r.parseNodeValue,r.parseTrueNumberOnly)),t}function xe(e,t){if(t.ignoreNameSpace){const t=e.split(":"),r="/"===e.charAt(0)?"/":"";if("xmlns"===t[0])return"";2===t.length&&(e=r+t[1])}return e}function _e(e,t,r){if(t&&"string"==typeof e){let t;return""===e.trim()||isNaN(e)?t="true"===e||"false"!==e&&e:(-1!==e.indexOf("0x")?t=Number.parseInt(e,16):-1!==e.indexOf(".")?(t=Number.parseFloat(e),e=e.replace(/\.?0+$/,"")):t=Number.parseInt(e,10),r&&(t=String(t)===e?t:e)),t}return ve.isExist(e)?e:""}const De=new RegExp("([^\\s=]+)\\s*(=\\s*(['\"])(.*?)\\3)?","g");function Re(e,t){if(!t.ignoreAttributes&&"string"==typeof e){e=e.replace(/\r?\n/g," ");const r=ve.getAllMatches(e,De),n=r.length,i={};for(let e=0;e<n;e++){const n=xe(r[e][1],t);n.length&&(void 0!==r[e][4]?(t.trimValues&&(r[e][4]=r[e][4].trim()),r[e][4]=t.attrValueProcessor(r[e][4],n),i[t.attributeNamePrefix+n]=_e(r[e][4],t.parseAttributeValue,t.parseTrueNumberOnly)):t.allowBooleanAttributes&&(i[t.attributeNamePrefix+n]=!0))}if(!Object.keys(i).length)return;if(t.attrNodeName){const e={};return e[t.attrNodeName]=i,e}return i}}function qe(e,t){let r,n="";for(let i=t;i<e.length;i++){let t=e[i];if(r)t===r&&(r="");else if('"'===t||"'"===t)r=t;else{if(">"===t)return{data:n,index:i};"\t"===t&&(t=" ")}n+=t}}function Pe(e,t,r,n){const i=e.indexOf(t,r);if(-1===i)throw new Error(n);return i+t.length-1}var ke={defaultOptions:Le,props:Ce,getTraversalObj:function(e,t){e=e.replace(/(\r\n)|\n/," "),t=we(t,Ne,Oe);const r=new Ie("!xml");let n=r,i="";for(let r=0;r<e.length;r++){if("<"===e[r])if("/"===e[r+1]){const o=Pe(e,">",r,"Closing Tag is not closed.");let s=e.substring(r+2,o).trim();if(t.ignoreNameSpace){const e=s.indexOf(":");-1!==e&&(s=s.substr(e+1))}n&&(n.val?n.val=ve.getValue(n.val)+""+ye(s,i,t):n.val=ye(s,i,t)),t.stopNodes.length&&t.stopNodes.includes(n.tagname)&&(n.child=[],null==n.attrsMap&&(n.attrsMap={}),n.val=e.substr(n.startIndex+1,r-n.startIndex-1)),n=n.parent,i="",r=o}else if("?"===e[r+1])r=Pe(e,"?>",r,"Pi Tag is not closed.");else if("!--"===e.substr(r+1,3))r=Pe(e,"--\x3e",r,"Comment is not closed.");else if("!D"===e.substr(r+1,2)){const t=Pe(e,">",r,"DOCTYPE is not closed.");r=e.substring(r,t).indexOf("[")>=0?e.indexOf("]>",r)+1:t}else if("!["===e.substr(r+1,2)){const o=Pe(e,"]]>",r,"CDATA is not closed.")-2,s=e.substring(r+9,o);if(i&&(n.val=ve.getValue(n.val)+""+ye(n.tagname,i,t),i=""),t.cdataTagName){const e=new Ie(t.cdataTagName,n,s);n.addChild(e),n.val=ve.getValue(n.val)+t.cdataPositionChar,s&&(e.val=s)}else n.val=(n.val||"")+(s||"");r=o+2}else{const o=qe(e,r+1);let s=o.data;const a=o.index,l=s.indexOf(" ");let c=s;if(-1!==l&&(c=s.substr(0,l).trimRight(),s=s.substr(l+1)),t.ignoreNameSpace){const e=c.indexOf(":");-1!==e&&(c=c.substr(e+1))}if(n&&i&&"!xml"!==n.tagname&&(n.val=ve.getValue(n.val)+""+ye(n.tagname,i,t)),s.length>0&&s.lastIndexOf("/")===s.length-1){"/"===c[c.length-1]?(c=c.substr(0,c.length-1),s=c):s=s.substr(0,s.length-1);const e=new Ie(c,n,"");c!==s&&(e.attrsMap=Re(s,t)),n.addChild(e)}else{const e=new Ie(c,n);t.stopNodes.length&&t.stopNodes.includes(e.tagname)&&(e.startIndex=a),c!==s&&(e.attrsMap=Re(s,t)),n.addChild(e),n=e}i="",r=a}else i+=e[r]}return r}};const Fe={allowBooleanAttributes:!1},Be=["allowBooleanAttributes"];function Ve(e,t){for(var r=t;t<e.length;t++)if("?"!=e[t]&&" "!=e[t]);else{var n=e.substr(r,t-r);if(t>5&&"xml"===n)return je("InvalidXml","XML declaration allowed only at the start of the document.",We(e,t));if("?"==e[t]&&">"==e[t+1]){t++;break}}return t}function Me(e,t){if(e.length>t+5&&"-"===e[t+1]&&"-"===e[t+2]){for(t+=3;t<e.length;t++)if("-"===e[t]&&"-"===e[t+1]&&">"===e[t+2]){t+=2;break}}else if(e.length>t+8&&"D"===e[t+1]&&"O"===e[t+2]&&"C"===e[t+3]&&"T"===e[t+4]&&"Y"===e[t+5]&&"P"===e[t+6]&&"E"===e[t+7]){let r=1;for(t+=8;t<e.length;t++)if("<"===e[t])r++;else if(">"===e[t]&&(r--,0===r))break}else if(e.length>t+9&&"["===e[t+1]&&"C"===e[t+2]&&"D"===e[t+3]&&"A"===e[t+4]&&"T"===e[t+5]&&"A"===e[t+6]&&"["===e[t+7])for(t+=8;t<e.length;t++)if("]"===e[t]&&"]"===e[t+1]&&">"===e[t+2]){t+=2;break}return t}function Ue(e,t){let r="",n="",i=!1;for(;t<e.length;t++){if('"'===e[t]||"'"===e[t])if(""===n)n=e[t];else{if(n!==e[t])continue;n=""}else if(">"===e[t]&&""===n){i=!0;break}r+=e[t]}return""===n&&{value:r,index:t,tagClosed:i}}const Ge=new RegExp("(\\s*)([^\\s=]+)(\\s*=)?(\\s*(['\"])(([\\s\\S])*?)\\5)?","g");function He(e,t){const r=ve.getAllMatches(e,Ge),n={};for(let i=0;i<r.length;i++){if(0===r[i][1].length)return je("InvalidAttr","Attribute '"+r[i][2]+"' has no space in starting.",ze(e,r[i][0]));if(void 0===r[i][3]&&!t.allowBooleanAttributes)return je("InvalidAttr","boolean attribute '"+r[i][2]+"' is not allowed.",ze(e,r[i][0]));const o=r[i][2];if(!Ke(o))return je("InvalidAttr","Attribute '"+o+"' is an invalid name.",ze(e,r[i][0]));if(n.hasOwnProperty(o))return je("InvalidAttr","Attribute '"+o+"' is repeated.",ze(e,r[i][0]));n[o]=1}return!0}function Ye(e,t){if(";"===e[++t])return-1;if("#"===e[t])return function(e,t){let r=/\d/;for("x"===e[t]&&(t++,r=/[\da-fA-F]/);t<e.length;t++){if(";"===e[t])return t;if(!e[t].match(r))break}return-1}(e,++t);let r=0;for(;t<e.length;t++,r++)if(!(e[t].match(/\w/)&&r<20)){if(";"===e[t])break;return-1}return t}function je(e,t,r){return{err:{code:e,msg:t,line:r}}}function Ke(e){return ve.isName(e)}function We(e,t){return e.substring(0,t).split(/\r?\n/).length}function ze(e,t){return e.indexOf(t)+t.length}var Xe=function(e,t){t=ve.buildOptions(t,Fe,Be);const r=[];let n=!1,i=!1;"\ufeff"===e[0]&&(e=e.substr(1));for(let s=0;s<e.length;s++){if("<"!==e[s]){if(" "===e[s]||"\t"===e[s]||"\n"===e[s]||"\r"===e[s])continue;return je("InvalidChar","char '"+e[s]+"' is not expected.",We(e,s))}if(s++,"?"===e[s]){if(s=Ve(e,++s),s.err)return s}else{if("!"===e[s]){s=Me(e,s);continue}{let a=!1;"/"===e[s]&&(a=!0,s++);let l="";for(;s<e.length&&">"!==e[s]&&" "!==e[s]&&"\t"!==e[s]&&"\n"!==e[s]&&"\r"!==e[s];s++)l+=e[s];if(l=l.trim(),"/"===l[l.length-1]&&(l=l.substring(0,l.length-1),s--),o=l,!ve.isName(o)){let t;return t=0===l.trim().length?"There is an unnecessary space between tag name and backward slash '</ ..'.":"Tag '"+l+"' is an invalid name.",je("InvalidTag",t,We(e,s))}const c=Ue(e,s);if(!1===c)return je("InvalidAttr","Attributes for '"+l+"' have open quote.",We(e,s));let u=c.value;if(s=c.index,"/"===u[u.length-1]){u=u.substring(0,u.length-1);const r=He(u,t);if(!0!==r)return je(r.err.code,r.err.msg,We(e,s-u.length+r.err.line));n=!0}else if(a){if(!c.tagClosed)return je("InvalidTag","Closing tag '"+l+"' doesn't have proper closing.",We(e,s));if(u.trim().length>0)return je("InvalidTag","Closing tag '"+l+"' can't have attributes or invalid starting.",We(e,s));{const t=r.pop();if(l!==t)return je("InvalidTag","Closing tag '"+t+"' is expected inplace of '"+l+"'.",We(e,s));0==r.length&&(i=!0)}}else{const o=He(u,t);if(!0!==o)return je(o.err.code,o.err.msg,We(e,s-u.length+o.err.line));if(!0===i)return je("InvalidXml","Multiple possible root nodes found.",We(e,s));r.push(l),n=!0}for(s++;s<e.length;s++){if("<"===e[s]){if("!"===e[s+1]){s++,s=Me(e,s);continue}break}if("&"===e[s]){const t=Ye(e,s);if(-1==t)return je("InvalidChar","char '&' is not expected.",We(e,s));s=t}}"<"===e[s]&&s--}}}var o;return n?!(r.length>0)||je("InvalidXml","Invalid '"+JSON.stringify(r,null,4).replace(/\r?\n/g,"")+"' found.",1):je("InvalidXml","Start tag expected.",1)};const Ze=function(e){return String.fromCharCode(e)},Je={nilChar:Ze(176),missingChar:Ze(201),nilPremitive:Ze(175),missingPremitive:Ze(200),emptyChar:Ze(178),emptyValue:Ze(177),boundryChar:Ze(179),objStart:Ze(198),arrStart:Ze(204),arrayEnd:Ze(185)},Qe=[Je.nilChar,Je.nilPremitive,Je.missingChar,Je.missingPremitive,Je.boundryChar,Je.emptyChar,Je.emptyValue,Je.arrayEnd,Je.objStart,Je.arrStart],$e=function(e,t,r){if("string"==typeof t)return e&&e[0]&&void 0!==e[0].val?et(e[0].val):et(e);{const i=void 0===(n=e)?Je.missingChar:null===n?Je.nilChar:!(n.child&&0===Object.keys(n.child).length&&(!n.attrsMap||0===Object.keys(n.attrsMap).length))||Je.emptyChar;if(!0===i){let n="";if(Array.isArray(t)){n+=Je.arrStart;const i=t[0],o=e.length;if("string"==typeof i)for(let t=0;t<o;t++){const r=et(e[t].val);n=tt(n,r)}else for(let t=0;t<o;t++){const o=$e(e[t],i,r);n=tt(n,o)}n+=Je.arrayEnd}else{n+=Je.objStart;const i=Object.keys(t);Array.isArray(e)&&(e=e[0]);for(let o in i){const s=i[o];let a;a=!r.ignoreAttributes&&e.attrsMap&&e.attrsMap[s]?$e(e.attrsMap[s],t[s],r):s===r.textNodeName?$e(e.val,t[s],r):$e(e.child[s],t[s],r),n=tt(n,a)}}return n}return i}var n},et=function(e){switch(e){case void 0:return Je.missingPremitive;case null:return Je.nilPremitive;case"":return Je.emptyValue;default:return e}},tt=function(e,t){return rt(t[0])||rt(e[e.length-1])||(e+=Je.boundryChar),e+t},rt=function(e){return-1!==Qe.indexOf(e)};const nt=ve.buildOptions;var it={convert2nimn:function(e,t,r){return r=nt(r,ke.defaultOptions,ke.props),$e(e,t,r)}};const ot=ve.buildOptions,st=function(e,t,r){let n="{";const i=Object.keys(e.child);for(let r=0;r<i.length;r++){var o=i[r];if(e.child[o]&&e.child[o].length>1){for(var s in n+='"'+o+'" : [ ',e.child[o])n+=st(e.child[o][s],t)+" , ";n=n.substr(0,n.length-1)+" ] "}else n+='"'+o+'" : '+st(e.child[o][0],t)+" ,"}return ve.merge(n,e.attrsMap),ve.isEmptyObject(n)?ve.isExist(e.val)?e.val:"":(ve.isExist(e.val)&&("string"!=typeof e.val||""!==e.val&&e.val!==t.cdataPositionChar)&&(n+='"'+t.textNodeName+'" : '+(!0!==(a=e.val)&&!1!==a&&isNaN(a)?'"'+a+'"':a)),","===n[n.length-1]&&(n=n.substr(0,n.length-2)),n+"}");var a};var at={convertToJsonString:function(e,t){return(t=ot(t,ke.defaultOptions,ke.props)).indentBy=t.indentBy||"",st(e,t)}};const lt=ve.buildOptions,ct={attributeNamePrefix:"@_",attrNodeName:!1,textNodeName:"#text",ignoreAttributes:!0,cdataTagName:!1,cdataPositionChar:"\\c",format:!1,indentBy:"  ",supressEmptyNode:!1,tagValueProcessor:function(e){return e},attrValueProcessor:function(e){return e}},ut=["attributeNamePrefix","attrNodeName","textNodeName","ignoreAttributes","cdataTagName","cdataPositionChar","format","indentBy","supressEmptyNode","tagValueProcessor","attrValueProcessor"];function pt(e){this.options=lt(e,ct,ut),this.options.ignoreAttributes||this.options.attrNodeName?this.isAttribute=function(){return!1}:(this.attrPrefixLen=this.options.attributeNamePrefix.length,this.isAttribute=bt),this.options.cdataTagName?this.isCDATA=vt:this.isCDATA=function(){return!1},this.replaceCDATAstr=dt,this.replaceCDATAarr=ht,this.options.format?(this.indentate=Et,this.tagEndChar=">\n",this.newLine="\n"):(this.indentate=function(){return""},this.tagEndChar=">",this.newLine=""),this.options.supressEmptyNode?(this.buildTextNode=ft,this.buildObjNode=mt):(this.buildTextNode=Tt,this.buildObjNode=gt),this.buildTextValNode=Tt,this.buildObjectNode=gt}function dt(e,t){return e=this.options.tagValueProcessor(""+e),""===this.options.cdataPositionChar||""===e?e+"<![CDATA["+t+"]]"+this.tagEndChar:e.replace(this.options.cdataPositionChar,"<![CDATA["+t+"]]"+this.tagEndChar)}function ht(e,t){if(e=this.options.tagValueProcessor(""+e),""===this.options.cdataPositionChar||""===e)return e+"<![CDATA["+t.join("]]><![CDATA[")+"]]"+this.tagEndChar;for(let r in t)e=e.replace(this.options.cdataPositionChar,"<![CDATA["+t[r]+"]]>");return e+this.newLine}function gt(e,t,r,n){return r&&!e.includes("<")?this.indentate(n)+"<"+t+r+">"+e+"</"+t+this.tagEndChar:this.indentate(n)+"<"+t+r+this.tagEndChar+e+this.indentate(n)+"</"+t+this.tagEndChar}function mt(e,t,r,n){return""!==e?this.buildObjectNode(e,t,r,n):this.indentate(n)+"<"+t+r+"/"+this.tagEndChar}function Tt(e,t,r,n){return this.indentate(n)+"<"+t+r+">"+this.options.tagValueProcessor(e)+"</"+t+this.tagEndChar}function ft(e,t,r,n){return""!==e?this.buildTextValNode(e,t,r,n):this.indentate(n)+"<"+t+r+"/"+this.tagEndChar}function Et(e){return this.options.indentBy.repeat(e)}function bt(e){return!!e.startsWith(this.options.attributeNamePrefix)&&e.substr(this.attrPrefixLen)}function vt(e){return e===this.options.cdataTagName}pt.prototype.parse=function(e){return this.j2x(e,0).val},pt.prototype.j2x=function(e,t){let r="",n="";const i=Object.keys(e),o=i.length;for(let s=0;s<o;s++){const o=i[s];if(void 0===e[o]);else if(null===e[o])n+=this.indentate(t)+"<"+o+"/"+this.tagEndChar;else if(e[o]instanceof Date)n+=this.buildTextNode(e[o],o,"",t);else if("object"!=typeof e[o]){const i=this.isAttribute(o);i?r+=" "+i+'="'+this.options.attrValueProcessor(""+e[o])+'"':this.isCDATA(o)?e[this.options.textNodeName]?n+=this.replaceCDATAstr(e[this.options.textNodeName],e[o]):n+=this.replaceCDATAstr("",e[o]):o===this.options.textNodeName?e[this.options.cdataTagName]||(n+=this.options.tagValueProcessor(""+e[o])):n+=this.buildTextNode(e[o],o,"",t)}else if(Array.isArray(e[o]))if(this.isCDATA(o))n+=this.indentate(t),e[this.options.textNodeName]?n+=this.replaceCDATAarr(e[this.options.textNodeName],e[o]):n+=this.replaceCDATAarr("",e[o]);else{const r=e[o].length;for(let i=0;i<r;i++){const r=e[o][i];if(void 0===r);else if(null===r)n+=this.indentate(t)+"<"+o+"/"+this.tagEndChar;else if("object"==typeof r){const e=this.j2x(r,t+1);n+=this.buildObjNode(e.val,o,e.attrStr,t)}else n+=this.buildTextNode(r,o,"",t)}}else if(this.options.attrNodeName&&o===this.options.attrNodeName){const t=Object.keys(e[o]),n=t.length;for(let i=0;i<n;i++)r+=" "+t[i]+'="'+this.options.attrValueProcessor(""+e[o][t[i]])+'"'}else{const r=this.j2x(e[o],t+1);n+=this.buildObjNode(r.val,o,r.attrStr,t)}}return{attrStr:r,val:n}};var St=pt,At=Ee((function(e,t){const r=ke,n=ve.buildOptions;t.parse=function(e,t,i){if(i){!0===i&&(i={});const t=Xe(e,i);if(!0!==t)throw Error(t.err.msg)}t=n(t,r.defaultOptions,r.props);const o=ke.getTraversalObj(e,t);return Ae.convertToJson(o,t)},t.convertTonimn=it.convert2nimn,t.getTraversalObj=ke.getTraversalObj,t.convertToJson=Ae.convertToJson,t.convertToJsonString=at.convertToJsonString,t.validate=Xe,t.j2xParser=St,t.parseToNimn=function(e,r,n){return t.convertTonimn(t.getTraversalObj(e,n),r,n)}})),It=At.parse,wt=(At.convertTonimn,At.getTraversalObj,At.convertToJson,At.convertToJsonString,At.validate,At.j2xParser,At.parseToNimn,{Aacute:"Á",aacute:"á",Abreve:"Ă",abreve:"ă",ac:"∾",acd:"∿",acE:"∾̳",Acirc:"Â",acirc:"â",acute:"´",Acy:"А",acy:"а",AElig:"Æ",aelig:"æ",af:"⁡",Afr:"𝔄",afr:"𝔞",Agrave:"À",agrave:"à",alefsym:"ℵ",aleph:"ℵ",Alpha:"Α",alpha:"α",Amacr:"Ā",amacr:"ā",amalg:"⨿",amp:"&",AMP:"&",andand:"⩕",And:"⩓",and:"∧",andd:"⩜",andslope:"⩘",andv:"⩚",ang:"∠",ange:"⦤",angle:"∠",angmsdaa:"⦨",angmsdab:"⦩",angmsdac:"⦪",angmsdad:"⦫",angmsdae:"⦬",angmsdaf:"⦭",angmsdag:"⦮",angmsdah:"⦯",angmsd:"∡",angrt:"∟",angrtvb:"⊾",angrtvbd:"⦝",angsph:"∢",angst:"Å",angzarr:"⍼",Aogon:"Ą",aogon:"ą",Aopf:"𝔸",aopf:"𝕒",apacir:"⩯",ap:"≈",apE:"⩰",ape:"≊",apid:"≋",apos:"'",ApplyFunction:"⁡",approx:"≈",approxeq:"≊",Aring:"Å",aring:"å",Ascr:"𝒜",ascr:"𝒶",Assign:"≔",ast:"*",asymp:"≈",asympeq:"≍",Atilde:"Ã",atilde:"ã",Auml:"Ä",auml:"ä",awconint:"∳",awint:"⨑",backcong:"≌",backepsilon:"϶",backprime:"‵",backsim:"∽",backsimeq:"⋍",Backslash:"∖",Barv:"⫧",barvee:"⊽",barwed:"⌅",Barwed:"⌆",barwedge:"⌅",bbrk:"⎵",bbrktbrk:"⎶",bcong:"≌",Bcy:"Б",bcy:"б",bdquo:"„",becaus:"∵",because:"∵",Because:"∵",bemptyv:"⦰",bepsi:"϶",bernou:"ℬ",Bernoullis:"ℬ",Beta:"Β",beta:"β",beth:"ℶ",between:"≬",Bfr:"𝔅",bfr:"𝔟",bigcap:"⋂",bigcirc:"◯",bigcup:"⋃",bigodot:"⨀",bigoplus:"⨁",bigotimes:"⨂",bigsqcup:"⨆",bigstar:"★",bigtriangledown:"▽",bigtriangleup:"△",biguplus:"⨄",bigvee:"⋁",bigwedge:"⋀",bkarow:"⤍",blacklozenge:"⧫",blacksquare:"▪",blacktriangle:"▴",blacktriangledown:"▾",blacktriangleleft:"◂",blacktriangleright:"▸",blank:"␣",blk12:"▒",blk14:"░",blk34:"▓",block:"█",bne:"=⃥",bnequiv:"≡⃥",bNot:"⫭",bnot:"⌐",Bopf:"𝔹",bopf:"𝕓",bot:"⊥",bottom:"⊥",bowtie:"⋈",boxbox:"⧉",boxdl:"┐",boxdL:"╕",boxDl:"╖",boxDL:"╗",boxdr:"┌",boxdR:"╒",boxDr:"╓",boxDR:"╔",boxh:"─",boxH:"═",boxhd:"┬",boxHd:"╤",boxhD:"╥",boxHD:"╦",boxhu:"┴",boxHu:"╧",boxhU:"╨",boxHU:"╩",boxminus:"⊟",boxplus:"⊞",boxtimes:"⊠",boxul:"┘",boxuL:"╛",boxUl:"╜",boxUL:"╝",boxur:"└",boxuR:"╘",boxUr:"╙",boxUR:"╚",boxv:"│",boxV:"║",boxvh:"┼",boxvH:"╪",boxVh:"╫",boxVH:"╬",boxvl:"┤",boxvL:"╡",boxVl:"╢",boxVL:"╣",boxvr:"├",boxvR:"╞",boxVr:"╟",boxVR:"╠",bprime:"‵",breve:"˘",Breve:"˘",brvbar:"¦",bscr:"𝒷",Bscr:"ℬ",bsemi:"⁏",bsim:"∽",bsime:"⋍",bsolb:"⧅",bsol:"\\",bsolhsub:"⟈",bull:"•",bullet:"•",bump:"≎",bumpE:"⪮",bumpe:"≏",Bumpeq:"≎",bumpeq:"≏",Cacute:"Ć",cacute:"ć",capand:"⩄",capbrcup:"⩉",capcap:"⩋",cap:"∩",Cap:"⋒",capcup:"⩇",capdot:"⩀",CapitalDifferentialD:"ⅅ",caps:"∩︀",caret:"⁁",caron:"ˇ",Cayleys:"ℭ",ccaps:"⩍",Ccaron:"Č",ccaron:"č",Ccedil:"Ç",ccedil:"ç",Ccirc:"Ĉ",ccirc:"ĉ",Cconint:"∰",ccups:"⩌",ccupssm:"⩐",Cdot:"Ċ",cdot:"ċ",cedil:"¸",Cedilla:"¸",cemptyv:"⦲",cent:"¢",centerdot:"·",CenterDot:"·",cfr:"𝔠",Cfr:"ℭ",CHcy:"Ч",chcy:"ч",check:"✓",checkmark:"✓",Chi:"Χ",chi:"χ",circ:"ˆ",circeq:"≗",circlearrowleft:"↺",circlearrowright:"↻",circledast:"⊛",circledcirc:"⊚",circleddash:"⊝",CircleDot:"⊙",circledR:"®",circledS:"Ⓢ",CircleMinus:"⊖",CirclePlus:"⊕",CircleTimes:"⊗",cir:"○",cirE:"⧃",cire:"≗",cirfnint:"⨐",cirmid:"⫯",cirscir:"⧂",ClockwiseContourIntegral:"∲",CloseCurlyDoubleQuote:"”",CloseCurlyQuote:"’",clubs:"♣",clubsuit:"♣",colon:":",Colon:"∷",Colone:"⩴",colone:"≔",coloneq:"≔",comma:",",commat:"@",comp:"∁",compfn:"∘",complement:"∁",complexes:"ℂ",cong:"≅",congdot:"⩭",Congruent:"≡",conint:"∮",Conint:"∯",ContourIntegral:"∮",copf:"𝕔",Copf:"ℂ",coprod:"∐",Coproduct:"∐",copy:"©",COPY:"©",copysr:"℗",CounterClockwiseContourIntegral:"∳",crarr:"↵",cross:"✗",Cross:"⨯",Cscr:"𝒞",cscr:"𝒸",csub:"⫏",csube:"⫑",csup:"⫐",csupe:"⫒",ctdot:"⋯",cudarrl:"⤸",cudarrr:"⤵",cuepr:"⋞",cuesc:"⋟",cularr:"↶",cularrp:"⤽",cupbrcap:"⩈",cupcap:"⩆",CupCap:"≍",cup:"∪",Cup:"⋓",cupcup:"⩊",cupdot:"⊍",cupor:"⩅",cups:"∪︀",curarr:"↷",curarrm:"⤼",curlyeqprec:"⋞",curlyeqsucc:"⋟",curlyvee:"⋎",curlywedge:"⋏",curren:"¤",curvearrowleft:"↶",curvearrowright:"↷",cuvee:"⋎",cuwed:"⋏",cwconint:"∲",cwint:"∱",cylcty:"⌭",dagger:"†",Dagger:"‡",daleth:"ℸ",darr:"↓",Darr:"↡",dArr:"⇓",dash:"‐",Dashv:"⫤",dashv:"⊣",dbkarow:"⤏",dblac:"˝",Dcaron:"Ď",dcaron:"ď",Dcy:"Д",dcy:"д",ddagger:"‡",ddarr:"⇊",DD:"ⅅ",dd:"ⅆ",DDotrahd:"⤑",ddotseq:"⩷",deg:"°",Del:"∇",Delta:"Δ",delta:"δ",demptyv:"⦱",dfisht:"⥿",Dfr:"𝔇",dfr:"𝔡",dHar:"⥥",dharl:"⇃",dharr:"⇂",DiacriticalAcute:"´",DiacriticalDot:"˙",DiacriticalDoubleAcute:"˝",DiacriticalGrave:"`",DiacriticalTilde:"˜",diam:"⋄",diamond:"⋄",Diamond:"⋄",diamondsuit:"♦",diams:"♦",die:"¨",DifferentialD:"ⅆ",digamma:"ϝ",disin:"⋲",div:"÷",divide:"÷",divideontimes:"⋇",divonx:"⋇",DJcy:"Ђ",djcy:"ђ",dlcorn:"⌞",dlcrop:"⌍",dollar:"$",Dopf:"𝔻",dopf:"𝕕",Dot:"¨",dot:"˙",DotDot:"⃜",doteq:"≐",doteqdot:"≑",DotEqual:"≐",dotminus:"∸",dotplus:"∔",dotsquare:"⊡",doublebarwedge:"⌆",DoubleContourIntegral:"∯",DoubleDot:"¨",DoubleDownArrow:"⇓",DoubleLeftArrow:"⇐",DoubleLeftRightArrow:"⇔",DoubleLeftTee:"⫤",DoubleLongLeftArrow:"⟸",DoubleLongLeftRightArrow:"⟺",DoubleLongRightArrow:"⟹",DoubleRightArrow:"⇒",DoubleRightTee:"⊨",DoubleUpArrow:"⇑",DoubleUpDownArrow:"⇕",DoubleVerticalBar:"∥",DownArrowBar:"⤓",downarrow:"↓",DownArrow:"↓",Downarrow:"⇓",DownArrowUpArrow:"⇵",DownBreve:"̑",downdownarrows:"⇊",downharpoonleft:"⇃",downharpoonright:"⇂",DownLeftRightVector:"⥐",DownLeftTeeVector:"⥞",DownLeftVectorBar:"⥖",DownLeftVector:"↽",DownRightTeeVector:"⥟",DownRightVectorBar:"⥗",DownRightVector:"⇁",DownTeeArrow:"↧",DownTee:"⊤",drbkarow:"⤐",drcorn:"⌟",drcrop:"⌌",Dscr:"𝒟",dscr:"𝒹",DScy:"Ѕ",dscy:"ѕ",dsol:"⧶",Dstrok:"Đ",dstrok:"đ",dtdot:"⋱",dtri:"▿",dtrif:"▾",duarr:"⇵",duhar:"⥯",dwangle:"⦦",DZcy:"Џ",dzcy:"џ",dzigrarr:"⟿",Eacute:"É",eacute:"é",easter:"⩮",Ecaron:"Ě",ecaron:"ě",Ecirc:"Ê",ecirc:"ê",ecir:"≖",ecolon:"≕",Ecy:"Э",ecy:"э",eDDot:"⩷",Edot:"Ė",edot:"ė",eDot:"≑",ee:"ⅇ",efDot:"≒",Efr:"𝔈",efr:"𝔢",eg:"⪚",Egrave:"È",egrave:"è",egs:"⪖",egsdot:"⪘",el:"⪙",Element:"∈",elinters:"⏧",ell:"ℓ",els:"⪕",elsdot:"⪗",Emacr:"Ē",emacr:"ē",empty:"∅",emptyset:"∅",EmptySmallSquare:"◻",emptyv:"∅",EmptyVerySmallSquare:"▫",emsp13:" ",emsp14:" ",emsp:" ",ENG:"Ŋ",eng:"ŋ",ensp:" ",Eogon:"Ę",eogon:"ę",Eopf:"𝔼",eopf:"𝕖",epar:"⋕",eparsl:"⧣",eplus:"⩱",epsi:"ε",Epsilon:"Ε",epsilon:"ε",epsiv:"ϵ",eqcirc:"≖",eqcolon:"≕",eqsim:"≂",eqslantgtr:"⪖",eqslantless:"⪕",Equal:"⩵",equals:"=",EqualTilde:"≂",equest:"≟",Equilibrium:"⇌",equiv:"≡",equivDD:"⩸",eqvparsl:"⧥",erarr:"⥱",erDot:"≓",escr:"ℯ",Escr:"ℰ",esdot:"≐",Esim:"⩳",esim:"≂",Eta:"Η",eta:"η",ETH:"Ð",eth:"ð",Euml:"Ë",euml:"ë",euro:"€",excl:"!",exist:"∃",Exists:"∃",expectation:"ℰ",exponentiale:"ⅇ",ExponentialE:"ⅇ",fallingdotseq:"≒",Fcy:"Ф",fcy:"ф",female:"♀",ffilig:"ﬃ",fflig:"ﬀ",ffllig:"ﬄ",Ffr:"𝔉",ffr:"𝔣",filig:"ﬁ",FilledSmallSquare:"◼",FilledVerySmallSquare:"▪",fjlig:"fj",flat:"♭",fllig:"ﬂ",fltns:"▱",fnof:"ƒ",Fopf:"𝔽",fopf:"𝕗",forall:"∀",ForAll:"∀",fork:"⋔",forkv:"⫙",Fouriertrf:"ℱ",fpartint:"⨍",frac12:"½",frac13:"⅓",frac14:"¼",frac15:"⅕",frac16:"⅙",frac18:"⅛",frac23:"⅔",frac25:"⅖",frac34:"¾",frac35:"⅗",frac38:"⅜",frac45:"⅘",frac56:"⅚",frac58:"⅝",frac78:"⅞",frasl:"⁄",frown:"⌢",fscr:"𝒻",Fscr:"ℱ",gacute:"ǵ",Gamma:"Γ",gamma:"γ",Gammad:"Ϝ",gammad:"ϝ",gap:"⪆",Gbreve:"Ğ",gbreve:"ğ",Gcedil:"Ģ",Gcirc:"Ĝ",gcirc:"ĝ",Gcy:"Г",gcy:"г",Gdot:"Ġ",gdot:"ġ",ge:"≥",gE:"≧",gEl:"⪌",gel:"⋛",geq:"≥",geqq:"≧",geqslant:"⩾",gescc:"⪩",ges:"⩾",gesdot:"⪀",gesdoto:"⪂",gesdotol:"⪄",gesl:"⋛︀",gesles:"⪔",Gfr:"𝔊",gfr:"𝔤",gg:"≫",Gg:"⋙",ggg:"⋙",gimel:"ℷ",GJcy:"Ѓ",gjcy:"ѓ",gla:"⪥",gl:"≷",glE:"⪒",glj:"⪤",gnap:"⪊",gnapprox:"⪊",gne:"⪈",gnE:"≩",gneq:"⪈",gneqq:"≩",gnsim:"⋧",Gopf:"𝔾",gopf:"𝕘",grave:"`",GreaterEqual:"≥",GreaterEqualLess:"⋛",GreaterFullEqual:"≧",GreaterGreater:"⪢",GreaterLess:"≷",GreaterSlantEqual:"⩾",GreaterTilde:"≳",Gscr:"𝒢",gscr:"ℊ",gsim:"≳",gsime:"⪎",gsiml:"⪐",gtcc:"⪧",gtcir:"⩺",gt:">",GT:">",Gt:"≫",gtdot:"⋗",gtlPar:"⦕",gtquest:"⩼",gtrapprox:"⪆",gtrarr:"⥸",gtrdot:"⋗",gtreqless:"⋛",gtreqqless:"⪌",gtrless:"≷",gtrsim:"≳",gvertneqq:"≩︀",gvnE:"≩︀",Hacek:"ˇ",hairsp:" ",half:"½",hamilt:"ℋ",HARDcy:"Ъ",hardcy:"ъ",harrcir:"⥈",harr:"↔",hArr:"⇔",harrw:"↭",Hat:"^",hbar:"ℏ",Hcirc:"Ĥ",hcirc:"ĥ",hearts:"♥",heartsuit:"♥",hellip:"…",hercon:"⊹",hfr:"𝔥",Hfr:"ℌ",HilbertSpace:"ℋ",hksearow:"⤥",hkswarow:"⤦",hoarr:"⇿",homtht:"∻",hookleftarrow:"↩",hookrightarrow:"↪",hopf:"𝕙",Hopf:"ℍ",horbar:"―",HorizontalLine:"─",hscr:"𝒽",Hscr:"ℋ",hslash:"ℏ",Hstrok:"Ħ",hstrok:"ħ",HumpDownHump:"≎",HumpEqual:"≏",hybull:"⁃",hyphen:"‐",Iacute:"Í",iacute:"í",ic:"⁣",Icirc:"Î",icirc:"î",Icy:"И",icy:"и",Idot:"İ",IEcy:"Е",iecy:"е",iexcl:"¡",iff:"⇔",ifr:"𝔦",Ifr:"ℑ",Igrave:"Ì",igrave:"ì",ii:"ⅈ",iiiint:"⨌",iiint:"∭",iinfin:"⧜",iiota:"℩",IJlig:"Ĳ",ijlig:"ĳ",Imacr:"Ī",imacr:"ī",image:"ℑ",ImaginaryI:"ⅈ",imagline:"ℐ",imagpart:"ℑ",imath:"ı",Im:"ℑ",imof:"⊷",imped:"Ƶ",Implies:"⇒",incare:"℅",in:"∈",infin:"∞",infintie:"⧝",inodot:"ı",intcal:"⊺",int:"∫",Int:"∬",integers:"ℤ",Integral:"∫",intercal:"⊺",Intersection:"⋂",intlarhk:"⨗",intprod:"⨼",InvisibleComma:"⁣",InvisibleTimes:"⁢",IOcy:"Ё",iocy:"ё",Iogon:"Į",iogon:"į",Iopf:"𝕀",iopf:"𝕚",Iota:"Ι",iota:"ι",iprod:"⨼",iquest:"¿",iscr:"𝒾",Iscr:"ℐ",isin:"∈",isindot:"⋵",isinE:"⋹",isins:"⋴",isinsv:"⋳",isinv:"∈",it:"⁢",Itilde:"Ĩ",itilde:"ĩ",Iukcy:"І",iukcy:"і",Iuml:"Ï",iuml:"ï",Jcirc:"Ĵ",jcirc:"ĵ",Jcy:"Й",jcy:"й",Jfr:"𝔍",jfr:"𝔧",jmath:"ȷ",Jopf:"𝕁",jopf:"𝕛",Jscr:"𝒥",jscr:"𝒿",Jsercy:"Ј",jsercy:"ј",Jukcy:"Є",jukcy:"є",Kappa:"Κ",kappa:"κ",kappav:"ϰ",Kcedil:"Ķ",kcedil:"ķ",Kcy:"К",kcy:"к",Kfr:"𝔎",kfr:"𝔨",kgreen:"ĸ",KHcy:"Х",khcy:"х",KJcy:"Ќ",kjcy:"ќ",Kopf:"𝕂",kopf:"𝕜",Kscr:"𝒦",kscr:"𝓀",lAarr:"⇚",Lacute:"Ĺ",lacute:"ĺ",laemptyv:"⦴",lagran:"ℒ",Lambda:"Λ",lambda:"λ",lang:"⟨",Lang:"⟪",langd:"⦑",langle:"⟨",lap:"⪅",Laplacetrf:"ℒ",laquo:"«",larrb:"⇤",larrbfs:"⤟",larr:"←",Larr:"↞",lArr:"⇐",larrfs:"⤝",larrhk:"↩",larrlp:"↫",larrpl:"⤹",larrsim:"⥳",larrtl:"↢",latail:"⤙",lAtail:"⤛",lat:"⪫",late:"⪭",lates:"⪭︀",lbarr:"⤌",lBarr:"⤎",lbbrk:"❲",lbrace:"{",lbrack:"[",lbrke:"⦋",lbrksld:"⦏",lbrkslu:"⦍",Lcaron:"Ľ",lcaron:"ľ",Lcedil:"Ļ",lcedil:"ļ",lceil:"⌈",lcub:"{",Lcy:"Л",lcy:"л",ldca:"⤶",ldquo:"“",ldquor:"„",ldrdhar:"⥧",ldrushar:"⥋",ldsh:"↲",le:"≤",lE:"≦",LeftAngleBracket:"⟨",LeftArrowBar:"⇤",leftarrow:"←",LeftArrow:"←",Leftarrow:"⇐",LeftArrowRightArrow:"⇆",leftarrowtail:"↢",LeftCeiling:"⌈",LeftDoubleBracket:"⟦",LeftDownTeeVector:"⥡",LeftDownVectorBar:"⥙",LeftDownVector:"⇃",LeftFloor:"⌊",leftharpoondown:"↽",leftharpoonup:"↼",leftleftarrows:"⇇",leftrightarrow:"↔",LeftRightArrow:"↔",Leftrightarrow:"⇔",leftrightarrows:"⇆",leftrightharpoons:"⇋",leftrightsquigarrow:"↭",LeftRightVector:"⥎",LeftTeeArrow:"↤",LeftTee:"⊣",LeftTeeVector:"⥚",leftthreetimes:"⋋",LeftTriangleBar:"⧏",LeftTriangle:"⊲",LeftTriangleEqual:"⊴",LeftUpDownVector:"⥑",LeftUpTeeVector:"⥠",LeftUpVectorBar:"⥘",LeftUpVector:"↿",LeftVectorBar:"⥒",LeftVector:"↼",lEg:"⪋",leg:"⋚",leq:"≤",leqq:"≦",leqslant:"⩽",lescc:"⪨",les:"⩽",lesdot:"⩿",lesdoto:"⪁",lesdotor:"⪃",lesg:"⋚︀",lesges:"⪓",lessapprox:"⪅",lessdot:"⋖",lesseqgtr:"⋚",lesseqqgtr:"⪋",LessEqualGreater:"⋚",LessFullEqual:"≦",LessGreater:"≶",lessgtr:"≶",LessLess:"⪡",lesssim:"≲",LessSlantEqual:"⩽",LessTilde:"≲",lfisht:"⥼",lfloor:"⌊",Lfr:"𝔏",lfr:"𝔩",lg:"≶",lgE:"⪑",lHar:"⥢",lhard:"↽",lharu:"↼",lharul:"⥪",lhblk:"▄",LJcy:"Љ",ljcy:"љ",llarr:"⇇",ll:"≪",Ll:"⋘",llcorner:"⌞",Lleftarrow:"⇚",llhard:"⥫",lltri:"◺",Lmidot:"Ŀ",lmidot:"ŀ",lmoustache:"⎰",lmoust:"⎰",lnap:"⪉",lnapprox:"⪉",lne:"⪇",lnE:"≨",lneq:"⪇",lneqq:"≨",lnsim:"⋦",loang:"⟬",loarr:"⇽",lobrk:"⟦",longleftarrow:"⟵",LongLeftArrow:"⟵",Longleftarrow:"⟸",longleftrightarrow:"⟷",LongLeftRightArrow:"⟷",Longleftrightarrow:"⟺",longmapsto:"⟼",longrightarrow:"⟶",LongRightArrow:"⟶",Longrightarrow:"⟹",looparrowleft:"↫",looparrowright:"↬",lopar:"⦅",Lopf:"𝕃",lopf:"𝕝",loplus:"⨭",lotimes:"⨴",lowast:"∗",lowbar:"_",LowerLeftArrow:"↙",LowerRightArrow:"↘",loz:"◊",lozenge:"◊",lozf:"⧫",lpar:"(",lparlt:"⦓",lrarr:"⇆",lrcorner:"⌟",lrhar:"⇋",lrhard:"⥭",lrm:"‎",lrtri:"⊿",lsaquo:"‹",lscr:"𝓁",Lscr:"ℒ",lsh:"↰",Lsh:"↰",lsim:"≲",lsime:"⪍",lsimg:"⪏",lsqb:"[",lsquo:"‘",lsquor:"‚",Lstrok:"Ł",lstrok:"ł",ltcc:"⪦",ltcir:"⩹",lt:"<",LT:"<",Lt:"≪",ltdot:"⋖",lthree:"⋋",ltimes:"⋉",ltlarr:"⥶",ltquest:"⩻",ltri:"◃",ltrie:"⊴",ltrif:"◂",ltrPar:"⦖",lurdshar:"⥊",luruhar:"⥦",lvertneqq:"≨︀",lvnE:"≨︀",macr:"¯",male:"♂",malt:"✠",maltese:"✠",Map:"⤅",map:"↦",mapsto:"↦",mapstodown:"↧",mapstoleft:"↤",mapstoup:"↥",marker:"▮",mcomma:"⨩",Mcy:"М",mcy:"м",mdash:"—",mDDot:"∺",measuredangle:"∡",MediumSpace:" ",Mellintrf:"ℳ",Mfr:"𝔐",mfr:"𝔪",mho:"℧",micro:"µ",midast:"*",midcir:"⫰",mid:"∣",middot:"·",minusb:"⊟",minus:"−",minusd:"∸",minusdu:"⨪",MinusPlus:"∓",mlcp:"⫛",mldr:"…",mnplus:"∓",models:"⊧",Mopf:"𝕄",mopf:"𝕞",mp:"∓",mscr:"𝓂",Mscr:"ℳ",mstpos:"∾",Mu:"Μ",mu:"μ",multimap:"⊸",mumap:"⊸",nabla:"∇",Nacute:"Ń",nacute:"ń",nang:"∠⃒",nap:"≉",napE:"⩰̸",napid:"≋̸",napos:"ŉ",napprox:"≉",natural:"♮",naturals:"ℕ",natur:"♮",nbsp:" ",nbump:"≎̸",nbumpe:"≏̸",ncap:"⩃",Ncaron:"Ň",ncaron:"ň",Ncedil:"Ņ",ncedil:"ņ",ncong:"≇",ncongdot:"⩭̸",ncup:"⩂",Ncy:"Н",ncy:"н",ndash:"–",nearhk:"⤤",nearr:"↗",neArr:"⇗",nearrow:"↗",ne:"≠",nedot:"≐̸",NegativeMediumSpace:"​",NegativeThickSpace:"​",NegativeThinSpace:"​",NegativeVeryThinSpace:"​",nequiv:"≢",nesear:"⤨",nesim:"≂̸",NestedGreaterGreater:"≫",NestedLessLess:"≪",NewLine:"\n",nexist:"∄",nexists:"∄",Nfr:"𝔑",nfr:"𝔫",ngE:"≧̸",nge:"≱",ngeq:"≱",ngeqq:"≧̸",ngeqslant:"⩾̸",nges:"⩾̸",nGg:"⋙̸",ngsim:"≵",nGt:"≫⃒",ngt:"≯",ngtr:"≯",nGtv:"≫̸",nharr:"↮",nhArr:"⇎",nhpar:"⫲",ni:"∋",nis:"⋼",nisd:"⋺",niv:"∋",NJcy:"Њ",njcy:"њ",nlarr:"↚",nlArr:"⇍",nldr:"‥",nlE:"≦̸",nle:"≰",nleftarrow:"↚",nLeftarrow:"⇍",nleftrightarrow:"↮",nLeftrightarrow:"⇎",nleq:"≰",nleqq:"≦̸",nleqslant:"⩽̸",nles:"⩽̸",nless:"≮",nLl:"⋘̸",nlsim:"≴",nLt:"≪⃒",nlt:"≮",nltri:"⋪",nltrie:"⋬",nLtv:"≪̸",nmid:"∤",NoBreak:"⁠",NonBreakingSpace:" ",nopf:"𝕟",Nopf:"ℕ",Not:"⫬",not:"¬",NotCongruent:"≢",NotCupCap:"≭",NotDoubleVerticalBar:"∦",NotElement:"∉",NotEqual:"≠",NotEqualTilde:"≂̸",NotExists:"∄",NotGreater:"≯",NotGreaterEqual:"≱",NotGreaterFullEqual:"≧̸",NotGreaterGreater:"≫̸",NotGreaterLess:"≹",NotGreaterSlantEqual:"⩾̸",NotGreaterTilde:"≵",NotHumpDownHump:"≎̸",NotHumpEqual:"≏̸",notin:"∉",notindot:"⋵̸",notinE:"⋹̸",notinva:"∉",notinvb:"⋷",notinvc:"⋶",NotLeftTriangleBar:"⧏̸",NotLeftTriangle:"⋪",NotLeftTriangleEqual:"⋬",NotLess:"≮",NotLessEqual:"≰",NotLessGreater:"≸",NotLessLess:"≪̸",NotLessSlantEqual:"⩽̸",NotLessTilde:"≴",NotNestedGreaterGreater:"⪢̸",NotNestedLessLess:"⪡̸",notni:"∌",notniva:"∌",notnivb:"⋾",notnivc:"⋽",NotPrecedes:"⊀",NotPrecedesEqual:"⪯̸",NotPrecedesSlantEqual:"⋠",NotReverseElement:"∌",NotRightTriangleBar:"⧐̸",NotRightTriangle:"⋫",NotRightTriangleEqual:"⋭",NotSquareSubset:"⊏̸",NotSquareSubsetEqual:"⋢",NotSquareSuperset:"⊐̸",NotSquareSupersetEqual:"⋣",NotSubset:"⊂⃒",NotSubsetEqual:"⊈",NotSucceeds:"⊁",NotSucceedsEqual:"⪰̸",NotSucceedsSlantEqual:"⋡",NotSucceedsTilde:"≿̸",NotSuperset:"⊃⃒",NotSupersetEqual:"⊉",NotTilde:"≁",NotTildeEqual:"≄",NotTildeFullEqual:"≇",NotTildeTilde:"≉",NotVerticalBar:"∤",nparallel:"∦",npar:"∦",nparsl:"⫽⃥",npart:"∂̸",npolint:"⨔",npr:"⊀",nprcue:"⋠",nprec:"⊀",npreceq:"⪯̸",npre:"⪯̸",nrarrc:"⤳̸",nrarr:"↛",nrArr:"⇏",nrarrw:"↝̸",nrightarrow:"↛",nRightarrow:"⇏",nrtri:"⋫",nrtrie:"⋭",nsc:"⊁",nsccue:"⋡",nsce:"⪰̸",Nscr:"𝒩",nscr:"𝓃",nshortmid:"∤",nshortparallel:"∦",nsim:"≁",nsime:"≄",nsimeq:"≄",nsmid:"∤",nspar:"∦",nsqsube:"⋢",nsqsupe:"⋣",nsub:"⊄",nsubE:"⫅̸",nsube:"⊈",nsubset:"⊂⃒",nsubseteq:"⊈",nsubseteqq:"⫅̸",nsucc:"⊁",nsucceq:"⪰̸",nsup:"⊅",nsupE:"⫆̸",nsupe:"⊉",nsupset:"⊃⃒",nsupseteq:"⊉",nsupseteqq:"⫆̸",ntgl:"≹",Ntilde:"Ñ",ntilde:"ñ",ntlg:"≸",ntriangleleft:"⋪",ntrianglelefteq:"⋬",ntriangleright:"⋫",ntrianglerighteq:"⋭",Nu:"Ν",nu:"ν",num:"#",numero:"№",numsp:" ",nvap:"≍⃒",nvdash:"⊬",nvDash:"⊭",nVdash:"⊮",nVDash:"⊯",nvge:"≥⃒",nvgt:">⃒",nvHarr:"⤄",nvinfin:"⧞",nvlArr:"⤂",nvle:"≤⃒",nvlt:"<⃒",nvltrie:"⊴⃒",nvrArr:"⤃",nvrtrie:"⊵⃒",nvsim:"∼⃒",nwarhk:"⤣",nwarr:"↖",nwArr:"⇖",nwarrow:"↖",nwnear:"⤧",Oacute:"Ó",oacute:"ó",oast:"⊛",Ocirc:"Ô",ocirc:"ô",ocir:"⊚",Ocy:"О",ocy:"о",odash:"⊝",Odblac:"Ő",odblac:"ő",odiv:"⨸",odot:"⊙",odsold:"⦼",OElig:"Œ",oelig:"œ",ofcir:"⦿",Ofr:"𝔒",ofr:"𝔬",ogon:"˛",Ograve:"Ò",ograve:"ò",ogt:"⧁",ohbar:"⦵",ohm:"Ω",oint:"∮",olarr:"↺",olcir:"⦾",olcross:"⦻",oline:"‾",olt:"⧀",Omacr:"Ō",omacr:"ō",Omega:"Ω",omega:"ω",Omicron:"Ο",omicron:"ο",omid:"⦶",ominus:"⊖",Oopf:"𝕆",oopf:"𝕠",opar:"⦷",OpenCurlyDoubleQuote:"“",OpenCurlyQuote:"‘",operp:"⦹",oplus:"⊕",orarr:"↻",Or:"⩔",or:"∨",ord:"⩝",order:"ℴ",orderof:"ℴ",ordf:"ª",ordm:"º",origof:"⊶",oror:"⩖",orslope:"⩗",orv:"⩛",oS:"Ⓢ",Oscr:"𝒪",oscr:"ℴ",Oslash:"Ø",oslash:"ø",osol:"⊘",Otilde:"Õ",otilde:"õ",otimesas:"⨶",Otimes:"⨷",otimes:"⊗",Ouml:"Ö",ouml:"ö",ovbar:"⌽",OverBar:"‾",OverBrace:"⏞",OverBracket:"⎴",OverParenthesis:"⏜",para:"¶",parallel:"∥",par:"∥",parsim:"⫳",parsl:"⫽",part:"∂",PartialD:"∂",Pcy:"П",pcy:"п",percnt:"%",period:".",permil:"‰",perp:"⊥",pertenk:"‱",Pfr:"𝔓",pfr:"𝔭",Phi:"Φ",phi:"φ",phiv:"ϕ",phmmat:"ℳ",phone:"☎",Pi:"Π",pi:"π",pitchfork:"⋔",piv:"ϖ",planck:"ℏ",planckh:"ℎ",plankv:"ℏ",plusacir:"⨣",plusb:"⊞",pluscir:"⨢",plus:"+",plusdo:"∔",plusdu:"⨥",pluse:"⩲",PlusMinus:"±",plusmn:"±",plussim:"⨦",plustwo:"⨧",pm:"±",Poincareplane:"ℌ",pointint:"⨕",popf:"𝕡",Popf:"ℙ",pound:"£",prap:"⪷",Pr:"⪻",pr:"≺",prcue:"≼",precapprox:"⪷",prec:"≺",preccurlyeq:"≼",Precedes:"≺",PrecedesEqual:"⪯",PrecedesSlantEqual:"≼",PrecedesTilde:"≾",preceq:"⪯",precnapprox:"⪹",precneqq:"⪵",precnsim:"⋨",pre:"⪯",prE:"⪳",precsim:"≾",prime:"′",Prime:"″",primes:"ℙ",prnap:"⪹",prnE:"⪵",prnsim:"⋨",prod:"∏",Product:"∏",profalar:"⌮",profline:"⌒",profsurf:"⌓",prop:"∝",Proportional:"∝",Proportion:"∷",propto:"∝",prsim:"≾",prurel:"⊰",Pscr:"𝒫",pscr:"𝓅",Psi:"Ψ",psi:"ψ",puncsp:" ",Qfr:"𝔔",qfr:"𝔮",qint:"⨌",qopf:"𝕢",Qopf:"ℚ",qprime:"⁗",Qscr:"𝒬",qscr:"𝓆",quaternions:"ℍ",quatint:"⨖",quest:"?",questeq:"≟",quot:'"',QUOT:'"',rAarr:"⇛",race:"∽̱",Racute:"Ŕ",racute:"ŕ",radic:"√",raemptyv:"⦳",rang:"⟩",Rang:"⟫",rangd:"⦒",range:"⦥",rangle:"⟩",raquo:"»",rarrap:"⥵",rarrb:"⇥",rarrbfs:"⤠",rarrc:"⤳",rarr:"→",Rarr:"↠",rArr:"⇒",rarrfs:"⤞",rarrhk:"↪",rarrlp:"↬",rarrpl:"⥅",rarrsim:"⥴",Rarrtl:"⤖",rarrtl:"↣",rarrw:"↝",ratail:"⤚",rAtail:"⤜",ratio:"∶",rationals:"ℚ",rbarr:"⤍",rBarr:"⤏",RBarr:"⤐",rbbrk:"❳",rbrace:"}",rbrack:"]",rbrke:"⦌",rbrksld:"⦎",rbrkslu:"⦐",Rcaron:"Ř",rcaron:"ř",Rcedil:"Ŗ",rcedil:"ŗ",rceil:"⌉",rcub:"}",Rcy:"Р",rcy:"р",rdca:"⤷",rdldhar:"⥩",rdquo:"”",rdquor:"”",rdsh:"↳",real:"ℜ",realine:"ℛ",realpart:"ℜ",reals:"ℝ",Re:"ℜ",rect:"▭",reg:"®",REG:"®",ReverseElement:"∋",ReverseEquilibrium:"⇋",ReverseUpEquilibrium:"⥯",rfisht:"⥽",rfloor:"⌋",rfr:"𝔯",Rfr:"ℜ",rHar:"⥤",rhard:"⇁",rharu:"⇀",rharul:"⥬",Rho:"Ρ",rho:"ρ",rhov:"ϱ",RightAngleBracket:"⟩",RightArrowBar:"⇥",rightarrow:"→",RightArrow:"→",Rightarrow:"⇒",RightArrowLeftArrow:"⇄",rightarrowtail:"↣",RightCeiling:"⌉",RightDoubleBracket:"⟧",RightDownTeeVector:"⥝",RightDownVectorBar:"⥕",RightDownVector:"⇂",RightFloor:"⌋",rightharpoondown:"⇁",rightharpoonup:"⇀",rightleftarrows:"⇄",rightleftharpoons:"⇌",rightrightarrows:"⇉",rightsquigarrow:"↝",RightTeeArrow:"↦",RightTee:"⊢",RightTeeVector:"⥛",rightthreetimes:"⋌",RightTriangleBar:"⧐",RightTriangle:"⊳",RightTriangleEqual:"⊵",RightUpDownVector:"⥏",RightUpTeeVector:"⥜",RightUpVectorBar:"⥔",RightUpVector:"↾",RightVectorBar:"⥓",RightVector:"⇀",ring:"˚",risingdotseq:"≓",rlarr:"⇄",rlhar:"⇌",rlm:"‏",rmoustache:"⎱",rmoust:"⎱",rnmid:"⫮",roang:"⟭",roarr:"⇾",robrk:"⟧",ropar:"⦆",ropf:"𝕣",Ropf:"ℝ",roplus:"⨮",rotimes:"⨵",RoundImplies:"⥰",rpar:")",rpargt:"⦔",rppolint:"⨒",rrarr:"⇉",Rrightarrow:"⇛",rsaquo:"›",rscr:"𝓇",Rscr:"ℛ",rsh:"↱",Rsh:"↱",rsqb:"]",rsquo:"’",rsquor:"’",rthree:"⋌",rtimes:"⋊",rtri:"▹",rtrie:"⊵",rtrif:"▸",rtriltri:"⧎",RuleDelayed:"⧴",ruluhar:"⥨",rx:"℞",Sacute:"Ś",sacute:"ś",sbquo:"‚",scap:"⪸",Scaron:"Š",scaron:"š",Sc:"⪼",sc:"≻",sccue:"≽",sce:"⪰",scE:"⪴",Scedil:"Ş",scedil:"ş",Scirc:"Ŝ",scirc:"ŝ",scnap:"⪺",scnE:"⪶",scnsim:"⋩",scpolint:"⨓",scsim:"≿",Scy:"С",scy:"с",sdotb:"⊡",sdot:"⋅",sdote:"⩦",searhk:"⤥",searr:"↘",seArr:"⇘",searrow:"↘",sect:"§",semi:";",seswar:"⤩",setminus:"∖",setmn:"∖",sext:"✶",Sfr:"𝔖",sfr:"𝔰",sfrown:"⌢",sharp:"♯",SHCHcy:"Щ",shchcy:"щ",SHcy:"Ш",shcy:"ш",ShortDownArrow:"↓",ShortLeftArrow:"←",shortmid:"∣",shortparallel:"∥",ShortRightArrow:"→",ShortUpArrow:"↑",shy:"­",Sigma:"Σ",sigma:"σ",sigmaf:"ς",sigmav:"ς",sim:"∼",simdot:"⩪",sime:"≃",simeq:"≃",simg:"⪞",simgE:"⪠",siml:"⪝",simlE:"⪟",simne:"≆",simplus:"⨤",simrarr:"⥲",slarr:"←",SmallCircle:"∘",smallsetminus:"∖",smashp:"⨳",smeparsl:"⧤",smid:"∣",smile:"⌣",smt:"⪪",smte:"⪬",smtes:"⪬︀",SOFTcy:"Ь",softcy:"ь",solbar:"⌿",solb:"⧄",sol:"/",Sopf:"𝕊",sopf:"𝕤",spades:"♠",spadesuit:"♠",spar:"∥",sqcap:"⊓",sqcaps:"⊓︀",sqcup:"⊔",sqcups:"⊔︀",Sqrt:"√",sqsub:"⊏",sqsube:"⊑",sqsubset:"⊏",sqsubseteq:"⊑",sqsup:"⊐",sqsupe:"⊒",sqsupset:"⊐",sqsupseteq:"⊒",square:"□",Square:"□",SquareIntersection:"⊓",SquareSubset:"⊏",SquareSubsetEqual:"⊑",SquareSuperset:"⊐",SquareSupersetEqual:"⊒",SquareUnion:"⊔",squarf:"▪",squ:"□",squf:"▪",srarr:"→",Sscr:"𝒮",sscr:"𝓈",ssetmn:"∖",ssmile:"⌣",sstarf:"⋆",Star:"⋆",star:"☆",starf:"★",straightepsilon:"ϵ",straightphi:"ϕ",strns:"¯",sub:"⊂",Sub:"⋐",subdot:"⪽",subE:"⫅",sube:"⊆",subedot:"⫃",submult:"⫁",subnE:"⫋",subne:"⊊",subplus:"⪿",subrarr:"⥹",subset:"⊂",Subset:"⋐",subseteq:"⊆",subseteqq:"⫅",SubsetEqual:"⊆",subsetneq:"⊊",subsetneqq:"⫋",subsim:"⫇",subsub:"⫕",subsup:"⫓",succapprox:"⪸",succ:"≻",succcurlyeq:"≽",Succeeds:"≻",SucceedsEqual:"⪰",SucceedsSlantEqual:"≽",SucceedsTilde:"≿",succeq:"⪰",succnapprox:"⪺",succneqq:"⪶",succnsim:"⋩",succsim:"≿",SuchThat:"∋",sum:"∑",Sum:"∑",sung:"♪",sup1:"¹",sup2:"²",sup3:"³",sup:"⊃",Sup:"⋑",supdot:"⪾",supdsub:"⫘",supE:"⫆",supe:"⊇",supedot:"⫄",Superset:"⊃",SupersetEqual:"⊇",suphsol:"⟉",suphsub:"⫗",suplarr:"⥻",supmult:"⫂",supnE:"⫌",supne:"⊋",supplus:"⫀",supset:"⊃",Supset:"⋑",supseteq:"⊇",supseteqq:"⫆",supsetneq:"⊋",supsetneqq:"⫌",supsim:"⫈",supsub:"⫔",supsup:"⫖",swarhk:"⤦",swarr:"↙",swArr:"⇙",swarrow:"↙",swnwar:"⤪",szlig:"ß",Tab:"\t",target:"⌖",Tau:"Τ",tau:"τ",tbrk:"⎴",Tcaron:"Ť",tcaron:"ť",Tcedil:"Ţ",tcedil:"ţ",Tcy:"Т",tcy:"т",tdot:"⃛",telrec:"⌕",Tfr:"𝔗",tfr:"𝔱",there4:"∴",therefore:"∴",Therefore:"∴",Theta:"Θ",theta:"θ",thetasym:"ϑ",thetav:"ϑ",thickapprox:"≈",thicksim:"∼",ThickSpace:"  ",ThinSpace:" ",thinsp:" ",thkap:"≈",thksim:"∼",THORN:"Þ",thorn:"þ",tilde:"˜",Tilde:"∼",TildeEqual:"≃",TildeFullEqual:"≅",TildeTilde:"≈",timesbar:"⨱",timesb:"⊠",times:"×",timesd:"⨰",tint:"∭",toea:"⤨",topbot:"⌶",topcir:"⫱",top:"⊤",Topf:"𝕋",topf:"𝕥",topfork:"⫚",tosa:"⤩",tprime:"‴",trade:"™",TRADE:"™",triangle:"▵",triangledown:"▿",triangleleft:"◃",trianglelefteq:"⊴",triangleq:"≜",triangleright:"▹",trianglerighteq:"⊵",tridot:"◬",trie:"≜",triminus:"⨺",TripleDot:"⃛",triplus:"⨹",trisb:"⧍",tritime:"⨻",trpezium:"⏢",Tscr:"𝒯",tscr:"𝓉",TScy:"Ц",tscy:"ц",TSHcy:"Ћ",tshcy:"ћ",Tstrok:"Ŧ",tstrok:"ŧ",twixt:"≬",twoheadleftarrow:"↞",twoheadrightarrow:"↠",Uacute:"Ú",uacute:"ú",uarr:"↑",Uarr:"↟",uArr:"⇑",Uarrocir:"⥉",Ubrcy:"Ў",ubrcy:"ў",Ubreve:"Ŭ",ubreve:"ŭ",Ucirc:"Û",ucirc:"û",Ucy:"У",ucy:"у",udarr:"⇅",Udblac:"Ű",udblac:"ű",udhar:"⥮",ufisht:"⥾",Ufr:"𝔘",ufr:"𝔲",Ugrave:"Ù",ugrave:"ù",uHar:"⥣",uharl:"↿",uharr:"↾",uhblk:"▀",ulcorn:"⌜",ulcorner:"⌜",ulcrop:"⌏",ultri:"◸",Umacr:"Ū",umacr:"ū",uml:"¨",UnderBar:"_",UnderBrace:"⏟",UnderBracket:"⎵",UnderParenthesis:"⏝",Union:"⋃",UnionPlus:"⊎",Uogon:"Ų",uogon:"ų",Uopf:"𝕌",uopf:"𝕦",UpArrowBar:"⤒",uparrow:"↑",UpArrow:"↑",Uparrow:"⇑",UpArrowDownArrow:"⇅",updownarrow:"↕",UpDownArrow:"↕",Updownarrow:"⇕",UpEquilibrium:"⥮",upharpoonleft:"↿",upharpoonright:"↾",uplus:"⊎",UpperLeftArrow:"↖",UpperRightArrow:"↗",upsi:"υ",Upsi:"ϒ",upsih:"ϒ",Upsilon:"Υ",upsilon:"υ",UpTeeArrow:"↥",UpTee:"⊥",upuparrows:"⇈",urcorn:"⌝",urcorner:"⌝",urcrop:"⌎",Uring:"Ů",uring:"ů",urtri:"◹",Uscr:"𝒰",uscr:"𝓊",utdot:"⋰",Utilde:"Ũ",utilde:"ũ",utri:"▵",utrif:"▴",uuarr:"⇈",Uuml:"Ü",uuml:"ü",uwangle:"⦧",vangrt:"⦜",varepsilon:"ϵ",varkappa:"ϰ",varnothing:"∅",varphi:"ϕ",varpi:"ϖ",varpropto:"∝",varr:"↕",vArr:"⇕",varrho:"ϱ",varsigma:"ς",varsubsetneq:"⊊︀",varsubsetneqq:"⫋︀",varsupsetneq:"⊋︀",varsupsetneqq:"⫌︀",vartheta:"ϑ",vartriangleleft:"⊲",vartriangleright:"⊳",vBar:"⫨",Vbar:"⫫",vBarv:"⫩",Vcy:"В",vcy:"в",vdash:"⊢",vDash:"⊨",Vdash:"⊩",VDash:"⊫",Vdashl:"⫦",veebar:"⊻",vee:"∨",Vee:"⋁",veeeq:"≚",vellip:"⋮",verbar:"|",Verbar:"‖",vert:"|",Vert:"‖",VerticalBar:"∣",VerticalLine:"|",VerticalSeparator:"❘",VerticalTilde:"≀",VeryThinSpace:" ",Vfr:"𝔙",vfr:"𝔳",vltri:"⊲",vnsub:"⊂⃒",vnsup:"⊃⃒",Vopf:"𝕍",vopf:"𝕧",vprop:"∝",vrtri:"⊳",Vscr:"𝒱",vscr:"𝓋",vsubnE:"⫋︀",vsubne:"⊊︀",vsupnE:"⫌︀",vsupne:"⊋︀",Vvdash:"⊪",vzigzag:"⦚",Wcirc:"Ŵ",wcirc:"ŵ",wedbar:"⩟",wedge:"∧",Wedge:"⋀",wedgeq:"≙",weierp:"℘",Wfr:"𝔚",wfr:"𝔴",Wopf:"𝕎",wopf:"𝕨",wp:"℘",wr:"≀",wreath:"≀",Wscr:"𝒲",wscr:"𝓌",xcap:"⋂",xcirc:"◯",xcup:"⋃",xdtri:"▽",Xfr:"𝔛",xfr:"𝔵",xharr:"⟷",xhArr:"⟺",Xi:"Ξ",xi:"ξ",xlarr:"⟵",xlArr:"⟸",xmap:"⟼",xnis:"⋻",xodot:"⨀",Xopf:"𝕏",xopf:"𝕩",xoplus:"⨁",xotime:"⨂",xrarr:"⟶",xrArr:"⟹",Xscr:"𝒳",xscr:"𝓍",xsqcup:"⨆",xuplus:"⨄",xutri:"△",xvee:"⋁",xwedge:"⋀",Yacute:"Ý",yacute:"ý",YAcy:"Я",yacy:"я",Ycirc:"Ŷ",ycirc:"ŷ",Ycy:"Ы",ycy:"ы",yen:"¥",Yfr:"𝔜",yfr:"𝔶",YIcy:"Ї",yicy:"ї",Yopf:"𝕐",yopf:"𝕪",Yscr:"𝒴",yscr:"𝓎",YUcy:"Ю",yucy:"ю",yuml:"ÿ",Yuml:"Ÿ",Zacute:"Ź",zacute:"ź",Zcaron:"Ž",zcaron:"ž",Zcy:"З",zcy:"з",Zdot:"Ż",zdot:"ż",zeetrf:"ℨ",ZeroWidthSpace:"​",Zeta:"Ζ",zeta:"ζ",zfr:"𝔷",Zfr:"ℨ",ZHcy:"Ж",zhcy:"ж",zigrarr:"⇝",zopf:"𝕫",Zopf:"ℤ",Zscr:"𝒵",zscr:"𝓏",zwj:"‍",zwnj:"‌"}),Nt=Object.freeze({__proto__:null,Aacute:"Á",aacute:"á",Abreve:"Ă",abreve:"ă",ac:"∾",acd:"∿",acE:"∾̳",Acirc:"Â",acirc:"â",acute:"´",Acy:"А",acy:"а",AElig:"Æ",aelig:"æ",af:"⁡",Afr:"𝔄",afr:"𝔞",Agrave:"À",agrave:"à",alefsym:"ℵ",aleph:"ℵ",Alpha:"Α",alpha:"α",Amacr:"Ā",amacr:"ā",amalg:"⨿",amp:"&",AMP:"&",andand:"⩕",And:"⩓",and:"∧",andd:"⩜",andslope:"⩘",andv:"⩚",ang:"∠",ange:"⦤",angle:"∠",angmsdaa:"⦨",angmsdab:"⦩",angmsdac:"⦪",angmsdad:"⦫",angmsdae:"⦬",angmsdaf:"⦭",angmsdag:"⦮",angmsdah:"⦯",angmsd:"∡",angrt:"∟",angrtvb:"⊾",angrtvbd:"⦝",angsph:"∢",angst:"Å",angzarr:"⍼",Aogon:"Ą",aogon:"ą",Aopf:"𝔸",aopf:"𝕒",apacir:"⩯",ap:"≈",apE:"⩰",ape:"≊",apid:"≋",apos:"'",ApplyFunction:"⁡",approx:"≈",approxeq:"≊",Aring:"Å",aring:"å",Ascr:"𝒜",ascr:"𝒶",Assign:"≔",ast:"*",asymp:"≈",asympeq:"≍",Atilde:"Ã",atilde:"ã",Auml:"Ä",auml:"ä",awconint:"∳",awint:"⨑",backcong:"≌",backepsilon:"϶",backprime:"‵",backsim:"∽",backsimeq:"⋍",Backslash:"∖",Barv:"⫧",barvee:"⊽",barwed:"⌅",Barwed:"⌆",barwedge:"⌅",bbrk:"⎵",bbrktbrk:"⎶",bcong:"≌",Bcy:"Б",bcy:"б",bdquo:"„",becaus:"∵",because:"∵",Because:"∵",bemptyv:"⦰",bepsi:"϶",bernou:"ℬ",Bernoullis:"ℬ",Beta:"Β",beta:"β",beth:"ℶ",between:"≬",Bfr:"𝔅",bfr:"𝔟",bigcap:"⋂",bigcirc:"◯",bigcup:"⋃",bigodot:"⨀",bigoplus:"⨁",bigotimes:"⨂",bigsqcup:"⨆",bigstar:"★",bigtriangledown:"▽",bigtriangleup:"△",biguplus:"⨄",bigvee:"⋁",bigwedge:"⋀",bkarow:"⤍",blacklozenge:"⧫",blacksquare:"▪",blacktriangle:"▴",blacktriangledown:"▾",blacktriangleleft:"◂",blacktriangleright:"▸",blank:"␣",blk12:"▒",blk14:"░",blk34:"▓",block:"█",bne:"=⃥",bnequiv:"≡⃥",bNot:"⫭",bnot:"⌐",Bopf:"𝔹",bopf:"𝕓",bot:"⊥",bottom:"⊥",bowtie:"⋈",boxbox:"⧉",boxdl:"┐",boxdL:"╕",boxDl:"╖",boxDL:"╗",boxdr:"┌",boxdR:"╒",boxDr:"╓",boxDR:"╔",boxh:"─",boxH:"═",boxhd:"┬",boxHd:"╤",boxhD:"╥",boxHD:"╦",boxhu:"┴",boxHu:"╧",boxhU:"╨",boxHU:"╩",boxminus:"⊟",boxplus:"⊞",boxtimes:"⊠",boxul:"┘",boxuL:"╛",boxUl:"╜",boxUL:"╝",boxur:"└",boxuR:"╘",boxUr:"╙",boxUR:"╚",boxv:"│",boxV:"║",boxvh:"┼",boxvH:"╪",boxVh:"╫",boxVH:"╬",boxvl:"┤",boxvL:"╡",boxVl:"╢",boxVL:"╣",boxvr:"├",boxvR:"╞",boxVr:"╟",boxVR:"╠",bprime:"‵",breve:"˘",Breve:"˘",brvbar:"¦",bscr:"𝒷",Bscr:"ℬ",bsemi:"⁏",bsim:"∽",bsime:"⋍",bsolb:"⧅",bsol:"\\",bsolhsub:"⟈",bull:"•",bullet:"•",bump:"≎",bumpE:"⪮",bumpe:"≏",Bumpeq:"≎",bumpeq:"≏",Cacute:"Ć",cacute:"ć",capand:"⩄",capbrcup:"⩉",capcap:"⩋",cap:"∩",Cap:"⋒",capcup:"⩇",capdot:"⩀",CapitalDifferentialD:"ⅅ",caps:"∩︀",caret:"⁁",caron:"ˇ",Cayleys:"ℭ",ccaps:"⩍",Ccaron:"Č",ccaron:"č",Ccedil:"Ç",ccedil:"ç",Ccirc:"Ĉ",ccirc:"ĉ",Cconint:"∰",ccups:"⩌",ccupssm:"⩐",Cdot:"Ċ",cdot:"ċ",cedil:"¸",Cedilla:"¸",cemptyv:"⦲",cent:"¢",centerdot:"·",CenterDot:"·",cfr:"𝔠",Cfr:"ℭ",CHcy:"Ч",chcy:"ч",check:"✓",checkmark:"✓",Chi:"Χ",chi:"χ",circ:"ˆ",circeq:"≗",circlearrowleft:"↺",circlearrowright:"↻",circledast:"⊛",circledcirc:"⊚",circleddash:"⊝",CircleDot:"⊙",circledR:"®",circledS:"Ⓢ",CircleMinus:"⊖",CirclePlus:"⊕",CircleTimes:"⊗",cir:"○",cirE:"⧃",cire:"≗",cirfnint:"⨐",cirmid:"⫯",cirscir:"⧂",ClockwiseContourIntegral:"∲",CloseCurlyDoubleQuote:"”",CloseCurlyQuote:"’",clubs:"♣",clubsuit:"♣",colon:":",Colon:"∷",Colone:"⩴",colone:"≔",coloneq:"≔",comma:",",commat:"@",comp:"∁",compfn:"∘",complement:"∁",complexes:"ℂ",cong:"≅",congdot:"⩭",Congruent:"≡",conint:"∮",Conint:"∯",ContourIntegral:"∮",copf:"𝕔",Copf:"ℂ",coprod:"∐",Coproduct:"∐",copy:"©",COPY:"©",copysr:"℗",CounterClockwiseContourIntegral:"∳",crarr:"↵",cross:"✗",Cross:"⨯",Cscr:"𝒞",cscr:"𝒸",csub:"⫏",csube:"⫑",csup:"⫐",csupe:"⫒",ctdot:"⋯",cudarrl:"⤸",cudarrr:"⤵",cuepr:"⋞",cuesc:"⋟",cularr:"↶",cularrp:"⤽",cupbrcap:"⩈",cupcap:"⩆",CupCap:"≍",cup:"∪",Cup:"⋓",cupcup:"⩊",cupdot:"⊍",cupor:"⩅",cups:"∪︀",curarr:"↷",curarrm:"⤼",curlyeqprec:"⋞",curlyeqsucc:"⋟",curlyvee:"⋎",curlywedge:"⋏",curren:"¤",curvearrowleft:"↶",curvearrowright:"↷",cuvee:"⋎",cuwed:"⋏",cwconint:"∲",cwint:"∱",cylcty:"⌭",dagger:"†",Dagger:"‡",daleth:"ℸ",darr:"↓",Darr:"↡",dArr:"⇓",dash:"‐",Dashv:"⫤",dashv:"⊣",dbkarow:"⤏",dblac:"˝",Dcaron:"Ď",dcaron:"ď",Dcy:"Д",dcy:"д",ddagger:"‡",ddarr:"⇊",DD:"ⅅ",dd:"ⅆ",DDotrahd:"⤑",ddotseq:"⩷",deg:"°",Del:"∇",Delta:"Δ",delta:"δ",demptyv:"⦱",dfisht:"⥿",Dfr:"𝔇",dfr:"𝔡",dHar:"⥥",dharl:"⇃",dharr:"⇂",DiacriticalAcute:"´",DiacriticalDot:"˙",DiacriticalDoubleAcute:"˝",DiacriticalGrave:"`",DiacriticalTilde:"˜",diam:"⋄",diamond:"⋄",Diamond:"⋄",diamondsuit:"♦",diams:"♦",die:"¨",DifferentialD:"ⅆ",digamma:"ϝ",disin:"⋲",div:"÷",divide:"÷",divideontimes:"⋇",divonx:"⋇",DJcy:"Ђ",djcy:"ђ",dlcorn:"⌞",dlcrop:"⌍",dollar:"$",Dopf:"𝔻",dopf:"𝕕",Dot:"¨",dot:"˙",DotDot:"⃜",doteq:"≐",doteqdot:"≑",DotEqual:"≐",dotminus:"∸",dotplus:"∔",dotsquare:"⊡",doublebarwedge:"⌆",DoubleContourIntegral:"∯",DoubleDot:"¨",DoubleDownArrow:"⇓",DoubleLeftArrow:"⇐",DoubleLeftRightArrow:"⇔",DoubleLeftTee:"⫤",DoubleLongLeftArrow:"⟸",DoubleLongLeftRightArrow:"⟺",DoubleLongRightArrow:"⟹",DoubleRightArrow:"⇒",DoubleRightTee:"⊨",DoubleUpArrow:"⇑",DoubleUpDownArrow:"⇕",DoubleVerticalBar:"∥",DownArrowBar:"⤓",downarrow:"↓",DownArrow:"↓",Downarrow:"⇓",DownArrowUpArrow:"⇵",DownBreve:"̑",downdownarrows:"⇊",downharpoonleft:"⇃",downharpoonright:"⇂",DownLeftRightVector:"⥐",DownLeftTeeVector:"⥞",DownLeftVectorBar:"⥖",DownLeftVector:"↽",DownRightTeeVector:"⥟",DownRightVectorBar:"⥗",DownRightVector:"⇁",DownTeeArrow:"↧",DownTee:"⊤",drbkarow:"⤐",drcorn:"⌟",drcrop:"⌌",Dscr:"𝒟",dscr:"𝒹",DScy:"Ѕ",dscy:"ѕ",dsol:"⧶",Dstrok:"Đ",dstrok:"đ",dtdot:"⋱",dtri:"▿",dtrif:"▾",duarr:"⇵",duhar:"⥯",dwangle:"⦦",DZcy:"Џ",dzcy:"џ",dzigrarr:"⟿",Eacute:"É",eacute:"é",easter:"⩮",Ecaron:"Ě",ecaron:"ě",Ecirc:"Ê",ecirc:"ê",ecir:"≖",ecolon:"≕",Ecy:"Э",ecy:"э",eDDot:"⩷",Edot:"Ė",edot:"ė",eDot:"≑",ee:"ⅇ",efDot:"≒",Efr:"𝔈",efr:"𝔢",eg:"⪚",Egrave:"È",egrave:"è",egs:"⪖",egsdot:"⪘",el:"⪙",Element:"∈",elinters:"⏧",ell:"ℓ",els:"⪕",elsdot:"⪗",Emacr:"Ē",emacr:"ē",empty:"∅",emptyset:"∅",EmptySmallSquare:"◻",emptyv:"∅",EmptyVerySmallSquare:"▫",emsp13:" ",emsp14:" ",emsp:" ",ENG:"Ŋ",eng:"ŋ",ensp:" ",Eogon:"Ę",eogon:"ę",Eopf:"𝔼",eopf:"𝕖",epar:"⋕",eparsl:"⧣",eplus:"⩱",epsi:"ε",Epsilon:"Ε",epsilon:"ε",epsiv:"ϵ",eqcirc:"≖",eqcolon:"≕",eqsim:"≂",eqslantgtr:"⪖",eqslantless:"⪕",Equal:"⩵",equals:"=",EqualTilde:"≂",equest:"≟",Equilibrium:"⇌",equiv:"≡",equivDD:"⩸",eqvparsl:"⧥",erarr:"⥱",erDot:"≓",escr:"ℯ",Escr:"ℰ",esdot:"≐",Esim:"⩳",esim:"≂",Eta:"Η",eta:"η",ETH:"Ð",eth:"ð",Euml:"Ë",euml:"ë",euro:"€",excl:"!",exist:"∃",Exists:"∃",expectation:"ℰ",exponentiale:"ⅇ",ExponentialE:"ⅇ",fallingdotseq:"≒",Fcy:"Ф",fcy:"ф",female:"♀",ffilig:"ﬃ",fflig:"ﬀ",ffllig:"ﬄ",Ffr:"𝔉",ffr:"𝔣",filig:"ﬁ",FilledSmallSquare:"◼",FilledVerySmallSquare:"▪",fjlig:"fj",flat:"♭",fllig:"ﬂ",fltns:"▱",fnof:"ƒ",Fopf:"𝔽",fopf:"𝕗",forall:"∀",ForAll:"∀",fork:"⋔",forkv:"⫙",Fouriertrf:"ℱ",fpartint:"⨍",frac12:"½",frac13:"⅓",frac14:"¼",frac15:"⅕",frac16:"⅙",frac18:"⅛",frac23:"⅔",frac25:"⅖",frac34:"¾",frac35:"⅗",frac38:"⅜",frac45:"⅘",frac56:"⅚",frac58:"⅝",frac78:"⅞",frasl:"⁄",frown:"⌢",fscr:"𝒻",Fscr:"ℱ",gacute:"ǵ",Gamma:"Γ",gamma:"γ",Gammad:"Ϝ",gammad:"ϝ",gap:"⪆",Gbreve:"Ğ",gbreve:"ğ",Gcedil:"Ģ",Gcirc:"Ĝ",gcirc:"ĝ",Gcy:"Г",gcy:"г",Gdot:"Ġ",gdot:"ġ",ge:"≥",gE:"≧",gEl:"⪌",gel:"⋛",geq:"≥",geqq:"≧",geqslant:"⩾",gescc:"⪩",ges:"⩾",gesdot:"⪀",gesdoto:"⪂",gesdotol:"⪄",gesl:"⋛︀",gesles:"⪔",Gfr:"𝔊",gfr:"𝔤",gg:"≫",Gg:"⋙",ggg:"⋙",gimel:"ℷ",GJcy:"Ѓ",gjcy:"ѓ",gla:"⪥",gl:"≷",glE:"⪒",glj:"⪤",gnap:"⪊",gnapprox:"⪊",gne:"⪈",gnE:"≩",gneq:"⪈",gneqq:"≩",gnsim:"⋧",Gopf:"𝔾",gopf:"𝕘",grave:"`",GreaterEqual:"≥",GreaterEqualLess:"⋛",GreaterFullEqual:"≧",GreaterGreater:"⪢",GreaterLess:"≷",GreaterSlantEqual:"⩾",GreaterTilde:"≳",Gscr:"𝒢",gscr:"ℊ",gsim:"≳",gsime:"⪎",gsiml:"⪐",gtcc:"⪧",gtcir:"⩺",gt:">",GT:">",Gt:"≫",gtdot:"⋗",gtlPar:"⦕",gtquest:"⩼",gtrapprox:"⪆",gtrarr:"⥸",gtrdot:"⋗",gtreqless:"⋛",gtreqqless:"⪌",gtrless:"≷",gtrsim:"≳",gvertneqq:"≩︀",gvnE:"≩︀",Hacek:"ˇ",hairsp:" ",half:"½",hamilt:"ℋ",HARDcy:"Ъ",hardcy:"ъ",harrcir:"⥈",harr:"↔",hArr:"⇔",harrw:"↭",Hat:"^",hbar:"ℏ",Hcirc:"Ĥ",hcirc:"ĥ",hearts:"♥",heartsuit:"♥",hellip:"…",hercon:"⊹",hfr:"𝔥",Hfr:"ℌ",HilbertSpace:"ℋ",hksearow:"⤥",hkswarow:"⤦",hoarr:"⇿",homtht:"∻",hookleftarrow:"↩",hookrightarrow:"↪",hopf:"𝕙",Hopf:"ℍ",horbar:"―",HorizontalLine:"─",hscr:"𝒽",Hscr:"ℋ",hslash:"ℏ",Hstrok:"Ħ",hstrok:"ħ",HumpDownHump:"≎",HumpEqual:"≏",hybull:"⁃",hyphen:"‐",Iacute:"Í",iacute:"í",ic:"⁣",Icirc:"Î",icirc:"î",Icy:"И",icy:"и",Idot:"İ",IEcy:"Е",iecy:"е",iexcl:"¡",iff:"⇔",ifr:"𝔦",Ifr:"ℑ",Igrave:"Ì",igrave:"ì",ii:"ⅈ",iiiint:"⨌",iiint:"∭",iinfin:"⧜",iiota:"℩",IJlig:"Ĳ",ijlig:"ĳ",Imacr:"Ī",imacr:"ī",image:"ℑ",ImaginaryI:"ⅈ",imagline:"ℐ",imagpart:"ℑ",imath:"ı",Im:"ℑ",imof:"⊷",imped:"Ƶ",Implies:"⇒",incare:"℅",infin:"∞",infintie:"⧝",inodot:"ı",intcal:"⊺",int:"∫",Int:"∬",integers:"ℤ",Integral:"∫",intercal:"⊺",Intersection:"⋂",intlarhk:"⨗",intprod:"⨼",InvisibleComma:"⁣",InvisibleTimes:"⁢",IOcy:"Ё",iocy:"ё",Iogon:"Į",iogon:"į",Iopf:"𝕀",iopf:"𝕚",Iota:"Ι",iota:"ι",iprod:"⨼",iquest:"¿",iscr:"𝒾",Iscr:"ℐ",isin:"∈",isindot:"⋵",isinE:"⋹",isins:"⋴",isinsv:"⋳",isinv:"∈",it:"⁢",Itilde:"Ĩ",itilde:"ĩ",Iukcy:"І",iukcy:"і",Iuml:"Ï",iuml:"ï",Jcirc:"Ĵ",jcirc:"ĵ",Jcy:"Й",jcy:"й",Jfr:"𝔍",jfr:"𝔧",jmath:"ȷ",Jopf:"𝕁",jopf:"𝕛",Jscr:"𝒥",jscr:"𝒿",Jsercy:"Ј",jsercy:"ј",Jukcy:"Є",jukcy:"є",Kappa:"Κ",kappa:"κ",kappav:"ϰ",Kcedil:"Ķ",kcedil:"ķ",Kcy:"К",kcy:"к",Kfr:"𝔎",kfr:"𝔨",kgreen:"ĸ",KHcy:"Х",khcy:"х",KJcy:"Ќ",kjcy:"ќ",Kopf:"𝕂",kopf:"𝕜",Kscr:"𝒦",kscr:"𝓀",lAarr:"⇚",Lacute:"Ĺ",lacute:"ĺ",laemptyv:"⦴",lagran:"ℒ",Lambda:"Λ",lambda:"λ",lang:"⟨",Lang:"⟪",langd:"⦑",langle:"⟨",lap:"⪅",Laplacetrf:"ℒ",laquo:"«",larrb:"⇤",larrbfs:"⤟",larr:"←",Larr:"↞",lArr:"⇐",larrfs:"⤝",larrhk:"↩",larrlp:"↫",larrpl:"⤹",larrsim:"⥳",larrtl:"↢",latail:"⤙",lAtail:"⤛",lat:"⪫",late:"⪭",lates:"⪭︀",lbarr:"⤌",lBarr:"⤎",lbbrk:"❲",lbrace:"{",lbrack:"[",lbrke:"⦋",lbrksld:"⦏",lbrkslu:"⦍",Lcaron:"Ľ",lcaron:"ľ",Lcedil:"Ļ",lcedil:"ļ",lceil:"⌈",lcub:"{",Lcy:"Л",lcy:"л",ldca:"⤶",ldquo:"“",ldquor:"„",ldrdhar:"⥧",ldrushar:"⥋",ldsh:"↲",le:"≤",lE:"≦",LeftAngleBracket:"⟨",LeftArrowBar:"⇤",leftarrow:"←",LeftArrow:"←",Leftarrow:"⇐",LeftArrowRightArrow:"⇆",leftarrowtail:"↢",LeftCeiling:"⌈",LeftDoubleBracket:"⟦",LeftDownTeeVector:"⥡",LeftDownVectorBar:"⥙",LeftDownVector:"⇃",LeftFloor:"⌊",leftharpoondown:"↽",leftharpoonup:"↼",leftleftarrows:"⇇",leftrightarrow:"↔",LeftRightArrow:"↔",Leftrightarrow:"⇔",leftrightarrows:"⇆",leftrightharpoons:"⇋",leftrightsquigarrow:"↭",LeftRightVector:"⥎",LeftTeeArrow:"↤",LeftTee:"⊣",LeftTeeVector:"⥚",leftthreetimes:"⋋",LeftTriangleBar:"⧏",LeftTriangle:"⊲",LeftTriangleEqual:"⊴",LeftUpDownVector:"⥑",LeftUpTeeVector:"⥠",LeftUpVectorBar:"⥘",LeftUpVector:"↿",LeftVectorBar:"⥒",LeftVector:"↼",lEg:"⪋",leg:"⋚",leq:"≤",leqq:"≦",leqslant:"⩽",lescc:"⪨",les:"⩽",lesdot:"⩿",lesdoto:"⪁",lesdotor:"⪃",lesg:"⋚︀",lesges:"⪓",lessapprox:"⪅",lessdot:"⋖",lesseqgtr:"⋚",lesseqqgtr:"⪋",LessEqualGreater:"⋚",LessFullEqual:"≦",LessGreater:"≶",lessgtr:"≶",LessLess:"⪡",lesssim:"≲",LessSlantEqual:"⩽",LessTilde:"≲",lfisht:"⥼",lfloor:"⌊",Lfr:"𝔏",lfr:"𝔩",lg:"≶",lgE:"⪑",lHar:"⥢",lhard:"↽",lharu:"↼",lharul:"⥪",lhblk:"▄",LJcy:"Љ",ljcy:"љ",llarr:"⇇",ll:"≪",Ll:"⋘",llcorner:"⌞",Lleftarrow:"⇚",llhard:"⥫",lltri:"◺",Lmidot:"Ŀ",lmidot:"ŀ",lmoustache:"⎰",lmoust:"⎰",lnap:"⪉",lnapprox:"⪉",lne:"⪇",lnE:"≨",lneq:"⪇",lneqq:"≨",lnsim:"⋦",loang:"⟬",loarr:"⇽",lobrk:"⟦",longleftarrow:"⟵",LongLeftArrow:"⟵",Longleftarrow:"⟸",longleftrightarrow:"⟷",LongLeftRightArrow:"⟷",Longleftrightarrow:"⟺",longmapsto:"⟼",longrightarrow:"⟶",LongRightArrow:"⟶",Longrightarrow:"⟹",looparrowleft:"↫",looparrowright:"↬",lopar:"⦅",Lopf:"𝕃",lopf:"𝕝",loplus:"⨭",lotimes:"⨴",lowast:"∗",lowbar:"_",LowerLeftArrow:"↙",LowerRightArrow:"↘",loz:"◊",lozenge:"◊",lozf:"⧫",lpar:"(",lparlt:"⦓",lrarr:"⇆",lrcorner:"⌟",lrhar:"⇋",lrhard:"⥭",lrm:"‎",lrtri:"⊿",lsaquo:"‹",lscr:"𝓁",Lscr:"ℒ",lsh:"↰",Lsh:"↰",lsim:"≲",lsime:"⪍",lsimg:"⪏",lsqb:"[",lsquo:"‘",lsquor:"‚",Lstrok:"Ł",lstrok:"ł",ltcc:"⪦",ltcir:"⩹",lt:"<",LT:"<",Lt:"≪",ltdot:"⋖",lthree:"⋋",ltimes:"⋉",ltlarr:"⥶",ltquest:"⩻",ltri:"◃",ltrie:"⊴",ltrif:"◂",ltrPar:"⦖",lurdshar:"⥊",luruhar:"⥦",lvertneqq:"≨︀",lvnE:"≨︀",macr:"¯",male:"♂",malt:"✠",maltese:"✠",map:"↦",mapsto:"↦",mapstodown:"↧",mapstoleft:"↤",mapstoup:"↥",marker:"▮",mcomma:"⨩",Mcy:"М",mcy:"м",mdash:"—",mDDot:"∺",measuredangle:"∡",MediumSpace:" ",Mellintrf:"ℳ",Mfr:"𝔐",mfr:"𝔪",mho:"℧",micro:"µ",midast:"*",midcir:"⫰",mid:"∣",middot:"·",minusb:"⊟",minus:"−",minusd:"∸",minusdu:"⨪",MinusPlus:"∓",mlcp:"⫛",mldr:"…",mnplus:"∓",models:"⊧",Mopf:"𝕄",mopf:"𝕞",mp:"∓",mscr:"𝓂",Mscr:"ℳ",mstpos:"∾",Mu:"Μ",mu:"μ",multimap:"⊸",mumap:"⊸",nabla:"∇",Nacute:"Ń",nacute:"ń",nang:"∠⃒",nap:"≉",napE:"⩰̸",napid:"≋̸",napos:"ŉ",napprox:"≉",natural:"♮",naturals:"ℕ",natur:"♮",nbsp:" ",nbump:"≎̸",nbumpe:"≏̸",ncap:"⩃",Ncaron:"Ň",ncaron:"ň",Ncedil:"Ņ",ncedil:"ņ",ncong:"≇",ncongdot:"⩭̸",ncup:"⩂",Ncy:"Н",ncy:"н",ndash:"–",nearhk:"⤤",nearr:"↗",neArr:"⇗",nearrow:"↗",ne:"≠",nedot:"≐̸",NegativeMediumSpace:"​",NegativeThickSpace:"​",NegativeThinSpace:"​",NegativeVeryThinSpace:"​",nequiv:"≢",nesear:"⤨",nesim:"≂̸",NestedGreaterGreater:"≫",NestedLessLess:"≪",NewLine:"\n",nexist:"∄",nexists:"∄",Nfr:"𝔑",nfr:"𝔫",ngE:"≧̸",nge:"≱",ngeq:"≱",ngeqq:"≧̸",ngeqslant:"⩾̸",nges:"⩾̸",nGg:"⋙̸",ngsim:"≵",nGt:"≫⃒",ngt:"≯",ngtr:"≯",nGtv:"≫̸",nharr:"↮",nhArr:"⇎",nhpar:"⫲",ni:"∋",nis:"⋼",nisd:"⋺",niv:"∋",NJcy:"Њ",njcy:"њ",nlarr:"↚",nlArr:"⇍",nldr:"‥",nlE:"≦̸",nle:"≰",nleftarrow:"↚",nLeftarrow:"⇍",nleftrightarrow:"↮",nLeftrightarrow:"⇎",nleq:"≰",nleqq:"≦̸",nleqslant:"⩽̸",nles:"⩽̸",nless:"≮",nLl:"⋘̸",nlsim:"≴",nLt:"≪⃒",nlt:"≮",nltri:"⋪",nltrie:"⋬",nLtv:"≪̸",nmid:"∤",NoBreak:"⁠",NonBreakingSpace:" ",nopf:"𝕟",Nopf:"ℕ",Not:"⫬",not:"¬",NotCongruent:"≢",NotCupCap:"≭",NotDoubleVerticalBar:"∦",NotElement:"∉",NotEqual:"≠",NotEqualTilde:"≂̸",NotExists:"∄",NotGreater:"≯",NotGreaterEqual:"≱",NotGreaterFullEqual:"≧̸",NotGreaterGreater:"≫̸",NotGreaterLess:"≹",NotGreaterSlantEqual:"⩾̸",NotGreaterTilde:"≵",NotHumpDownHump:"≎̸",NotHumpEqual:"≏̸",notin:"∉",notindot:"⋵̸",notinE:"⋹̸",notinva:"∉",notinvb:"⋷",notinvc:"⋶",NotLeftTriangleBar:"⧏̸",NotLeftTriangle:"⋪",NotLeftTriangleEqual:"⋬",NotLess:"≮",NotLessEqual:"≰",NotLessGreater:"≸",NotLessLess:"≪̸",NotLessSlantEqual:"⩽̸",NotLessTilde:"≴",NotNestedGreaterGreater:"⪢̸",NotNestedLessLess:"⪡̸",notni:"∌",notniva:"∌",notnivb:"⋾",notnivc:"⋽",NotPrecedes:"⊀",NotPrecedesEqual:"⪯̸",NotPrecedesSlantEqual:"⋠",NotReverseElement:"∌",NotRightTriangleBar:"⧐̸",NotRightTriangle:"⋫",NotRightTriangleEqual:"⋭",NotSquareSubset:"⊏̸",NotSquareSubsetEqual:"⋢",NotSquareSuperset:"⊐̸",NotSquareSupersetEqual:"⋣",NotSubset:"⊂⃒",NotSubsetEqual:"⊈",NotSucceeds:"⊁",NotSucceedsEqual:"⪰̸",NotSucceedsSlantEqual:"⋡",NotSucceedsTilde:"≿̸",NotSuperset:"⊃⃒",NotSupersetEqual:"⊉",NotTilde:"≁",NotTildeEqual:"≄",NotTildeFullEqual:"≇",NotTildeTilde:"≉",NotVerticalBar:"∤",nparallel:"∦",npar:"∦",nparsl:"⫽⃥",npart:"∂̸",npolint:"⨔",npr:"⊀",nprcue:"⋠",nprec:"⊀",npreceq:"⪯̸",npre:"⪯̸",nrarrc:"⤳̸",nrarr:"↛",nrArr:"⇏",nrarrw:"↝̸",nrightarrow:"↛",nRightarrow:"⇏",nrtri:"⋫",nrtrie:"⋭",nsc:"⊁",nsccue:"⋡",nsce:"⪰̸",Nscr:"𝒩",nscr:"𝓃",nshortmid:"∤",nshortparallel:"∦",nsim:"≁",nsime:"≄",nsimeq:"≄",nsmid:"∤",nspar:"∦",nsqsube:"⋢",nsqsupe:"⋣",nsub:"⊄",nsubE:"⫅̸",nsube:"⊈",nsubset:"⊂⃒",nsubseteq:"⊈",nsubseteqq:"⫅̸",nsucc:"⊁",nsucceq:"⪰̸",nsup:"⊅",nsupE:"⫆̸",nsupe:"⊉",nsupset:"⊃⃒",nsupseteq:"⊉",nsupseteqq:"⫆̸",ntgl:"≹",Ntilde:"Ñ",ntilde:"ñ",ntlg:"≸",ntriangleleft:"⋪",ntrianglelefteq:"⋬",ntriangleright:"⋫",ntrianglerighteq:"⋭",Nu:"Ν",nu:"ν",num:"#",numero:"№",numsp:" ",nvap:"≍⃒",nvdash:"⊬",nvDash:"⊭",nVdash:"⊮",nVDash:"⊯",nvge:"≥⃒",nvgt:">⃒",nvHarr:"⤄",nvinfin:"⧞",nvlArr:"⤂",nvle:"≤⃒",nvlt:"<⃒",nvltrie:"⊴⃒",nvrArr:"⤃",nvrtrie:"⊵⃒",nvsim:"∼⃒",nwarhk:"⤣",nwarr:"↖",nwArr:"⇖",nwarrow:"↖",nwnear:"⤧",Oacute:"Ó",oacute:"ó",oast:"⊛",Ocirc:"Ô",ocirc:"ô",ocir:"⊚",Ocy:"О",ocy:"о",odash:"⊝",Odblac:"Ő",odblac:"ő",odiv:"⨸",odot:"⊙",odsold:"⦼",OElig:"Œ",oelig:"œ",ofcir:"⦿",Ofr:"𝔒",ofr:"𝔬",ogon:"˛",Ograve:"Ò",ograve:"ò",ogt:"⧁",ohbar:"⦵",ohm:"Ω",oint:"∮",olarr:"↺",olcir:"⦾",olcross:"⦻",oline:"‾",olt:"⧀",Omacr:"Ō",omacr:"ō",Omega:"Ω",omega:"ω",Omicron:"Ο",omicron:"ο",omid:"⦶",ominus:"⊖",Oopf:"𝕆",oopf:"𝕠",opar:"⦷",OpenCurlyDoubleQuote:"“",OpenCurlyQuote:"‘",operp:"⦹",oplus:"⊕",orarr:"↻",Or:"⩔",or:"∨",ord:"⩝",order:"ℴ",orderof:"ℴ",ordf:"ª",ordm:"º",origof:"⊶",oror:"⩖",orslope:"⩗",orv:"⩛",oS:"Ⓢ",Oscr:"𝒪",oscr:"ℴ",Oslash:"Ø",oslash:"ø",osol:"⊘",Otilde:"Õ",otilde:"õ",otimesas:"⨶",Otimes:"⨷",otimes:"⊗",Ouml:"Ö",ouml:"ö",ovbar:"⌽",OverBar:"‾",OverBrace:"⏞",OverBracket:"⎴",OverParenthesis:"⏜",para:"¶",parallel:"∥",par:"∥",parsim:"⫳",parsl:"⫽",part:"∂",PartialD:"∂",Pcy:"П",pcy:"п",percnt:"%",period:".",permil:"‰",perp:"⊥",pertenk:"‱",Pfr:"𝔓",pfr:"𝔭",Phi:"Φ",phi:"φ",phiv:"ϕ",phmmat:"ℳ",phone:"☎",Pi:"Π",pi:"π",pitchfork:"⋔",piv:"ϖ",planck:"ℏ",planckh:"ℎ",plankv:"ℏ",plusacir:"⨣",plusb:"⊞",pluscir:"⨢",plus:"+",plusdo:"∔",plusdu:"⨥",pluse:"⩲",PlusMinus:"±",plusmn:"±",plussim:"⨦",plustwo:"⨧",pm:"±",Poincareplane:"ℌ",pointint:"⨕",popf:"𝕡",Popf:"ℙ",pound:"£",prap:"⪷",Pr:"⪻",pr:"≺",prcue:"≼",precapprox:"⪷",prec:"≺",preccurlyeq:"≼",Precedes:"≺",PrecedesEqual:"⪯",PrecedesSlantEqual:"≼",PrecedesTilde:"≾",preceq:"⪯",precnapprox:"⪹",precneqq:"⪵",precnsim:"⋨",pre:"⪯",prE:"⪳",precsim:"≾",prime:"′",Prime:"″",primes:"ℙ",prnap:"⪹",prnE:"⪵",prnsim:"⋨",prod:"∏",Product:"∏",profalar:"⌮",profline:"⌒",profsurf:"⌓",prop:"∝",Proportional:"∝",Proportion:"∷",propto:"∝",prsim:"≾",prurel:"⊰",Pscr:"𝒫",pscr:"𝓅",Psi:"Ψ",psi:"ψ",puncsp:" ",Qfr:"𝔔",qfr:"𝔮",qint:"⨌",qopf:"𝕢",Qopf:"ℚ",qprime:"⁗",Qscr:"𝒬",qscr:"𝓆",quaternions:"ℍ",quatint:"⨖",quest:"?",questeq:"≟",quot:'"',QUOT:'"',rAarr:"⇛",race:"∽̱",Racute:"Ŕ",racute:"ŕ",radic:"√",raemptyv:"⦳",rang:"⟩",Rang:"⟫",rangd:"⦒",range:"⦥",rangle:"⟩",raquo:"»",rarrap:"⥵",rarrb:"⇥",rarrbfs:"⤠",rarrc:"⤳",rarr:"→",Rarr:"↠",rArr:"⇒",rarrfs:"⤞",rarrhk:"↪",rarrlp:"↬",rarrpl:"⥅",rarrsim:"⥴",Rarrtl:"⤖",rarrtl:"↣",rarrw:"↝",ratail:"⤚",rAtail:"⤜",ratio:"∶",rationals:"ℚ",rbarr:"⤍",rBarr:"⤏",RBarr:"⤐",rbbrk:"❳",rbrace:"}",rbrack:"]",rbrke:"⦌",rbrksld:"⦎",rbrkslu:"⦐",Rcaron:"Ř",rcaron:"ř",Rcedil:"Ŗ",rcedil:"ŗ",rceil:"⌉",rcub:"}",Rcy:"Р",rcy:"р",rdca:"⤷",rdldhar:"⥩",rdquo:"”",rdquor:"”",rdsh:"↳",real:"ℜ",realine:"ℛ",realpart:"ℜ",reals:"ℝ",Re:"ℜ",rect:"▭",reg:"®",REG:"®",ReverseElement:"∋",ReverseEquilibrium:"⇋",ReverseUpEquilibrium:"⥯",rfisht:"⥽",rfloor:"⌋",rfr:"𝔯",Rfr:"ℜ",rHar:"⥤",rhard:"⇁",rharu:"⇀",rharul:"⥬",Rho:"Ρ",rho:"ρ",rhov:"ϱ",RightAngleBracket:"⟩",RightArrowBar:"⇥",rightarrow:"→",RightArrow:"→",Rightarrow:"⇒",RightArrowLeftArrow:"⇄",rightarrowtail:"↣",RightCeiling:"⌉",RightDoubleBracket:"⟧",RightDownTeeVector:"⥝",RightDownVectorBar:"⥕",RightDownVector:"⇂",RightFloor:"⌋",rightharpoondown:"⇁",rightharpoonup:"⇀",rightleftarrows:"⇄",rightleftharpoons:"⇌",rightrightarrows:"⇉",rightsquigarrow:"↝",RightTeeArrow:"↦",RightTee:"⊢",RightTeeVector:"⥛",rightthreetimes:"⋌",RightTriangleBar:"⧐",RightTriangle:"⊳",RightTriangleEqual:"⊵",RightUpDownVector:"⥏",RightUpTeeVector:"⥜",RightUpVectorBar:"⥔",RightUpVector:"↾",RightVectorBar:"⥓",RightVector:"⇀",ring:"˚",risingdotseq:"≓",rlarr:"⇄",rlhar:"⇌",rlm:"‏",rmoustache:"⎱",rmoust:"⎱",rnmid:"⫮",roang:"⟭",roarr:"⇾",robrk:"⟧",ropar:"⦆",ropf:"𝕣",Ropf:"ℝ",roplus:"⨮",rotimes:"⨵",RoundImplies:"⥰",rpar:")",rpargt:"⦔",rppolint:"⨒",rrarr:"⇉",Rrightarrow:"⇛",rsaquo:"›",rscr:"𝓇",Rscr:"ℛ",rsh:"↱",Rsh:"↱",rsqb:"]",rsquo:"’",rsquor:"’",rthree:"⋌",rtimes:"⋊",rtri:"▹",rtrie:"⊵",rtrif:"▸",rtriltri:"⧎",RuleDelayed:"⧴",ruluhar:"⥨",rx:"℞",Sacute:"Ś",sacute:"ś",sbquo:"‚",scap:"⪸",Scaron:"Š",scaron:"š",Sc:"⪼",sc:"≻",sccue:"≽",sce:"⪰",scE:"⪴",Scedil:"Ş",scedil:"ş",Scirc:"Ŝ",scirc:"ŝ",scnap:"⪺",scnE:"⪶",scnsim:"⋩",scpolint:"⨓",scsim:"≿",Scy:"С",scy:"с",sdotb:"⊡",sdot:"⋅",sdote:"⩦",searhk:"⤥",searr:"↘",seArr:"⇘",searrow:"↘",sect:"§",semi:";",seswar:"⤩",setminus:"∖",setmn:"∖",sext:"✶",Sfr:"𝔖",sfr:"𝔰",sfrown:"⌢",sharp:"♯",SHCHcy:"Щ",shchcy:"щ",SHcy:"Ш",shcy:"ш",ShortDownArrow:"↓",ShortLeftArrow:"←",shortmid:"∣",shortparallel:"∥",ShortRightArrow:"→",ShortUpArrow:"↑",shy:"­",Sigma:"Σ",sigma:"σ",sigmaf:"ς",sigmav:"ς",sim:"∼",simdot:"⩪",sime:"≃",simeq:"≃",simg:"⪞",simgE:"⪠",siml:"⪝",simlE:"⪟",simne:"≆",simplus:"⨤",simrarr:"⥲",slarr:"←",SmallCircle:"∘",smallsetminus:"∖",smashp:"⨳",smeparsl:"⧤",smid:"∣",smile:"⌣",smt:"⪪",smte:"⪬",smtes:"⪬︀",SOFTcy:"Ь",softcy:"ь",solbar:"⌿",solb:"⧄",sol:"/",Sopf:"𝕊",sopf:"𝕤",spades:"♠",spadesuit:"♠",spar:"∥",sqcap:"⊓",sqcaps:"⊓︀",sqcup:"⊔",sqcups:"⊔︀",Sqrt:"√",sqsub:"⊏",sqsube:"⊑",sqsubset:"⊏",sqsubseteq:"⊑",sqsup:"⊐",sqsupe:"⊒",sqsupset:"⊐",sqsupseteq:"⊒",square:"□",Square:"□",SquareIntersection:"⊓",SquareSubset:"⊏",SquareSubsetEqual:"⊑",SquareSuperset:"⊐",SquareSupersetEqual:"⊒",SquareUnion:"⊔",squarf:"▪",squ:"□",squf:"▪",srarr:"→",Sscr:"𝒮",sscr:"𝓈",ssetmn:"∖",ssmile:"⌣",sstarf:"⋆",Star:"⋆",star:"☆",starf:"★",straightepsilon:"ϵ",straightphi:"ϕ",strns:"¯",sub:"⊂",Sub:"⋐",subdot:"⪽",subE:"⫅",sube:"⊆",subedot:"⫃",submult:"⫁",subnE:"⫋",subne:"⊊",subplus:"⪿",subrarr:"⥹",subset:"⊂",Subset:"⋐",subseteq:"⊆",subseteqq:"⫅",SubsetEqual:"⊆",subsetneq:"⊊",subsetneqq:"⫋",subsim:"⫇",subsub:"⫕",subsup:"⫓",succapprox:"⪸",succ:"≻",succcurlyeq:"≽",Succeeds:"≻",SucceedsEqual:"⪰",SucceedsSlantEqual:"≽",SucceedsTilde:"≿",succeq:"⪰",succnapprox:"⪺",succneqq:"⪶",succnsim:"⋩",succsim:"≿",SuchThat:"∋",sum:"∑",Sum:"∑",sung:"♪",sup1:"¹",sup2:"²",sup3:"³",sup:"⊃",Sup:"⋑",supdot:"⪾",supdsub:"⫘",supE:"⫆",supe:"⊇",supedot:"⫄",Superset:"⊃",SupersetEqual:"⊇",suphsol:"⟉",suphsub:"⫗",suplarr:"⥻",supmult:"⫂",supnE:"⫌",supne:"⊋",supplus:"⫀",supset:"⊃",Supset:"⋑",supseteq:"⊇",supseteqq:"⫆",supsetneq:"⊋",supsetneqq:"⫌",supsim:"⫈",supsub:"⫔",supsup:"⫖",swarhk:"⤦",swarr:"↙",swArr:"⇙",swarrow:"↙",swnwar:"⤪",szlig:"ß",Tab:"\t",target:"⌖",Tau:"Τ",tau:"τ",tbrk:"⎴",Tcaron:"Ť",tcaron:"ť",Tcedil:"Ţ",tcedil:"ţ",Tcy:"Т",tcy:"т",tdot:"⃛",telrec:"⌕",Tfr:"𝔗",tfr:"𝔱",there4:"∴",therefore:"∴",Therefore:"∴",Theta:"Θ",theta:"θ",thetasym:"ϑ",thetav:"ϑ",thickapprox:"≈",thicksim:"∼",ThickSpace:"  ",ThinSpace:" ",thinsp:" ",thkap:"≈",thksim:"∼",THORN:"Þ",thorn:"þ",tilde:"˜",Tilde:"∼",TildeEqual:"≃",TildeFullEqual:"≅",TildeTilde:"≈",timesbar:"⨱",timesb:"⊠",times:"×",timesd:"⨰",tint:"∭",toea:"⤨",topbot:"⌶",topcir:"⫱",top:"⊤",Topf:"𝕋",topf:"𝕥",topfork:"⫚",tosa:"⤩",tprime:"‴",trade:"™",TRADE:"™",triangle:"▵",triangledown:"▿",triangleleft:"◃",trianglelefteq:"⊴",triangleq:"≜",triangleright:"▹",trianglerighteq:"⊵",tridot:"◬",trie:"≜",triminus:"⨺",TripleDot:"⃛",triplus:"⨹",trisb:"⧍",tritime:"⨻",trpezium:"⏢",Tscr:"𝒯",tscr:"𝓉",TScy:"Ц",tscy:"ц",TSHcy:"Ћ",tshcy:"ћ",Tstrok:"Ŧ",tstrok:"ŧ",twixt:"≬",twoheadleftarrow:"↞",twoheadrightarrow:"↠",Uacute:"Ú",uacute:"ú",uarr:"↑",Uarr:"↟",uArr:"⇑",Uarrocir:"⥉",Ubrcy:"Ў",ubrcy:"ў",Ubreve:"Ŭ",ubreve:"ŭ",Ucirc:"Û",ucirc:"û",Ucy:"У",ucy:"у",udarr:"⇅",Udblac:"Ű",udblac:"ű",udhar:"⥮",ufisht:"⥾",Ufr:"𝔘",ufr:"𝔲",Ugrave:"Ù",ugrave:"ù",uHar:"⥣",uharl:"↿",uharr:"↾",uhblk:"▀",ulcorn:"⌜",ulcorner:"⌜",ulcrop:"⌏",ultri:"◸",Umacr:"Ū",umacr:"ū",uml:"¨",UnderBar:"_",UnderBrace:"⏟",UnderBracket:"⎵",UnderParenthesis:"⏝",Union:"⋃",UnionPlus:"⊎",Uogon:"Ų",uogon:"ų",Uopf:"𝕌",uopf:"𝕦",UpArrowBar:"⤒",uparrow:"↑",UpArrow:"↑",Uparrow:"⇑",UpArrowDownArrow:"⇅",updownarrow:"↕",UpDownArrow:"↕",Updownarrow:"⇕",UpEquilibrium:"⥮",upharpoonleft:"↿",upharpoonright:"↾",uplus:"⊎",UpperLeftArrow:"↖",UpperRightArrow:"↗",upsi:"υ",Upsi:"ϒ",upsih:"ϒ",Upsilon:"Υ",upsilon:"υ",UpTeeArrow:"↥",UpTee:"⊥",upuparrows:"⇈",urcorn:"⌝",urcorner:"⌝",urcrop:"⌎",Uring:"Ů",uring:"ů",urtri:"◹",Uscr:"𝒰",uscr:"𝓊",utdot:"⋰",Utilde:"Ũ",utilde:"ũ",utri:"▵",utrif:"▴",uuarr:"⇈",Uuml:"Ü",uuml:"ü",uwangle:"⦧",vangrt:"⦜",varepsilon:"ϵ",varkappa:"ϰ",varnothing:"∅",varphi:"ϕ",varpi:"ϖ",varpropto:"∝",varr:"↕",vArr:"⇕",varrho:"ϱ",varsigma:"ς",varsubsetneq:"⊊︀",varsubsetneqq:"⫋︀",varsupsetneq:"⊋︀",varsupsetneqq:"⫌︀",vartheta:"ϑ",vartriangleleft:"⊲",vartriangleright:"⊳",vBar:"⫨",Vbar:"⫫",vBarv:"⫩",Vcy:"В",vcy:"в",vdash:"⊢",vDash:"⊨",Vdash:"⊩",VDash:"⊫",Vdashl:"⫦",veebar:"⊻",vee:"∨",Vee:"⋁",veeeq:"≚",vellip:"⋮",verbar:"|",Verbar:"‖",vert:"|",Vert:"‖",VerticalBar:"∣",VerticalLine:"|",VerticalSeparator:"❘",VerticalTilde:"≀",VeryThinSpace:" ",Vfr:"𝔙",vfr:"𝔳",vltri:"⊲",vnsub:"⊂⃒",vnsup:"⊃⃒",Vopf:"𝕍",vopf:"𝕧",vprop:"∝",vrtri:"⊳",Vscr:"𝒱",vscr:"𝓋",vsubnE:"⫋︀",vsubne:"⊊︀",vsupnE:"⫌︀",vsupne:"⊋︀",Vvdash:"⊪",vzigzag:"⦚",Wcirc:"Ŵ",wcirc:"ŵ",wedbar:"⩟",wedge:"∧",Wedge:"⋀",wedgeq:"≙",weierp:"℘",Wfr:"𝔚",wfr:"𝔴",Wopf:"𝕎",wopf:"𝕨",wp:"℘",wr:"≀",wreath:"≀",Wscr:"𝒲",wscr:"𝓌",xcap:"⋂",xcirc:"◯",xcup:"⋃",xdtri:"▽",Xfr:"𝔛",xfr:"𝔵",xharr:"⟷",xhArr:"⟺",Xi:"Ξ",xi:"ξ",xlarr:"⟵",xlArr:"⟸",xmap:"⟼",xnis:"⋻",xodot:"⨀",Xopf:"𝕏",xopf:"𝕩",xoplus:"⨁",xotime:"⨂",xrarr:"⟶",xrArr:"⟹",Xscr:"𝒳",xscr:"𝓍",xsqcup:"⨆",xuplus:"⨄",xutri:"△",xvee:"⋁",xwedge:"⋀",Yacute:"Ý",yacute:"ý",YAcy:"Я",yacy:"я",Ycirc:"Ŷ",ycirc:"ŷ",Ycy:"Ы",ycy:"ы",yen:"¥",Yfr:"𝔜",yfr:"𝔶",YIcy:"Ї",yicy:"ї",Yopf:"𝕐",yopf:"𝕪",Yscr:"𝒴",yscr:"𝓎",YUcy:"Ю",yucy:"ю",yuml:"ÿ",Yuml:"Ÿ",Zacute:"Ź",zacute:"ź",Zcaron:"Ž",zcaron:"ž",Zcy:"З",zcy:"з",Zdot:"Ż",zdot:"ż",zeetrf:"ℨ",ZeroWidthSpace:"​",Zeta:"Ζ",zeta:"ζ",zfr:"𝔷",Zfr:"ℨ",ZHcy:"Ж",zhcy:"ж",zigrarr:"⇝",zopf:"𝕫",Zopf:"ℤ",Zscr:"𝒵",zscr:"𝓏",zwj:"‍",zwnj:"‌",default:wt}),Lt={Aacute:"Á",aacute:"á",Acirc:"Â",acirc:"â",acute:"´",AElig:"Æ",aelig:"æ",Agrave:"À",agrave:"à",amp:"&",AMP:"&",Aring:"Å",aring:"å",Atilde:"Ã",atilde:"ã",Auml:"Ä",auml:"ä",brvbar:"¦",Ccedil:"Ç",ccedil:"ç",cedil:"¸",cent:"¢",copy:"©",COPY:"©",curren:"¤",deg:"°",divide:"÷",Eacute:"É",eacute:"é",Ecirc:"Ê",ecirc:"ê",Egrave:"È",egrave:"è",ETH:"Ð",eth:"ð",Euml:"Ë",euml:"ë",frac12:"½",frac14:"¼",frac34:"¾",gt:">",GT:">",Iacute:"Í",iacute:"í",Icirc:"Î",icirc:"î",iexcl:"¡",Igrave:"Ì",igrave:"ì",iquest:"¿",Iuml:"Ï",iuml:"ï",laquo:"«",lt:"<",LT:"<",macr:"¯",micro:"µ",middot:"·",nbsp:" ",not:"¬",Ntilde:"Ñ",ntilde:"ñ",Oacute:"Ó",oacute:"ó",Ocirc:"Ô",ocirc:"ô",Ograve:"Ò",ograve:"ò",ordf:"ª",ordm:"º",Oslash:"Ø",oslash:"ø",Otilde:"Õ",otilde:"õ",Ouml:"Ö",ouml:"ö",para:"¶",plusmn:"±",pound:"£",quot:'"',QUOT:'"',raquo:"»",reg:"®",REG:"®",sect:"§",shy:"­",sup1:"¹",sup2:"²",sup3:"³",szlig:"ß",THORN:"Þ",thorn:"þ",times:"×",Uacute:"Ú",uacute:"ú",Ucirc:"Û",ucirc:"û",Ugrave:"Ù",ugrave:"ù",uml:"¨",Uuml:"Ü",uuml:"ü",Yacute:"Ý",yacute:"ý",yen:"¥",yuml:"ÿ"},Ot=Object.freeze({__proto__:null,Aacute:"Á",aacute:"á",Acirc:"Â",acirc:"â",acute:"´",AElig:"Æ",aelig:"æ",Agrave:"À",agrave:"à",amp:"&",AMP:"&",Aring:"Å",aring:"å",Atilde:"Ã",atilde:"ã",Auml:"Ä",auml:"ä",brvbar:"¦",Ccedil:"Ç",ccedil:"ç",cedil:"¸",cent:"¢",copy:"©",COPY:"©",curren:"¤",deg:"°",divide:"÷",Eacute:"É",eacute:"é",Ecirc:"Ê",ecirc:"ê",Egrave:"È",egrave:"è",ETH:"Ð",eth:"ð",Euml:"Ë",euml:"ë",frac12:"½",frac14:"¼",frac34:"¾",gt:">",GT:">",Iacute:"Í",iacute:"í",Icirc:"Î",icirc:"î",iexcl:"¡",Igrave:"Ì",igrave:"ì",iquest:"¿",Iuml:"Ï",iuml:"ï",laquo:"«",lt:"<",LT:"<",macr:"¯",micro:"µ",middot:"·",nbsp:" ",not:"¬",Ntilde:"Ñ",ntilde:"ñ",Oacute:"Ó",oacute:"ó",Ocirc:"Ô",ocirc:"ô",Ograve:"Ò",ograve:"ò",ordf:"ª",ordm:"º",Oslash:"Ø",oslash:"ø",Otilde:"Õ",otilde:"õ",Ouml:"Ö",ouml:"ö",para:"¶",plusmn:"±",pound:"£",quot:'"',QUOT:'"',raquo:"»",reg:"®",REG:"®",sect:"§",shy:"­",sup1:"¹",sup2:"²",sup3:"³",szlig:"ß",THORN:"Þ",thorn:"þ",times:"×",Uacute:"Ú",uacute:"ú",Ucirc:"Û",ucirc:"û",Ugrave:"Ù",ugrave:"ù",uml:"¨",Uuml:"Ü",uuml:"ü",Yacute:"Ý",yacute:"ý",yen:"¥",yuml:"ÿ",default:Lt}),Ct={amp:"&",apos:"'",gt:">",lt:"<",quot:'"'},yt=Object.freeze({__proto__:null,amp:"&",apos:"'",gt:">",lt:"<",quot:'"',default:Ct}),xt=be(Object.freeze({__proto__:null,default:{0:65533,128:8364,130:8218,131:402,132:8222,133:8230,134:8224,135:8225,136:710,137:8240,138:352,139:8249,140:338,142:381,145:8216,146:8217,147:8220,148:8221,149:8226,150:8211,151:8212,152:732,153:8482,154:353,155:8250,156:339,158:382,159:376}})),_t=Ee((function(e,t){var r=Te&&Te.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var n=r(xt);t.default=function(e){if(e>=55296&&e<=57343||e>1114111)return"�";e in n.default&&(e=n.default[e]);var t="";return e>65535&&(e-=65536,t+=String.fromCharCode(e>>>10&1023|55296),e=56320|1023&e),t+=String.fromCharCode(e)}}));fe(_t);var Dt=be(Nt),Rt=be(Ot),qt=be(yt),Pt=Ee((function(e,t){var r=Te&&Te.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.decodeHTML=t.decodeHTMLStrict=t.decodeXML=void 0;var n=r(Dt),i=r(Rt),o=r(qt),s=r(_t);function a(e){var t=Object.keys(e).join("|"),r=c(e),n=new RegExp("&(?:"+(t+="|#[xX][\\da-fA-F]+|#\\d+")+");","g");return function(e){return String(e).replace(n,r)}}t.decodeXML=a(o.default),t.decodeHTMLStrict=a(n.default);var l=function(e,t){return e<t?1:-1};function c(e){return function(t){if("#"===t.charAt(1)){var r=t.charAt(2);return"X"===r||"x"===r?s.default(parseInt(t.substr(3),16)):s.default(parseInt(t.substr(2),10))}return e[t.slice(1,-1)]}}t.decodeHTML=function(){for(var e=Object.keys(i.default).sort(l),t=Object.keys(n.default).sort(l),r=0,o=0;r<t.length;r++)e[o]===t[r]?(t[r]+=";?",o++):t[r]+=";";var s=new RegExp("&(?:"+t.join("|")+"|#[xX][\\da-fA-F]+;?|#\\d+;?)","g"),a=c(n.default);function u(e){return";"!==e.substr(-1)&&(e+=";"),a(e)}return function(e){return String(e).replace(s,u)}}()}));fe(Pt);Pt.decodeHTML,Pt.decodeHTMLStrict;var kt=Pt.decodeXML;class Ft{constructor(){this.options={attributeNamePrefix:"",ignoreNameSpace:!0,ignoreAttributes:!1,parseAttributeValue:!0,attrValueProcessor:e=>kt(e)}}parse(e){return It(e,this.options)}}function Bt(e,t){return""===e?t?{}:void 0:e}function Vt(e,t=!1){if(null==e)return[];let r;return r=Array.isArray(e)?e.map(e=>Bt(e,t)):[Bt(e,t)],r.filter(e=>e)}class Mt{constructor(){this.participantsById=new Map,this.participantsByProcessRef=new Map,this.processes=new Map,this.messageFlows=new Map,this.flowNodes=new Map,this.lanes=new Map,this.sequenceFlows=new Map,this.associationFlows=new Map,this.eventDefinitionsOfDefinitions=new Map,this.globalTaskIds=[]}findParticipantById(e){return this.participantsById.get(e)}findParticipantByProcessRef(e){return this.participantsByProcessRef.get(e)}registerParticipant(e){this.participantsById.set(e.id,e),e.processRef&&this.participantsByProcessRef.set(e.processRef,e)}_findProcess(e){return this.processes.get(e)}registerProcess(e){this.processes.set(e.id,e)}findProcess(e){const r=this.findParticipantById(e);if(r){const e=this._findProcess(r.processRef);if(e){const t=r.name||e.name;return new T(r.id,t,e.kind,e.parentId)}return new T(r.id,r.name,t.POOL)}}findMessageFlow(e){return this.messageFlows.get(e)}registerMessageFlow(e){this.messageFlows.set(e.id,e)}findFlowNode(e){return this.flowNodes.get(e)}registerFlowNode(e){this.flowNodes.set(e.id,e)}findLane(e){return this.lanes.get(e)}registerLane(e){this.lanes.set(e.id,e)}findSequenceFlow(e){return this.sequenceFlows.get(e)}registerSequenceFlow(e){this.sequenceFlows.set(e.id,e)}findAssociationFlow(e){return this.associationFlows.get(e)}registerAssociationFlow(e){this.associationFlows.set(e.id,e)}findEventDefinitionOfDefinitions(e){return this.eventDefinitionsOfDefinitions.get(e)}registerEventDefinitionsOfDefinitions(e,t){this.eventDefinitionsOfDefinitions.set(e,t)}isGlobalTask(e){return this.globalTaskIds.includes(e)}registerGlobalTask(e){this.globalTaskIds.push(e)}}class Ut{constructor(e){this.convertedElements=e}deserialize(e){try{Vt(e).forEach(e=>this.parseCollaboration(e))}catch(e){console.error(e)}}parseCollaboration(e){this.buildParticipant(e.participant),this.buildMessageFlows(e.messageFlow)}buildParticipant(e){Vt(e).forEach(e=>{this.convertedElements.registerParticipant(new I(e.id,e.name,e.processRef))})}buildMessageFlows(e){Vt(e).forEach(e=>{this.convertedElements.registerMessageFlow(new L(e.id,e.name,e.sourceRef,e.targetRef))})}}class Gt{constructor(e){this.convertedElements=e,this.defaultSequenceFlowIds=[]}deserialize(e){try{Vt(e).forEach(e=>this.parseProcess(e))}catch(e){console.error(e)}}parseProcess(e){this.convertedElements.registerProcess(new T(e.id,e.name,t.POOL)),this.buildProcessInnerElements(e)}buildProcessInnerElements(e){const r=e.id;h.flowNodeKinds().filter(e=>e!=t.EVENT_BOUNDARY).forEach(t=>this.buildFlowNodeBpmnElements(r,e[t],t)),this.buildFlowNodeBpmnElements(r,e.boundaryEvent,t.EVENT_BOUNDARY),this.buildLaneBpmnElements(r,e[t.LANE]),this.buildLaneSetBpmnElements(r,e.laneSet),this.buildSequenceFlows(e[p.SEQUENCE_FLOW]),this.buildAssociationFlows(e[p.ASSOCIATION_FLOW])}buildFlowNodeBpmnElements(e,r,n){Vt(r).forEach(r=>{let i;if(h.isEvent(n))i=this.buildShapeBpmnEvent(r,n,e);else if(h.isActivity(n))i=this.buildShapeBpmnActivity(r,n,e);else{const o=n===t.TEXT_ANNOTATION?r.text:r.name;i=new T(r.id,o,n,e,r.instantiate)}const o=r.default;h.isWithDefaultSequenceFlow(n)&&o&&this.defaultSequenceFlowIds.push(o),i&&this.convertedElements.registerFlowNode(i)})}buildShapeBpmnActivity(t,r,n){const i=this.buildMarkers(t);return h.isSubProcess(r)?this.buildShapeBpmnSubProcess(t,n,i):h.isCallActivity(r)?this.convertedElements.isGlobalTask(t.calledElement)?void 0:new E(t.id,t.name,e.CALLING_PROCESS,n,i):new f(t.id,t.name,r,n,t.instantiate,i)}buildMarkers(e){const t=[],r=e.standardLoopCharacteristics,n=Vt(e.multiInstanceLoopCharacteristics,!0)[0];return r||""===r?t.push(o.LOOP):n&&n.isSequential?t.push(o.MULTI_INSTANCE_SEQUENTIAL):(n&&!n.isSequential||""===n)&&t.push(o.MULTI_INSTANCE_PARALLEL),t}buildShapeBpmnEvent(e,t,n){const o=this.getEventDefinitions(e),s=o.map(e=>e.counter).reduce((e,t)=>e+t,0);if(0==s&&h.canHaveNoneEvent(t))return new v(e.id,e.name,t,r.NONE,n);if(1==s){const r=o[0].kind;if(i.includes(r))return h.isBoundaryEvent(t)?this.buildShapeBpmnBoundaryEvent(e,r):h.isStartEvent(t)?new S(e.id,e.name,r,n,e.isInterrupting):new v(e.id,e.name,t,r,n)}}buildShapeBpmnBoundaryEvent(e,t){const r=this.convertedElements.findFlowNode(e.attachedToRef);if(h.isActivity(null==r?void 0:r.kind))return new A(e.id,e.name,t,e.attachedToRef,e.cancelActivity);console.warn("The boundary event %s must be attach to an activity, and not to %s",e.id,null==r?void 0:r.kind)}getEventDefinitions(e){const t=new Map;return n.forEach(r=>{const n=Vt(e[r+"EventDefinition"],!0).length;t.set(r,n)}),Vt(e.eventDefinitionRef).forEach(e=>{const r=this.convertedElements.findEventDefinitionOfDefinitions(e);t.set(r,t.get(r)+1)}),Array.from(t.keys()).map(e=>({kind:e,counter:t.get(e)})).filter(e=>e.counter>0)}buildShapeBpmnSubProcess(e,t,r){return this.buildSubProcessInnerElements(e),e.triggeredByEvent?new b(e.id,e.name,s.EVENT,t,r):new b(e.id,e.name,s.EMBEDDED,t,r)}buildSubProcessInnerElements(e){this.buildProcessInnerElements(e)}buildLaneSetBpmnElements(e,t){Vt(t).forEach(t=>{this.buildLaneBpmnElements(e,t.lane)})}buildLaneBpmnElements(e,r){Vt(r).forEach(r=>{var n;this.convertedElements.registerLane(new T(r.id,r.name,t.LANE,e)),this.assignParentOfLaneFlowNodes(r),(null===(n=r.childLaneSet)||void 0===n?void 0:n.lane)&&this.buildLaneBpmnElements(r.id,r.childLaneSet.lane)})}assignParentOfLaneFlowNodes(e){Vt(e.flowNodeRef).forEach(t=>{const r=this.convertedElements.findFlowNode(t),n=e.id;r?h.isBoundaryEvent(r.kind)||(r.parentId=n):console.warn("Unable to assign lane %s as parent: flow node %s is not found",n,t)})}buildSequenceFlows(e){Vt(e).forEach(e=>{const t=this.getSequenceFlowKind(e);this.convertedElements.registerSequenceFlow(new N(e.id,e.name,e.sourceRef,e.targetRef,t))})}buildAssociationFlows(e){Vt(e).forEach(e=>{const t=e.associationDirection;this.convertedElements.registerAssociationFlow(new O(e.id,void 0,e.sourceRef,e.targetRef,t))})}getSequenceFlowKind(e){if(this.defaultSequenceFlowIds.includes(e.id))return a.DEFAULT;{const t=this.convertedElements.findFlowNode(e.sourceRef);if(t&&h.isWithDefaultSequenceFlow(t.kind)&&e.conditionExpression)return h.isActivity(t.kind)?a.CONDITIONAL_FROM_ACTIVITY:a.CONDITIONAL_FROM_GATEWAY}return a.NORMAL}}class Ht{constructor(e,t,r,n){this.x=e,this.y=t,this.width=r,this.height=n}}class Yt{constructor(e,t,r,n,i=se.NONE){this.id=e,this.bpmnElement=t,this.waypoints=r,this.label=n,this.messageVisibleKind=i}}class jt{constructor(e,t){this.x=e,this.y=t}}class Kt{constructor(e,t){this.font=e,this.bounds=t}}class Wt{constructor(e,t,r,n,i,o){this.name=e,this.size=t,this.isBold=r,this.isItalic=n,this.isUnderline=i,this.isStrikeThrough=o}}class zt{constructor(e){this.convertedElements=e,this.convertedFonts=new Map}deserialize(e){const t=[],r=[],n=[],i=[],o=Vt(e)[0];if(o)try{this.deserializeFonts(o.BPMNLabelStyle);const e=o.BPMNPlane,s=this.deserializeEdges(e.BPMNEdge),a=this.deserializeShapes(e.BPMNShape);t.push(...a.flowNodes),r.push(...a.lanes),n.push(...a.pools),i.push(...s)}catch(e){console.error(e)}return{flowNodes:t,lanes:r,pools:n,edges:i}}deserializeFonts(e){this.convertedFonts=new Map,Vt(e).forEach(e=>{Vt(e.Font).forEach(t=>{this.convertedFonts.set(e.id,new Wt(t.name,t.size,t.isBold,t.isItalic,t.isUnderline,t.isStrikeThrough))})})}deserializeShapes(e){const t={flowNodes:[],lanes:[],pools:[]};e=Vt(e);for(let r=0;r<e.length;r++){const n=e[r],i=this.deserializeShape(n,e=>this.convertedElements.findFlowNode(e));if(i){t.flowNodes.push(i);continue}const o=this.deserializeShape(n,e=>this.convertedElements.findLane(e));if(o){t.lanes.push(o);continue}const s=this.deserializeShape(n,e=>this.convertedElements.findProcess(e));s?t.pools.push(s):console.warn("Shape json deserialization: unable to find bpmn element with id %s",n.bpmnElement)}return t}deserializeShape(e,t){const r=t(e.bpmnElement);if(r){const t=this.deserializeBounds(e);if(r.parentId){const e=this.convertedElements.findParticipantByProcessRef(r.parentId);e&&(r.parentId=e.id)}let n;(r instanceof b||r instanceof E)&&!e.isExpanded&&r.markers.push(o.EXPAND),h.isPoolOrLane(r.kind)&&(n=void 0===e.isHorizontal||e.isHorizontal);const i=this.deserializeLabel(e.BPMNLabel,e.id);return new m(e.id,r,t,i,n)}}deserializeBounds(e){const t=e.Bounds;if(t)return new Ht(t.x,t.y,t.width,t.height)}deserializeEdges(e){return Vt(e).map(e=>{const t=this.convertedElements.findSequenceFlow(e.bpmnElement)||this.convertedElements.findMessageFlow(e.bpmnElement)||this.convertedElements.findAssociationFlow(e.bpmnElement),r=this.deserializeWaypoints(e.waypoint),n=this.deserializeLabel(e.BPMNLabel,e.id),i=e.messageVisibleKind?e.messageVisibleKind:se.NONE;return new Yt(e.id,t,r,n,i)})}deserializeWaypoints(e){return Vt(e).map(e=>new jt(e.x,e.y))}deserializeLabel(e,t){if(e&&"object"==typeof e){const r=this.findFont(e.labelStyle,t),n=this.deserializeBounds(e);if(r||n)return new Kt(r,n)}}findFont(e,t){let r;return e&&(r=this.convertedFonts.get(e),r||console.warn("Unable to assign font from style %s to shape/edge %s",e,t)),r}}class Xt{constructor(e){this.convertedElements=e}deserialize(e){try{n.forEach(t=>{Vt(e[t+"EventDefinition"],!0).forEach(e=>{this.convertedElements.registerEventDefinitionsOfDefinitions(e.id,t)})})}catch(e){console.error(e)}}}class Zt{constructor(e){this.convertedElements=e}deserialize(e){try{this.parseGlobalTasks(e.globalTask),this.parseGlobalTasks(e.globalBusinessRuleTask),this.parseGlobalTasks(e.globalManualTask),this.parseGlobalTasks(e.globalScriptTask),this.parseGlobalTasks(e.globalUserTask)}catch(e){console.error(e)}}parseGlobalTasks(e){Vt(e).forEach(e=>{this.convertedElements.registerGlobalTask(e.id)})}}class Jt{constructor(e,t,r,n,i){this.collaborationConverter=e,this.eventDefinitionConverter=t,this.globalTaskConverter=r,this.processConverter=n,this.diagramConverter=i}parse(e){const t=e.definitions;return this.collaborationConverter.deserialize(t.collaboration),this.eventDefinitionConverter.deserialize(t),this.globalTaskConverter.deserialize(t),this.processConverter.deserialize(t.process),this.diagramConverter.deserialize(t.BPMNDiagram)}}class Qt{constructor(e,t){this.jsonParser=e,this.xmlParser=t}parse(e){const t=this.xmlParser.parse(e);return this.jsonParser.parse(t)}}function $t(){return new Qt(function(){const e=new Mt;return new Jt(new Ut(e),new Xt(e),new Zt(e),new Gt(e),new zt(e))}(),new Ft)}class er{constructor(e,t){this.container=e;try{mxClient.isBrowserSupported()||mxUtils.error("Browser is not supported!",200,!1);const e=new he(this.container);this.graph=e.configure(t)}catch(e){throw mxUtils.alert("Cannot start application: "+e.message),e}}load(e,t){try{const n=$t().parse(e);(r=this.graph,new me(r,new ge(r),new C(r))).render(n,null==t?void 0:t.fitType)}catch(e){throw mxUtils.alert("Cannot load bpmn diagram: "+e.message),e}var r}}function tr(e){"complete"===document.readyState||"interactive"===document.readyState?setTimeout(e,1):document.addEventListener("DOMContentLoaded",e)}function rr(e,t,...r){console.info(e+" "+t,...r)}function nr(e,...t){rr("[DEMO STARTUP]",e,...t)}function ir(e,...t){rr("[DEMO]",e,...t)}class or{constructor(e,t,r,n){this.window=e,this.outerContainerId=t,this.containerToFadeId=r,this.dropCallback=n,this.document=e.document,this.head=document.head,this.body=document.body,this.initializeDragAndDrop()}initializeDragAndDrop(){this.addDomElements(),this.addStyle();const e=document.getElementById(this.outerContainerId),t=document.getElementById(this.containerToFadeId);this.preventDefaultsOnEvents(["dragover","drop"],this.window),this.preventDefaultsOnEvents(["dragover","dragleave","drop"],e),this.addEventsOnDropContainer(e,t),this.addEventsOnDocument(this.outerContainerId,t)}preventDefaults(e){e.preventDefault(),e.stopPropagation()}preventDefaultsOnEvents(e,t){e.forEach(e=>{t.addEventListener(e,this.preventDefaults,!1)})}addDomElements(){const e=this.document.createElement("p");e.textContent="open BPMN diagram";const t=this.document.createElement("div");t.classList.add("drop-here-text"),t.appendChild(e);const r=this.document.createElement("div");r.id=this.outerContainerId,r.appendChild(t),this.body.insertBefore(r,this.body.firstChild)}addStyle(){const e=`\n#${this.containerToFadeId} {\n    opacity: 1;\n}\n#${this.containerToFadeId}.faded {\n    opacity: 0.1;\n}\n#${this.outerContainerId} {\n    overflow: hidden;\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    bottom: 10px;\n    left: 10px;\n    font-weight: bold;\n    text-align: center;\n    color: #555;\n}\n#${this.outerContainerId} .drop-here-text {\n    display: none;\n    border: 2px solid transparent;\n    width: 98%;\n    height: 98%;\n    margin: 1%;\n    overflow: hidden;\n}\n#${this.outerContainerId} .drop-here-text p {\n    margin-top: 45%;\n    font-style: normal;\n    font-family: monospace;\n    font-size: 40px;\n    color: rgba(1,1,1,.2);\n}\n#${this.outerContainerId}.dragging  .drop-here-text {\n    cursor: default;\n    display: block;\n    border: 2px dashed #555;\n    border-radius: 7px;\n}`,t=document.createElement("style");t.appendChild(document.createTextNode(e)),this.head.appendChild(t)}addEventsOnDropContainer(e,t){e.addEventListener("dragover",this.getAddClassCallback(t,!1),!1),e.addEventListener("mousedown",this.getRemoveClassCallback(t,!1),!1),e.addEventListener("drop",this.getDropCallbackForElement(t,!1,this.dropCallback),!1)}addEventsOnDocument(e,t){this.document.addEventListener("dragover",this.getAddClassCallback(t,!0,e),!1),this.document.addEventListener("dragleave",this.getRemoveClassCallback(t,!0,e),!1),this.document.addEventListener("drop",this.getDropCallbackForElement(t,!0,this.dropCallback,e),!1)}getAddClassCallback(e,t,r){return function(){t?this.querySelector("#"+r).classList.add("dragging"):this.classList.add("dragging"),e.classList.add("faded")}}getRemoveClassCallback(e,t,r){return function(){t?this.querySelector("#"+r).classList.remove("dragging"):this.classList.remove("dragging"),e.classList.remove("faded")}}getDropCallbackForElement(e,t,r,n){return function(i){try{const o=i.dataTransfer.files;r(o[0])}catch(e){console.error(e)}finally{t?this.querySelector("#"+n).classList.remove("dragging"):this.classList.remove("dragging"),e.classList.remove("faded")}}}}let sr,ar={};function lr(e){ar.fitType=ae[e.target.value]}function cr(e){ir("Loading bpmn...."),sr.load(e,ar),ir("BPMN loaded")}function ur(e){const t=new FileReader;t.onload=()=>{cr(t.result)},t.readAsText(e)}function pr(e){ur(e.target.files[0])}function dr(e,t){(function(e){return ir("Fetching BPMN content from url "+e),fetch(e).then(e=>{if(!e.ok)throw Error(String(e.status));return e.text()})})(e).catch(r=>{const n=`Unable to fetch ${e}. ${r}`;throw t(n),new Error(n)}).then(e=>(ir("BPMN content fetched"),e)).then(t=>{cr(t),ir("Bpmn loaded from url "+e)})}function hr(e){console.error(e)}function gr(e){const t=nr,r=e.container;t(`Initializing BpmnVisualization with container '${r}'...`),sr=new er(window.document.getElementById(r),e.globalOptions),t("Initialization completed"),new or(window,"drop-container",r,ur),t("Drag&Drop support initialized");const n=new URLSearchParams(window.location.search);t("Configure load loadOptions"),ar=e.loadOptions||{};const i=n.get("fitType");i&&(ar.fitType=ae[i]),t("Checking if 'BPMN content' is provided as query parameter");const o=n.get("bpmn");if(o){const e=decodeURIComponent(o);return t("Received bpmn length: "+e.length),t("Received bpmn content: "+e),t("BPMN auto loading"),cr(e),void t("BPMN content loading completed")}t("No 'BPMN content' provided"),t("Checking if an 'url to fetch BPMN content' is provided as query parameter");const s=n.get("url");if(s){dr(decodeURIComponent(s),e.statusFetchKoNotifier||hr)}else t("No 'url to fetch BPMN content' provided")}export{er as BpmnVisualization,ae as FitType,D as IconPainter,R as IconPainterProvider,l as MarkerIdentifier,e as ShapeBpmnCallActivityKind,t as ShapeBpmnElementKind,r as ShapeBpmnEventKind,o as ShapeBpmnMarkerKind,s as ShapeBpmnSubProcessKind,h as ShapeUtil,C as StyleConfigurator,c as StyleDefault,u as StyleIdentifier,n as bpmnEventKinds,_ as buildPaintParameter,y as computeScaledIconSize,tr as documentReady,pr as handleFileSelect,ir as log,nr as logStartup,gr as startBpmnVisualization,i as supportedBpmnEventKinds,lr as updateFitType};
