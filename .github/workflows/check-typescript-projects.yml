name: Check TypeScript projects
on:
  push:
    branches:
      - master
    paths:
      - '.github/workflows/check-typescript-projects.yml'
      - 'projects/typescript-angular/**/*'
      - 'projects/typescript-vanilla-with-parcel/**/*'
      - 'projects/typescript-vanilla-with-rollup/**/*'
      - 'projects/typescript-vanilla-with-vitejs/**/*'
# TODO exclude md files
  pull_request:
    branches:
      - master
    paths:
      - '.github/workflows/check-typescript-projects.yml'
      - 'projects/typescript-angular/**/*'
      - 'projects/typescript-vanilla-with-parcel/**/*'
      - 'projects/typescript-vanilla-with-rollup/**/*'
      - 'projects/typescript-vanilla-with-vitejs/**/*'
# TODO exclude md files

jobs:
  build_bpmn-visualization_development_npm_package:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'process-analytics/bpmn-visualization-js'
          ref: 'master'
      - name: Build Setup
        uses: ./.github/actions/build-setup
      - name: Build npm package
        run: npm pack
      - name: Upload npm package
        uses: actions/upload-artifact@v3
        with:
          name: bpmn-visualization-npm-package
          path: bpmn-visualization-*.tgz

  build_projects:
    runs-on: ubuntu-20.04
    needs: 'build_bpmn-visualization_development_npm_package'
    strategy:
      # don't cancel running jobs even if one fails
      fail-fast: false
      matrix:
        project: [typescript-angular, typescript-vanilla-with-parcel, typescript-vanilla-with-rollup, typescript-vanilla-with-vitejs]
        bv-npm-package: ['release', 'development']
    defaults:
      run:
        working-directory: ${{github.workspace}}/projects/${{matrix.project}}
    steps:
      - name: Download the bpmn-visualization development npm package
        id: 'download'
        uses: actions/download-artifact@v3
        with:
          name: bpmn-visualization-npm-package
          path: ${{github.workspace}}/../bpmn-visualization-npm-package
      - uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install dependencies
        run: npm install
      - name: Install bpmn-visualization development npm package
        if: ${{ matrix.bv-npm-package == 'development' }}
        # use wildcard as the file contains the version, and we don't know it
        run: npm install ${{steps.download.outputs.download-path}}/bpmn-visualization*.tgz
      - name: Build project
        run: npm run build
      # TODO only if event is pull_request
      - name: Upload project archive
        uses: actions/upload-artifact@v3
        with:
          name: ${{matrix.project}}-${{matrix.bv-npm-package}}
          path: ${{github.workspace}}/projects/${{matrix.project}}/dist

  publish_pr_preview:
# TODO only if event is pull_request
    runs-on: ubuntu-20.04
    needs: 'build_projects'
    permissions:
      pull-requests: write # surge-preview: PR comments
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: tmp
      - name: Display structure of downloaded files
        run: ls -lhR
        working-directory: tmp
      - name: Build the final directories layout
        run: |
          mkdir -p build/development build/release
          cp -R tmp/*-development build/development
          cp -R tmp/*-release build/release
          # remove the '-development' and '-release' postfixes from directory names
          for element in build/development/*-development; do
            mv "$element" "${element%-development}"
          done
          for element in build/release/*-release; do
            mv "$element" "${element%-release}"
          done
      - name: List projects that will be referenced in the home page
        id: list_projects
        run: |
#          development_elements=$(ls build/development/)
#          release_elements=$(ls build/release/)
          # set the outputs
          echo "projects_development=$(ls build/development/)" >> $GITHUB_OUTPUT
          echo "projects_release=$(ls build/release/)" >> $GITHUB_OUTPUT
# TODO create an index page and list all built projects (split list 'release' and 'development' + mention the PR number)
      - name: Create the home page
        env:
          PR_NUMBER: ${{github.event.pull_request.number}}
          PROJECTS_DEVELOPMENT: ${{ steps.list_projects.outputs.projects_development }}
          PROJECTS_RELEASE: ${{ steps.list_projects.outputs.projects_release }}
        run: |
          touch build/index.html
          echo "TypeScript projects for PR#${PR_NUMBER}" >> build/index.html
#          echo "TypeScript projects for PR#${{github.event.pull_request.number}}" >> build/index.html
      - name: Display the final structure of files
        run: |
          ls -lhR build/
          echo "**********************"
          ls -lh ./build
# TODO Angular: directory build to the dist folder, remove the extra "bpmn-visualization-app" subdirectories
# TODO rollup terser: too large bundle: 2.7Mb (use terser plugin) + bump rollup dependencies (including migration to rollup@3)
# TODO publish to surge
      - uses: bonitasoft/actions/packages/surge-preview-tools@v2
        id: surge-preview-tools
        with:
          surge-token: ${{ secrets.SURGE_TOKEN }}
      - name: Manage surge preview
        if: steps.surge-preview-tools.outputs.can-run-surge-command == 'true'
        uses: afc163/surge-preview@v1
        with:
          surge_token: ${{ secrets.SURGE_TOKEN }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # TODO empty????
          dist: build/
          failOnError: true
# TODO explain why we are not handling teardown here (dependencies on other jobs + schedule workflows at organization level in charge of tearing down the old surge domains)
          teardown: 'false'
          build: echo 'Already built!'
      # Fallback when it is not possible to deploy to surge.sh
      - name: Upload artifact (preview not deployed)
        # TODO only if not deploy to surge.sh
#        if: steps.surge-preview-tools.outputs.can-run-surge-command == 'false'
        uses: actions/upload-artifact@v3
        with:
          name: all-typescript-projects-${{github.sha}}
          path: build
